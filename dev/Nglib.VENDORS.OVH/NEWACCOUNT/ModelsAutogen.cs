//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Newtonsoft.Json;
using Nglib.VENDORS.OVH.SHARED;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Threading.Tasks;


// [POST] "/newAccount"  nichandle.NewAccountAndToken--address,area,birthCity,birthDay,city,companyNationalIdentificationNumber,corporationType,country,email,fax,firstname,italianSDI,language,legalform,name,nationalIdentificationNumber,organisation,ovhCompany,ovhSubsidiary,phone,phoneCountry,sex,spareEmail,vat,zip
//[GET] "/newAccount/area"  string[]--country
//[GET] "/newAccount/contracts"  order.Contract[]--company,subsidiary
//[GET] "/newAccount/corporationType"  string[]--country
//[GET] "/newAccount/countries"  nichandle.CountryEnum[]--ovhCompany,ovhSubsidiary
//[GET] "/newAccount/creationRules"  nichandle.CreationRules--country,legalform,ovhCompany,ovhSubsidiary
//[GET] "/newAccount/legalform"  string[]--country
//[POST] "/newAccount/rules"  nichandle.CreationRule[]--action,address,area,birthCity,birthDay,city,companyNationalIdentificationNumber,corporationType,country,email,fax,firstname,italianSDI,language,legalform,name,nationalIdentificationNumber,organisation,ovhCompany,ovhSubsidiary,phone,phoneCountry,sex,spareEmail,vat,zip
namespace Nglib.VENDORS.OVH.NEWACCOUNT {
	
	
	/// <summary>
	/// Countries a nichandle can choose
	/// </summary>
	public enum NichandleCountryEnum {
		
		[EnumMember(Value="AC")]
		AC,
		
		[EnumMember(Value="AD")]
		AD,
		
		[EnumMember(Value="AE")]
		AE,
		
		[EnumMember(Value="AF")]
		AF,
		
		[EnumMember(Value="AG")]
		AG,
		
		[EnumMember(Value="AI")]
		AI,
		
		[EnumMember(Value="AL")]
		AL,
		
		[EnumMember(Value="AM")]
		AM,
		
		[EnumMember(Value="AO")]
		AO,
		
		[EnumMember(Value="AQ")]
		AQ,
		
		[EnumMember(Value="AR")]
		AR,
		
		[EnumMember(Value="AS")]
		AS,
		
		[EnumMember(Value="AT")]
		AT,
		
		[EnumMember(Value="AU")]
		AU,
		
		[EnumMember(Value="AW")]
		AW,
		
		[EnumMember(Value="AX")]
		AX,
		
		[EnumMember(Value="AZ")]
		AZ,
		
		[EnumMember(Value="BA")]
		BA,
		
		[EnumMember(Value="BB")]
		BB,
		
		[EnumMember(Value="BD")]
		BD,
		
		[EnumMember(Value="BE")]
		BE,
		
		[EnumMember(Value="BF")]
		BF,
		
		[EnumMember(Value="BG")]
		BG,
		
		[EnumMember(Value="BH")]
		BH,
		
		[EnumMember(Value="BI")]
		BI,
		
		[EnumMember(Value="BJ")]
		BJ,
		
		[EnumMember(Value="BL")]
		BL,
		
		[EnumMember(Value="BM")]
		BM,
		
		[EnumMember(Value="BN")]
		BN,
		
		[EnumMember(Value="BO")]
		BO,
		
		[EnumMember(Value="BQ")]
		BQ,
		
		[EnumMember(Value="BR")]
		BR,
		
		[EnumMember(Value="BS")]
		BS,
		
		[EnumMember(Value="BT")]
		BT,
		
		[EnumMember(Value="BW")]
		BW,
		
		[EnumMember(Value="BY")]
		BY,
		
		[EnumMember(Value="BZ")]
		BZ,
		
		[EnumMember(Value="CA")]
		CA,
		
		[EnumMember(Value="CC")]
		CC,
		
		[EnumMember(Value="CD")]
		CD,
		
		[EnumMember(Value="CF")]
		CF,
		
		[EnumMember(Value="CG")]
		CG,
		
		[EnumMember(Value="CH")]
		CH,
		
		[EnumMember(Value="CI")]
		CI,
		
		[EnumMember(Value="CK")]
		CK,
		
		[EnumMember(Value="CL")]
		CL,
		
		[EnumMember(Value="CM")]
		CM,
		
		[EnumMember(Value="CN")]
		CN,
		
		[EnumMember(Value="CO")]
		CO,
		
		[EnumMember(Value="CR")]
		CR,
		
		[EnumMember(Value="CU")]
		CU,
		
		[EnumMember(Value="CV")]
		CV,
		
		[EnumMember(Value="CW")]
		CW,
		
		[EnumMember(Value="CX")]
		CX,
		
		[EnumMember(Value="CY")]
		CY,
		
		[EnumMember(Value="CZ")]
		CZ,
		
		[EnumMember(Value="DE")]
		DE,
		
		[EnumMember(Value="DG")]
		DG,
		
		[EnumMember(Value="DJ")]
		DJ,
		
		[EnumMember(Value="DK")]
		DK,
		
		[EnumMember(Value="DM")]
		DM,
		
		[EnumMember(Value="DO")]
		DO,
		
		[EnumMember(Value="DZ")]
		DZ,
		
		[EnumMember(Value="EA")]
		EA,
		
		[EnumMember(Value="EC")]
		EC,
		
		[EnumMember(Value="EE")]
		EE,
		
		[EnumMember(Value="EG")]
		EG,
		
		[EnumMember(Value="EH")]
		EH,
		
		[EnumMember(Value="ER")]
		ER,
		
		[EnumMember(Value="ES")]
		ES,
		
		[EnumMember(Value="ET")]
		ET,
		
		[EnumMember(Value="FI")]
		FI,
		
		[EnumMember(Value="FJ")]
		FJ,
		
		[EnumMember(Value="FK")]
		FK,
		
		[EnumMember(Value="FM")]
		FM,
		
		[EnumMember(Value="FO")]
		FO,
		
		[EnumMember(Value="FR")]
		FR,
		
		[EnumMember(Value="GA")]
		GA,
		
		[EnumMember(Value="GB")]
		GB,
		
		[EnumMember(Value="GD")]
		GD,
		
		[EnumMember(Value="GE")]
		GE,
		
		[EnumMember(Value="GF")]
		GF,
		
		[EnumMember(Value="GG")]
		GG,
		
		[EnumMember(Value="GH")]
		GH,
		
		[EnumMember(Value="GI")]
		GI,
		
		[EnumMember(Value="GL")]
		GL,
		
		[EnumMember(Value="GM")]
		GM,
		
		[EnumMember(Value="GN")]
		GN,
		
		[EnumMember(Value="GP")]
		GP,
		
		[EnumMember(Value="GQ")]
		GQ,
		
		[EnumMember(Value="GR")]
		GR,
		
		[EnumMember(Value="GS")]
		GS,
		
		[EnumMember(Value="GT")]
		GT,
		
		[EnumMember(Value="GU")]
		GU,
		
		[EnumMember(Value="GW")]
		GW,
		
		[EnumMember(Value="GY")]
		GY,
		
		[EnumMember(Value="HK")]
		HK,
		
		[EnumMember(Value="HN")]
		HN,
		
		[EnumMember(Value="HR")]
		HR,
		
		[EnumMember(Value="HT")]
		HT,
		
		[EnumMember(Value="HU")]
		HU,
		
		[EnumMember(Value="IC")]
		IC,
		
		[EnumMember(Value="ID")]
		ID,
		
		[EnumMember(Value="IE")]
		IE,
		
		[EnumMember(Value="IL")]
		IL,
		
		[EnumMember(Value="IM")]
		IM,
		
		[EnumMember(Value="IN")]
		IN,
		
		[EnumMember(Value="IO")]
		IO,
		
		[EnumMember(Value="IQ")]
		IQ,
		
		[EnumMember(Value="IR")]
		IR,
		
		[EnumMember(Value="IS")]
		IS,
		
		[EnumMember(Value="IT")]
		IT,
		
		[EnumMember(Value="JE")]
		JE,
		
		[EnumMember(Value="JM")]
		JM,
		
		[EnumMember(Value="JO")]
		JO,
		
		[EnumMember(Value="JP")]
		JP,
		
		[EnumMember(Value="KE")]
		KE,
		
		[EnumMember(Value="KG")]
		KG,
		
		[EnumMember(Value="KH")]
		KH,
		
		[EnumMember(Value="KI")]
		KI,
		
		[EnumMember(Value="KM")]
		KM,
		
		[EnumMember(Value="KN")]
		KN,
		
		[EnumMember(Value="KP")]
		KP,
		
		[EnumMember(Value="KR")]
		KR,
		
		[EnumMember(Value="KW")]
		KW,
		
		[EnumMember(Value="KY")]
		KY,
		
		[EnumMember(Value="KZ")]
		KZ,
		
		[EnumMember(Value="LA")]
		LA,
		
		[EnumMember(Value="LB")]
		LB,
		
		[EnumMember(Value="LC")]
		LC,
		
		[EnumMember(Value="LI")]
		LI,
		
		[EnumMember(Value="LK")]
		LK,
		
		[EnumMember(Value="LR")]
		LR,
		
		[EnumMember(Value="LS")]
		LS,
		
		[EnumMember(Value="LT")]
		LT,
		
		[EnumMember(Value="LU")]
		LU,
		
		[EnumMember(Value="LV")]
		LV,
		
		[EnumMember(Value="LY")]
		LY,
		
		[EnumMember(Value="MA")]
		MA,
		
		[EnumMember(Value="MC")]
		MC,
		
		[EnumMember(Value="MD")]
		MD,
		
		[EnumMember(Value="ME")]
		ME,
		
		[EnumMember(Value="MF")]
		MF,
		
		[EnumMember(Value="MG")]
		MG,
		
		[EnumMember(Value="MH")]
		MH,
		
		[EnumMember(Value="MK")]
		MK,
		
		[EnumMember(Value="ML")]
		ML,
		
		[EnumMember(Value="MM")]
		MM,
		
		[EnumMember(Value="MN")]
		MN,
		
		[EnumMember(Value="MO")]
		MO,
		
		[EnumMember(Value="MP")]
		MP,
		
		[EnumMember(Value="MQ")]
		MQ,
		
		[EnumMember(Value="MR")]
		MR,
		
		[EnumMember(Value="MS")]
		MS,
		
		[EnumMember(Value="MT")]
		MT,
		
		[EnumMember(Value="MU")]
		MU,
		
		[EnumMember(Value="MV")]
		MV,
		
		[EnumMember(Value="MW")]
		MW,
		
		[EnumMember(Value="MX")]
		MX,
		
		[EnumMember(Value="MY")]
		MY,
		
		[EnumMember(Value="MZ")]
		MZ,
		
		[EnumMember(Value="NA")]
		NA,
		
		[EnumMember(Value="NC")]
		NC,
		
		[EnumMember(Value="NE")]
		NE,
		
		[EnumMember(Value="NF")]
		NF,
		
		[EnumMember(Value="NG")]
		NG,
		
		[EnumMember(Value="NI")]
		NI,
		
		[EnumMember(Value="NL")]
		NL,
		
		[EnumMember(Value="NO")]
		NO,
		
		[EnumMember(Value="NP")]
		NP,
		
		[EnumMember(Value="NR")]
		NR,
		
		[EnumMember(Value="NU")]
		NU,
		
		[EnumMember(Value="NZ")]
		NZ,
		
		[EnumMember(Value="OM")]
		OM,
		
		[EnumMember(Value="PA")]
		PA,
		
		[EnumMember(Value="PE")]
		PE,
		
		[EnumMember(Value="PF")]
		PF,
		
		[EnumMember(Value="PG")]
		PG,
		
		[EnumMember(Value="PH")]
		PH,
		
		[EnumMember(Value="PK")]
		PK,
		
		[EnumMember(Value="PL")]
		PL,
		
		[EnumMember(Value="PM")]
		PM,
		
		[EnumMember(Value="PN")]
		PN,
		
		[EnumMember(Value="PR")]
		PR,
		
		[EnumMember(Value="PS")]
		PS,
		
		[EnumMember(Value="PT")]
		PT,
		
		[EnumMember(Value="PW")]
		PW,
		
		[EnumMember(Value="PY")]
		PY,
		
		[EnumMember(Value="QA")]
		QA,
		
		[EnumMember(Value="RE")]
		RE,
		
		[EnumMember(Value="RO")]
		RO,
		
		[EnumMember(Value="RS")]
		RS,
		
		[EnumMember(Value="RU")]
		RU,
		
		[EnumMember(Value="RW")]
		RW,
		
		[EnumMember(Value="SA")]
		SA,
		
		[EnumMember(Value="SB")]
		SB,
		
		[EnumMember(Value="SC")]
		SC,
		
		[EnumMember(Value="SD")]
		SD,
		
		[EnumMember(Value="SE")]
		SE,
		
		[EnumMember(Value="SG")]
		SG,
		
		[EnumMember(Value="SH")]
		SH,
		
		[EnumMember(Value="SI")]
		SI,
		
		[EnumMember(Value="SJ")]
		SJ,
		
		[EnumMember(Value="SK")]
		SK,
		
		[EnumMember(Value="SL")]
		SL,
		
		[EnumMember(Value="SM")]
		SM,
		
		[EnumMember(Value="SN")]
		SN,
		
		[EnumMember(Value="SO")]
		SO,
		
		[EnumMember(Value="SR")]
		SR,
		
		[EnumMember(Value="SS")]
		SS,
		
		[EnumMember(Value="ST")]
		ST,
		
		[EnumMember(Value="SV")]
		SV,
		
		[EnumMember(Value="SX")]
		SX,
		
		[EnumMember(Value="SY")]
		SY,
		
		[EnumMember(Value="SZ")]
		SZ,
		
		[EnumMember(Value="TA")]
		TA,
		
		[EnumMember(Value="TC")]
		TC,
		
		[EnumMember(Value="TD")]
		TD,
		
		[EnumMember(Value="TF")]
		TF,
		
		[EnumMember(Value="TG")]
		TG,
		
		[EnumMember(Value="TH")]
		TH,
		
		[EnumMember(Value="TJ")]
		TJ,
		
		[EnumMember(Value="TK")]
		TK,
		
		[EnumMember(Value="TL")]
		TL,
		
		[EnumMember(Value="TM")]
		TM,
		
		[EnumMember(Value="TN")]
		TN,
		
		[EnumMember(Value="TO")]
		TO,
		
		[EnumMember(Value="TR")]
		TR,
		
		[EnumMember(Value="TT")]
		TT,
		
		[EnumMember(Value="TV")]
		TV,
		
		[EnumMember(Value="TW")]
		TW,
		
		[EnumMember(Value="TZ")]
		TZ,
		
		[EnumMember(Value="UA")]
		UA,
		
		[EnumMember(Value="UG")]
		UG,
		
		[EnumMember(Value="UM")]
		UM,
		
		[EnumMember(Value="UNKNOWN")]
		UNKNOWN,
		
		[EnumMember(Value="US")]
		US,
		
		[EnumMember(Value="UY")]
		UY,
		
		[EnumMember(Value="UZ")]
		UZ,
		
		[EnumMember(Value="VA")]
		VA,
		
		[EnumMember(Value="VC")]
		VC,
		
		[EnumMember(Value="VE")]
		VE,
		
		[EnumMember(Value="VG")]
		VG,
		
		[EnumMember(Value="VI")]
		VI,
		
		[EnumMember(Value="VN")]
		VN,
		
		[EnumMember(Value="VU")]
		VU,
		
		[EnumMember(Value="WF")]
		WF,
		
		[EnumMember(Value="WS")]
		WS,
		
		[EnumMember(Value="XK")]
		XK,
		
		[EnumMember(Value="YE")]
		YE,
		
		[EnumMember(Value="YT")]
		YT,
		
		[EnumMember(Value="ZA")]
		ZA,
		
		[EnumMember(Value="ZM")]
		ZM,
		
		[EnumMember(Value="ZW")]
		ZW,
	}
	
	/// <summary>
	/// Action a nichandle can perform on his account.
	/// </summary>
	public enum NichandleCreationRulesActionEnum {
		
		[EnumMember(Value="create")]
		Create,
		
		[EnumMember(Value="update")]
		Update,
	}
	
	/// <summary>
	/// All genders a person can choose
	/// </summary>
	public enum NichandleGenderEnum {
		
		[EnumMember(Value="female")]
		Female,
		
		[EnumMember(Value="male")]
		Male,
	}
	
	/// <summary>
	/// Languages a nichandle can choose
	/// </summary>
	public enum NichandleLanguageEnum {
		
		[EnumMember(Value="cs_CZ")]
		Cs_CZ,
		
		[EnumMember(Value="de_DE")]
		De_DE,
		
		[EnumMember(Value="en_AU")]
		En_AU,
		
		[EnumMember(Value="en_CA")]
		En_CA,
		
		[EnumMember(Value="en_GB")]
		En_GB,
		
		[EnumMember(Value="en_IE")]
		En_IE,
		
		[EnumMember(Value="en_US")]
		En_US,
		
		[EnumMember(Value="es_ES")]
		Es_ES,
		
		[EnumMember(Value="fi_FI")]
		Fi_FI,
		
		[EnumMember(Value="fr_CA")]
		Fr_CA,
		
		[EnumMember(Value="fr_FR")]
		Fr_FR,
		
		[EnumMember(Value="fr_MA")]
		Fr_MA,
		
		[EnumMember(Value="fr_SN")]
		Fr_SN,
		
		[EnumMember(Value="fr_TN")]
		Fr_TN,
		
		[EnumMember(Value="it_IT")]
		It_IT,
		
		[EnumMember(Value="lt_LT")]
		Lt_LT,
		
		[EnumMember(Value="nl_NL")]
		Nl_NL,
		
		[EnumMember(Value="pl_PL")]
		Pl_PL,
		
		[EnumMember(Value="pt_PT")]
		Pt_PT,
	}
	
	/// <summary>
	/// Legal forms a nichandle can be registered as
	/// </summary>
	public enum NichandleLegalFormEnum {
		
		[EnumMember(Value="administration")]
		Administration,
		
		[EnumMember(Value="association")]
		Association,
		
		[EnumMember(Value="corporation")]
		Corporation,
		
		[EnumMember(Value="individual")]
		Individual,
		
		[EnumMember(Value="other")]
		Other,
		
		[EnumMember(Value="personalcorporation")]
		Personalcorporation,
	}
	
	/// <summary>
	/// OVH subsidiaries
	/// </summary>
	public enum NichandleOvhCompanyEnum {
		
		[EnumMember(Value="kimsufi")]
		Kimsufi,
		
		[EnumMember(Value="ovh")]
		Ovh,
		
		[EnumMember(Value="soyoustart")]
		Soyoustart,
	}
	
	/// <summary>
	/// OVH subsidiaries
	/// </summary>
	public enum NichandleOvhSubsidiaryEnum {
		
		[EnumMember(Value="ASIA")]
		ASIA,
		
		[EnumMember(Value="AU")]
		AU,
		
		[EnumMember(Value="CA")]
		CA,
		
		[EnumMember(Value="CZ")]
		CZ,
		
		[EnumMember(Value="DE")]
		DE,
		
		[EnumMember(Value="ES")]
		ES,
		
		[EnumMember(Value="EU")]
		EU,
		
		[EnumMember(Value="FI")]
		FI,
		
		[EnumMember(Value="FR")]
		FR,
		
		[EnumMember(Value="GB")]
		GB,
		
		[EnumMember(Value="IE")]
		IE,
		
		[EnumMember(Value="IT")]
		IT,
		
		[EnumMember(Value="LT")]
		LT,
		
		[EnumMember(Value="MA")]
		MA,
		
		[EnumMember(Value="NL")]
		NL,
		
		[EnumMember(Value="PL")]
		PL,
		
		[EnumMember(Value="PT")]
		PT,
		
		[EnumMember(Value="QC")]
		QC,
		
		[EnumMember(Value="SG")]
		SG,
		
		[EnumMember(Value="SN")]
		SN,
		
		[EnumMember(Value="TN")]
		TN,
		
		[EnumMember(Value="US")]
		US,
		
		[EnumMember(Value="WE")]
		WE,
		
		[EnumMember(Value="WS")]
		WS,
	}
	
	/// <summary>
	/// Describe all rules for a given field
	/// </summary>
	public class NichandleCreationRule {
		
		private string DefaultValue_bfield;
		
		private string[] Examples_bfield;
		
		private string FieldName_bfield;
		
		private string[] In_bfield;
		
		private bool Mandatory_bfield;
		
		private string Prefix_bfield;
		
		private string RegularExpression_bfield;
		
		/// <summary>
		/// Default value of the field
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Default value of the field&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("defaultValue")]
		public string DefaultValue {
			get {
				return this.DefaultValue_bfield;
			}
			set {
				this.DefaultValue_bfield = value;
			}
		}
		
		/// <summary>
		/// Examples of values for the fields
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string[]&quot;,&quot;Description&quot;:&quot;Examples of values for the fields&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("examples")]
		public string[] Examples {
			get {
				return this.Examples_bfield;
			}
			set {
				this.Examples_bfield = value;
			}
		}
		
		/// <summary>
		/// Name of the field
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Name of the field&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("fieldName")]
		public string FieldName {
			get {
				return this.FieldName_bfield;
			}
			set {
				this.FieldName_bfield = value;
			}
		}
		
		/// <summary>
		/// List of allowed values for the field
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string[]&quot;,&quot;Description&quot;:&quot;List of allowed values for the field&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("in")]
		public string[] In {
			get {
				return this.In_bfield;
			}
			set {
				this.In_bfield = value;
			}
		}
		
		/// <summary>
		/// Whether the field is mandatory
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Whether the field is mandatory&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("mandatory")]
		public bool Mandatory {
			get {
				return this.Mandatory_bfield;
			}
			set {
				this.Mandatory_bfield = value;
			}
		}
		
		/// <summary>
		/// Prefix of the field value
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Prefix of the field value&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("prefix")]
		public string Prefix {
			get {
				return this.Prefix_bfield;
			}
			set {
				this.Prefix_bfield = value;
			}
		}
		
		/// <summary>
		/// Regular expression to validate the field value
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Regular expression to validate the field value&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("regularExpression")]
		public string RegularExpression {
			get {
				return this.RegularExpression_bfield;
			}
			set {
				this.RegularExpression_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Describe rules foreach field in order to create a nic
	/// </summary>
	public class NichandleCreationRules {
		
		private NichandleCreationRule Address_bfield;
		
		private NichandleCreationRule Area_bfield;
		
		private NichandleCreationRule BirthCity_bfield;
		
		private NichandleCreationRule BirthDay_bfield;
		
		private NichandleCreationRule City_bfield;
		
		private NichandleCreationRule CompanyNationalIdentificationNumber_bfield;
		
		private NichandleCreationRule CorporationType_bfield;
		
		private NichandleCreationRule Country_bfield;
		
		private NichandleCreationRule Email_bfield;
		
		private NichandleCreationRule Fax_bfield;
		
		private NichandleCreationRule Firstname_bfield;
		
		private NichandleCreationRule ItalianSDI_bfield;
		
		private NichandleCreationRule Language_bfield;
		
		private NichandleCreationRule Legalform_bfield;
		
		private NichandleCreationRule Name_bfield;
		
		private NichandleCreationRule NationalIdentificationNumber_bfield;
		
		private NichandleCreationRule Organisation_bfield;
		
		private NichandleCreationRule OvhCompany_bfield;
		
		private NichandleCreationRule OvhSubsidiary_bfield;
		
		private NichandleCreationRule Phone_bfield;
		
		private NichandleCreationRule PhoneCountry_bfield;
		
		private NichandleCreationRule Sex_bfield;
		
		private NichandleCreationRule SpareEmail_bfield;
		
		private NichandleCreationRule Vat_bfield;
		
		private NichandleCreationRule Zip_bfield;
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;nichandle.CreationRule&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("address")]
		public NichandleCreationRule Address {
			get {
				return this.Address_bfield;
			}
			set {
				this.Address_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;nichandle.CreationRule&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("area")]
		public NichandleCreationRule Area {
			get {
				return this.Area_bfield;
			}
			set {
				this.Area_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;nichandle.CreationRule&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("birthCity")]
		public NichandleCreationRule BirthCity {
			get {
				return this.BirthCity_bfield;
			}
			set {
				this.BirthCity_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;nichandle.CreationRule&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("birthDay")]
		public NichandleCreationRule BirthDay {
			get {
				return this.BirthDay_bfield;
			}
			set {
				this.BirthDay_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;nichandle.CreationRule&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("city")]
		public NichandleCreationRule City {
			get {
				return this.City_bfield;
			}
			set {
				this.City_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;nichandle.CreationRule&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("companyNationalIdentificationNumber")]
		public NichandleCreationRule CompanyNationalIdentificationNumber {
			get {
				return this.CompanyNationalIdentificationNumber_bfield;
			}
			set {
				this.CompanyNationalIdentificationNumber_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;nichandle.CreationRule&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("corporationType")]
		public NichandleCreationRule CorporationType {
			get {
				return this.CorporationType_bfield;
			}
			set {
				this.CorporationType_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;nichandle.CreationRule&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("country")]
		public NichandleCreationRule Country {
			get {
				return this.Country_bfield;
			}
			set {
				this.Country_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;nichandle.CreationRule&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("email")]
		public NichandleCreationRule Email {
			get {
				return this.Email_bfield;
			}
			set {
				this.Email_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;nichandle.CreationRule&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("fax")]
		public NichandleCreationRule Fax {
			get {
				return this.Fax_bfield;
			}
			set {
				this.Fax_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;nichandle.CreationRule&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("firstname")]
		public NichandleCreationRule Firstname {
			get {
				return this.Firstname_bfield;
			}
			set {
				this.Firstname_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;nichandle.CreationRule&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("italianSDI")]
		public NichandleCreationRule ItalianSDI {
			get {
				return this.ItalianSDI_bfield;
			}
			set {
				this.ItalianSDI_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;nichandle.CreationRule&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("language")]
		public NichandleCreationRule Language {
			get {
				return this.Language_bfield;
			}
			set {
				this.Language_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;nichandle.CreationRule&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("legalform")]
		public NichandleCreationRule Legalform {
			get {
				return this.Legalform_bfield;
			}
			set {
				this.Legalform_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;nichandle.CreationRule&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("name")]
		public NichandleCreationRule Name {
			get {
				return this.Name_bfield;
			}
			set {
				this.Name_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;nichandle.CreationRule&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("nationalIdentificationNumber")]
		public NichandleCreationRule NationalIdentificationNumber {
			get {
				return this.NationalIdentificationNumber_bfield;
			}
			set {
				this.NationalIdentificationNumber_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;nichandle.CreationRule&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("organisation")]
		public NichandleCreationRule Organisation {
			get {
				return this.Organisation_bfield;
			}
			set {
				this.Organisation_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;nichandle.CreationRule&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("ovhCompany")]
		public NichandleCreationRule OvhCompany {
			get {
				return this.OvhCompany_bfield;
			}
			set {
				this.OvhCompany_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;nichandle.CreationRule&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("ovhSubsidiary")]
		public NichandleCreationRule OvhSubsidiary {
			get {
				return this.OvhSubsidiary_bfield;
			}
			set {
				this.OvhSubsidiary_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;nichandle.CreationRule&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("phone")]
		public NichandleCreationRule Phone {
			get {
				return this.Phone_bfield;
			}
			set {
				this.Phone_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;nichandle.CreationRule&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("phoneCountry")]
		public NichandleCreationRule PhoneCountry {
			get {
				return this.PhoneCountry_bfield;
			}
			set {
				this.PhoneCountry_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;nichandle.CreationRule&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("sex")]
		public NichandleCreationRule Sex {
			get {
				return this.Sex_bfield;
			}
			set {
				this.Sex_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;nichandle.CreationRule&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("spareEmail")]
		public NichandleCreationRule SpareEmail {
			get {
				return this.SpareEmail_bfield;
			}
			set {
				this.SpareEmail_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;nichandle.CreationRule&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("vat")]
		public NichandleCreationRule Vat {
			get {
				return this.Vat_bfield;
			}
			set {
				this.Vat_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;nichandle.CreationRule&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("zip")]
		public NichandleCreationRule Zip {
			get {
				return this.Zip_bfield;
			}
			set {
				this.Zip_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Newly created OVH identifier and a login token for the API
	/// </summary>
	public class NichandleNewAccountAndToken {
		
		private string ConsumerKey_bfield;
		
		private string OvhIdentifier_bfield;
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("consumerKey")]
		public string ConsumerKey {
			get {
				return this.ConsumerKey_bfield;
			}
			set {
				this.ConsumerKey_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("ovhIdentifier")]
		public string OvhIdentifier {
			get {
				return this.OvhIdentifier_bfield;
			}
			set {
				this.OvhIdentifier_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// A contract
	/// </summary>
	public class OrderContract {
		
		private string Content_bfield;
		
		private string Name_bfield;
		
		private string Url_bfield;
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;text&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("content")]
		public string Content {
			get {
				return this.Content_bfield;
			}
			set {
				this.Content_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("name")]
		public string Name {
			get {
				return this.Name_bfield;
			}
			set {
				this.Name_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("url")]
		public string Url {
			get {
				return this.Url_bfield;
			}
			set {
				this.Url_bfield = value;
			}
		}
	}
}
