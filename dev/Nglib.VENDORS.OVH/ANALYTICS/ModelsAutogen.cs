//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Newtonsoft.Json;
using Nglib.VENDORS.OVH.SHARED;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Threading.Tasks;


// [GET] "/analytics/capabilities/platforms"  analytics.platform.Capability[]--
//[GET] "/analytics/platforms"  uuid[]--
//[GET] "/analytics/platforms/{serviceName}"  analytics.Cluster--serviceName
//[GET] "/analytics/platforms/{serviceName}/activity"  analytics.cluster.Activity[]--serviceName
//[POST] "/analytics/platforms/{serviceName}/changeContact"  long[]--contactAdmin,contactBilling,contactTech,serviceName
//[POST] "/analytics/platforms/{serviceName}/confirmTermination"  string--commentary,futureUse,reason,serviceName,token
//[POST] "/analytics/platforms/{serviceName}/deploy"  analytics.cluster.Deploy--,serviceName
//[POST] "/analytics/platforms/{serviceName}/destroy"  void--,serviceName
//[GET] "/analytics/platforms/{serviceName}/nodes"  uuid[]--serviceName
//[GET] "/analytics/platforms/{serviceName}/nodes/{nodeId}"  analytics.cluster.Node--nodeId,serviceName
//[GET] "/analytics/platforms/{serviceName}/serviceInfos"  services.Service--serviceName
//[PUT] "/analytics/platforms/{serviceName}/serviceInfos"  void--,serviceName
//[GET] "/analytics/platforms/{serviceName}/status"  analytics.cluster.deploy.Status[]--serviceName
//[POST] "/analytics/platforms/{serviceName}/terminate"  string--serviceName
namespace Nglib.VENDORS.OVH.ANALYTICS {
	
	
	/// <summary>
	/// Status code
	/// </summary>
	public enum AnalyticsStatusEnum {
		
		[EnumMember(Value="PENDING")]
		PENDING,
		
		[EnumMember(Value="IN_PROGRESS")]
		IN_PROGRESS,
		
		[EnumMember(Value="SUCCEEDED")]
		SUCCEEDED,
		
		[EnumMember(Value="FAILED")]
		FAILED,
		
		[EnumMember(Value="DONE")]
		DONE,
		
		[EnumMember(Value="ERROR")]
		ERROR,
		
		[EnumMember(Value="UNKNOWN")]
		UNKNOWN,
		
		[EnumMember(Value="OK")]
		OK,
		
		[EnumMember(Value="TO_DEPLOY")]
		TO_DEPLOY,
		
		[EnumMember(Value="DEPLOYING")]
		DEPLOYING,
		
		[EnumMember(Value="DEPLOYED")]
		DEPLOYED,
		
		[EnumMember(Value="TO_DESTROY")]
		TO_DESTROY,
		
		[EnumMember(Value="DESTROYING")]
		DESTROYING,
		
		[EnumMember(Value="DESTROYED")]
		DESTROYED,
		
		[EnumMember(Value="INITIALIZED")]
		INITIALIZED,
	}
	
	/// <summary>
	/// Node type
	/// </summary>
	public enum AnalyticsnodeTypeEnum {
		
		[EnumMember(Value="MASTER")]
		MASTER,
		
		[EnumMember(Value="SLAVE")]
		SLAVE,
		
		[EnumMember(Value="EDGE")]
		EDGE,
		
		[EnumMember(Value="UTILITY")]
		UTILITY,
	}
	
	/// <summary>
	/// Detailed renewal type of a service
	/// </summary>
	public enum ServiceRenewalTypeEnum {
		
		[EnumMember(Value="automaticForcedProduct")]
		AutomaticForcedProduct,
		
		[EnumMember(Value="automaticV2012")]
		AutomaticV2012,
		
		[EnumMember(Value="automaticV2014")]
		AutomaticV2014,
		
		[EnumMember(Value="automaticV2016")]
		AutomaticV2016,
		
		[EnumMember(Value="manual")]
		Manual,
		
		[EnumMember(Value="oneShot")]
		OneShot,
		
		[EnumMember(Value="option")]
		Option,
	}
	
	public enum ServiceStateEnum {
		
		[EnumMember(Value="expired")]
		Expired,
		
		[EnumMember(Value="inCreation")]
		InCreation,
		
		[EnumMember(Value="ok")]
		Ok,
		
		[EnumMember(Value="pendingDebt")]
		PendingDebt,
		
		[EnumMember(Value="unPaid")]
		UnPaid,
	}
	
	/// <summary>
	/// All future uses you can provide for a service termination
	/// </summary>
	public enum ServiceTerminationFutureUseEnum {
		
		[EnumMember(Value="NOT_REPLACING_SERVICE")]
		NOT_REPLACING_SERVICE,
		
		[EnumMember(Value="OTHER")]
		OTHER,
		
		[EnumMember(Value="SUBSCRIBE_AN_OTHER_SERVICE")]
		SUBSCRIBE_AN_OTHER_SERVICE,
		
		[EnumMember(Value="SUBSCRIBE_OTHER_KIND_OF_SERVICE_WITH_COMPETITOR")]
		SUBSCRIBE_OTHER_KIND_OF_SERVICE_WITH_COMPETITOR,
		
		[EnumMember(Value="SUBSCRIBE_SIMILAR_SERVICE_WITH_COMPETITOR")]
		SUBSCRIBE_SIMILAR_SERVICE_WITH_COMPETITOR,
	}
	
	/// <summary>
	/// All reasons you can provide for a service termination
	/// </summary>
	public enum ServiceTerminationReasonEnum {
		
		[EnumMember(Value="FEATURES_DONT_SUIT_ME")]
		FEATURES_DONT_SUIT_ME,
		
		[EnumMember(Value="LACK_OF_PERFORMANCES")]
		LACK_OF_PERFORMANCES,
		
		[EnumMember(Value="MIGRATED_TO_ANOTHER_OVH_PRODUCT")]
		MIGRATED_TO_ANOTHER_OVH_PRODUCT,
		
		[EnumMember(Value="MIGRATED_TO_COMPETITOR")]
		MIGRATED_TO_COMPETITOR,
		
		[EnumMember(Value="NOT_ENOUGH_RECOGNITION")]
		NOT_ENOUGH_RECOGNITION,
		
		[EnumMember(Value="NOT_NEEDED_ANYMORE")]
		NOT_NEEDED_ANYMORE,
		
		[EnumMember(Value="NOT_RELIABLE")]
		NOT_RELIABLE,
		
		[EnumMember(Value="NO_ANSWER")]
		NO_ANSWER,
		
		[EnumMember(Value="OTHER")]
		OTHER,
		
		[EnumMember(Value="PRODUCT_DIMENSION_DONT_SUIT_ME")]
		PRODUCT_DIMENSION_DONT_SUIT_ME,
		
		[EnumMember(Value="PRODUCT_TOOLS_DONT_SUIT_ME")]
		PRODUCT_TOOLS_DONT_SUIT_ME,
		
		[EnumMember(Value="TOO_EXPENSIVE")]
		TOO_EXPENSIVE,
		
		[EnumMember(Value="TOO_HARD_TO_USE")]
		TOO_HARD_TO_USE,
		
		[EnumMember(Value="UNSATIFIED_BY_CUSTOMER_SUPPORT")]
		UNSATIFIED_BY_CUSTOMER_SUPPORT,
	}
	
	/// <summary>
	/// Cluster information
	/// </summary>
	public class AnalyticsCluster {
		
		private string AnalyticsProjectId_bfield;
		
		private string ClusterName_bfield;
		
		private string ClusterType_bfield;
		
		private System.Nullable<System.DateTime> DeploymentEndDate_bfield;
		
		private System.Nullable<System.DateTime> DeploymentStartDate_bfield;
		
		private string Domain_bfield;
		
		private string[] Nodes_bfield;
		
		private string OsProjectId_bfield;
		
		private string OsRegion_bfield;
		
		private string ServiceName_bfield;
		
		private string Status_bfield;
		
		/// <summary>
		/// Analytics Project ID needed to generate cluster credentials
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Analytics Project ID needed to generate cluster credentials&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("analyticsProjectId")]
		public string AnalyticsProjectId {
			get {
				return this.AnalyticsProjectId_bfield;
			}
			set {
				this.AnalyticsProjectId_bfield = value;
			}
		}
		
		/// <summary>
		/// Analytics cluster name
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Analytics cluster name&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("clusterName")]
		public string ClusterName {
			get {
				return this.ClusterName_bfield;
			}
			set {
				this.ClusterName_bfield = value;
			}
		}
		
		/// <summary>
		/// Type of analytics stack deployed
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Type of analytics stack deployed&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("clusterType")]
		public string ClusterType {
			get {
				return this.ClusterType_bfield;
			}
			set {
				this.ClusterType_bfield = value;
			}
		}
		
		/// <summary>
		/// Analytics cluster deployment end date
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Analytics cluster deployment end date&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("deploymentEndDate")]
		public System.Nullable<System.DateTime> DeploymentEndDate {
			get {
				return this.DeploymentEndDate_bfield;
			}
			set {
				this.DeploymentEndDate_bfield = value;
			}
		}
		
		/// <summary>
		/// Analytics cluster deployment start date
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Analytics cluster deployment start date&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("deploymentStartDate")]
		public System.Nullable<System.DateTime> DeploymentStartDate {
			get {
				return this.DeploymentStartDate_bfield;
			}
			set {
				this.DeploymentStartDate_bfield = value;
			}
		}
		
		/// <summary>
		/// Analytics cluster domain name
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Analytics cluster domain name&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("domain")]
		public string Domain {
			get {
				return this.Domain_bfield;
			}
			set {
				this.Domain_bfield = value;
			}
		}
		
		/// <summary>
		/// Analytics cluster nodes topology
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;analytics.cluster.Node[]&quot;,&quot;Description&quot;:&quot;Analytics cluster nodes topology&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("nodes")]
		public string[] Nodes {
			get {
				return this.Nodes_bfield;
			}
			set {
				this.Nodes_bfield = value;
			}
		}
		
		/// <summary>
		/// Public Cloud project unique identifier
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Public Cloud project unique identifier&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("osProjectId")]
		public string OsProjectId {
			get {
				return this.OsProjectId_bfield;
			}
			set {
				this.OsProjectId_bfield = value;
			}
		}
		
		/// <summary>
		/// Public Cloud region of analytics cluster deployment
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Public Cloud region of analytics cluster deployment&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("osRegion")]
		public string OsRegion {
			get {
				return this.OsRegion_bfield;
			}
			set {
				this.OsRegion_bfield = value;
			}
		}
		
		/// <summary>
		/// Analytics cluster unique identifier
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Analytics cluster unique identifier&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("serviceName")]
		public string ServiceName {
			get {
				return this.ServiceName_bfield;
			}
			set {
				this.ServiceName_bfield = value;
			}
		}
		
		/// <summary>
		/// Analytics cluster current status
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;analytics.StatusEnum&quot;,&quot;Description&quot;:&quot;Analytics cluster current status&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("status")]
		public string Status {
			get {
				return this.Status_bfield;
			}
			set {
				this.Status_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Component of the service
	/// </summary>
	public class AnalyticsComponent {
		
		private string Name_bfield;
		
		private string Version_bfield;
		
		/// <summary>
		/// Component name
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Component name&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("name")]
		public string Name {
			get {
				return this.Name_bfield;
			}
			set {
				this.Name_bfield = value;
			}
		}
		
		/// <summary>
		/// Component version
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Component version&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("version")]
		public string Version {
			get {
				return this.Version_bfield;
			}
			set {
				this.Version_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Cluster activity
	/// </summary>
	public class AnalyticsclusterActivity {
		
		private string Description_bfield;
		
		private string Status_bfield;
		
		private System.DateTime Timestamp_bfield;
		
		private string User_bfield;
		
		/// <summary>
		/// Activity log description
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Activity log description&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("description")]
		public string Description {
			get {
				return this.Description_bfield;
			}
			set {
				this.Description_bfield = value;
			}
		}
		
		/// <summary>
		/// Status associated to this event
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;analytics.StatusEnum&quot;,&quot;Description&quot;:&quot;Status associated to this event&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("status")]
		public string Status {
			get {
				return this.Status_bfield;
			}
			set {
				this.Status_bfield = value;
			}
		}
		
		/// <summary>
		/// Activity log timestamp
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Activity log timestamp&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("timestamp")]
		public System.DateTime Timestamp {
			get {
				return this.Timestamp_bfield;
			}
			set {
				this.Timestamp_bfield = value;
			}
		}
		
		/// <summary>
		/// Event author
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Event author&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("user")]
		public string User {
			get {
				return this.User_bfield;
			}
			set {
				this.User_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Analytics Cluster deployment parameters
	/// </summary>
	public class AnalyticsclusterDeploy {
		
		private string ClusterName_bfield;
		
		private string ClusterType_bfield;
		
		private long EdgeNodeStorage_bfield;
		
		private long HdfsEffectiveStorage_bfield;
		
		private long HdfsReplicationFactor_bfield;
		
		private long MasterNodeStorage_bfield;
		
		private string MasterPassword_bfield;
		
		private string[] Nodes_bfield;
		
		private string OsProjectId_bfield;
		
		private string OsProjectName_bfield;
		
		private string OsRegion_bfield;
		
		private string OsToken_bfield;
		
		private string SshPublicKey_bfield;
		
		/// <summary>
		/// Name of the Analytics Data Platform cluster
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Name of the Analytics Data Platform cluster&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("clusterName")]
		public string ClusterName {
			get {
				return this.ClusterName_bfield;
			}
			set {
				this.ClusterName_bfield = value;
			}
		}
		
		/// <summary>
		/// Analytics type of stack to deploy (according to capabilities version)
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Analytics type of stack to deploy (according to capabilities version)&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("clusterType")]
		public string ClusterType {
			get {
				return this.ClusterType_bfield;
			}
			set {
				this.ClusterType_bfield = value;
			}
		}
		
		/// <summary>
		/// Storage per edge node
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Storage per edge node&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("edgeNodeStorage")]
		public long EdgeNodeStorage {
			get {
				return this.EdgeNodeStorage_bfield;
			}
			set {
				this.EdgeNodeStorage_bfield = value;
			}
		}
		
		/// <summary>
		/// Analytics cluster total effective storage (HDFS)
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Analytics cluster total effective storage (HDFS)&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("hdfsEffectiveStorage")]
		public long HdfsEffectiveStorage {
			get {
				return this.HdfsEffectiveStorage_bfield;
			}
			set {
				this.HdfsEffectiveStorage_bfield = value;
			}
		}
		
		/// <summary>
		/// Analytics cluster HDFS replication factor
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Analytics cluster HDFS replication factor&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("hdfsReplicationFactor")]
		public long HdfsReplicationFactor {
			get {
				return this.HdfsReplicationFactor_bfield;
			}
			set {
				this.HdfsReplicationFactor_bfield = value;
			}
		}
		
		/// <summary>
		/// Storage per master node
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Storage per master node&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("masterNodeStorage")]
		public long MasterNodeStorage {
			get {
				return this.MasterNodeStorage_bfield;
			}
			set {
				this.MasterNodeStorage_bfield = value;
			}
		}
		
		/// <summary>
		/// Analytics cluster master password used to derive services passwords
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;password&quot;,&quot;Description&quot;:&quot;Analytics cluster master password used to derive services passwords&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("masterPassword")]
		public string MasterPassword {
			get {
				return this.MasterPassword_bfield;
			}
			set {
				this.MasterPassword_bfield = value;
			}
		}
		
		/// <summary>
		/// Analytics cluster nodes topology
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;analytics.node.Deploy[]&quot;,&quot;Description&quot;:&quot;Analytics cluster nodes topology&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("nodes")]
		public string[] Nodes {
			get {
				return this.Nodes_bfield;
			}
			set {
				this.Nodes_bfield = value;
			}
		}
		
		/// <summary>
		/// Public Cloud project ID to deploy the cluster into
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Public Cloud project ID to deploy the cluster into&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("osProjectId")]
		public string OsProjectId {
			get {
				return this.OsProjectId_bfield;
			}
			set {
				this.OsProjectId_bfield = value;
			}
		}
		
		/// <summary>
		/// Public Cloud project name to deploy the cluster into
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Public Cloud project name to deploy the cluster into&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("osProjectName")]
		public string OsProjectName {
			get {
				return this.OsProjectName_bfield;
			}
			set {
				this.OsProjectName_bfield = value;
			}
		}
		
		/// <summary>
		/// Public Cloud region to deploy the cluster into (according to capabilities regions)
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Public Cloud region to deploy the cluster into (according to capabilities regions)&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("osRegion")]
		public string OsRegion {
			get {
				return this.OsRegion_bfield;
			}
			set {
				this.OsRegion_bfield = value;
			}
		}
		
		/// <summary>
		/// Public Cloud project token to deploy the cluster
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;password&quot;,&quot;Description&quot;:&quot;Public Cloud project token to deploy the cluster&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("osToken")]
		public string OsToken {
			get {
				return this.OsToken_bfield;
			}
			set {
				this.OsToken_bfield = value;
			}
		}
		
		/// <summary>
		/// SSH Public Key uploaded to the cluster to give access to the customer (content of my_key.pub)
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;SSH Public Key uploaded to the cluster to give access to the customer (content of my_key.pub)&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("sshPublicKey")]
		public string SshPublicKey {
			get {
				return this.SshPublicKey_bfield;
			}
			set {
				this.SshPublicKey_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Analytics Cluster destruction parameters
	/// </summary>
	public class AnalyticsclusterDestroy {
		
		private string OsToken_bfield;
		
		/// <summary>
		/// Public Cloud project token to destroy the cluster
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;password&quot;,&quot;Description&quot;:&quot;Public Cloud project token to destroy the cluster&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("osToken")]
		public string OsToken {
			get {
				return this.OsToken_bfield;
			}
			set {
				this.OsToken_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Cluster node information
	/// </summary>
	public class AnalyticsclusterNode {
		
		private System.Nullable<System.DateTime> DeploymentEndDate_bfield;
		
		private System.Nullable<System.DateTime> DeploymentStartDate_bfield;
		
		private string Flavor_bfield;
		
		private string Hostname_bfield;
		
		private string Ip_bfield;
		
		private string NodeId_bfield;
		
		private string NodeType_bfield;
		
		private string OsRegion_bfield;
		
		private string Status_bfield;
		
		private System.Nullable<long> Storage_bfield;
		
		/// <summary>
		/// Deployment end date
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Deployment end date&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("deploymentEndDate")]
		public System.Nullable<System.DateTime> DeploymentEndDate {
			get {
				return this.DeploymentEndDate_bfield;
			}
			set {
				this.DeploymentEndDate_bfield = value;
			}
		}
		
		/// <summary>
		/// Deployment start date
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Deployment start date&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("deploymentStartDate")]
		public System.Nullable<System.DateTime> DeploymentStartDate {
			get {
				return this.DeploymentStartDate_bfield;
			}
			set {
				this.DeploymentStartDate_bfield = value;
			}
		}
		
		/// <summary>
		/// Public Cloud flavor of the node
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Public Cloud flavor of the node&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("flavor")]
		public string Flavor {
			get {
				return this.Flavor_bfield;
			}
			set {
				this.Flavor_bfield = value;
			}
		}
		
		/// <summary>
		/// Hostname for this node
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Hostname for this node&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("hostname")]
		public string Hostname {
			get {
				return this.Hostname_bfield;
			}
			set {
				this.Hostname_bfield = value;
			}
		}
		
		/// <summary>
		/// IP address of the node inside the vRack
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;ip&quot;,&quot;Description&quot;:&quot;IP address of the node inside the vRack&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("ip")]
		public string Ip {
			get {
				return this.Ip_bfield;
			}
			set {
				this.Ip_bfield = value;
			}
		}
		
		/// <summary>
		/// Unique identifier for this node
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Unique identifier for this node&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("nodeId")]
		public string NodeId {
			get {
				return this.NodeId_bfield;
			}
			set {
				this.NodeId_bfield = value;
			}
		}
		
		/// <summary>
		/// Node type
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;analytics.node.TypeEnum&quot;,&quot;Description&quot;:&quot;Node type&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("nodeType")]
		public string NodeType {
			get {
				return this.NodeType_bfield;
			}
			set {
				this.NodeType_bfield = value;
			}
		}
		
		/// <summary>
		/// Public Cloud region of the node
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Public Cloud region of the node&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("osRegion")]
		public string OsRegion {
			get {
				return this.OsRegion_bfield;
			}
			set {
				this.OsRegion_bfield = value;
			}
		}
		
		/// <summary>
		/// Node status
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;analytics.StatusEnum&quot;,&quot;Description&quot;:&quot;Node status&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("status")]
		public string Status {
			get {
				return this.Status_bfield;
			}
			set {
				this.Status_bfield = value;
			}
		}
		
		/// <summary>
		/// Size of storage in GB
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Size of storage in GB&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("storage")]
		public System.Nullable<long> Storage {
			get {
				return this.Storage_bfield;
			}
			set {
				this.Storage_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Cluster deployment status
	/// </summary>
	public class AnalyticsclusterdeployStatus {
		
		private long Percentage_bfield;
		
		private string Status_bfield;
		
		private string Task_bfield;
		
		/// <summary>
		/// Task percentage
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Task percentage&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("percentage")]
		public long Percentage {
			get {
				return this.Percentage_bfield;
			}
			set {
				this.Percentage_bfield = value;
			}
		}
		
		/// <summary>
		/// Task status
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;analytics.StatusEnum&quot;,&quot;Description&quot;:&quot;Task status&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("status")]
		public string Status {
			get {
				return this.Status_bfield;
			}
			set {
				this.Status_bfield = value;
			}
		}
		
		/// <summary>
		/// Task name
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Task name&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("task")]
		public string Task {
			get {
				return this.Task_bfield;
			}
			set {
				this.Task_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// node capability
	/// </summary>
	public class AnalyticsnodeCapability {
		
		private long InstanceMax_bfield;
		
		private long InstanceMin_bfield;
		
		private string[] InstanceType_bfield;
		
		private long RawStorageMaxGb_bfield;
		
		private long RawStorageMinGb_bfield;
		
		/// <summary>
		/// Maximum number of instances
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Maximum number of instances&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("instanceMax")]
		public long InstanceMax {
			get {
				return this.InstanceMax_bfield;
			}
			set {
				this.InstanceMax_bfield = value;
			}
		}
		
		/// <summary>
		/// Minimum number of instances
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Minimum number of instances&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("instanceMin")]
		public long InstanceMin {
			get {
				return this.InstanceMin_bfield;
			}
			set {
				this.InstanceMin_bfield = value;
			}
		}
		
		/// <summary>
		/// List of available instances
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string[]&quot;,&quot;Description&quot;:&quot;List of available instances&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("instanceType")]
		public string[] InstanceType {
			get {
				return this.InstanceType_bfield;
			}
			set {
				this.InstanceType_bfield = value;
			}
		}
		
		/// <summary>
		/// maximum raw storage in GB
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;maximum raw storage in GB&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("rawStorageMaxGb")]
		public long RawStorageMaxGb {
			get {
				return this.RawStorageMaxGb_bfield;
			}
			set {
				this.RawStorageMaxGb_bfield = value;
			}
		}
		
		/// <summary>
		/// minimum raw storage in GB
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;minimum raw storage in GB&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("rawStorageMinGb")]
		public long RawStorageMinGb {
			get {
				return this.RawStorageMinGb_bfield;
			}
			set {
				this.RawStorageMinGb_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Node information
	/// </summary>
	public class AnalyticsnodeDeploy {
		
		private string NodeFlavor_bfield;
		
		private string NodeType_bfield;
		
		/// <summary>
		/// Type of flavor to deploy
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Type of flavor to deploy&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("nodeFlavor")]
		public string NodeFlavor {
			get {
				return this.NodeFlavor_bfield;
			}
			set {
				this.NodeFlavor_bfield = value;
			}
		}
		
		/// <summary>
		/// Node type
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;analytics.node.TypeEnum&quot;,&quot;Description&quot;:&quot;Node type&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("nodeType")]
		public string NodeType {
			get {
				return this.NodeType_bfield;
			}
			set {
				this.NodeType_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Platform capabilities
	/// </summary>
	public class AnalyticsplatformCapability {
		
		private string[] AvailableRegion_bfield;
		
		private AnalyticsnodeCapability BastionNode_bfield;
		
		private string[] Components_bfield;
		
		private AnalyticsnodeCapability EdgeNode_bfield;
		
		private long HdfsReplicationFactor_bfield;
		
		private AnalyticsnodeCapability MasterNode_bfield;
		
		private string[] Requirements_bfield;
		
		private AnalyticsnodeCapability UtilityNode_bfield;
		
		private string Version_bfield;
		
		private string VersionDescription_bfield;
		
		private AnalyticsnodeCapability WorkerNode_bfield;
		
		/// <summary>
		/// Available Public Cloud regions
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string[]&quot;,&quot;Description&quot;:&quot;Available Public Cloud regions&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("availableRegion")]
		public string[] AvailableRegion {
			get {
				return this.AvailableRegion_bfield;
			}
			set {
				this.AvailableRegion_bfield = value;
			}
		}
		
		/// <summary>
		/// Bastion node capabilities
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;analytics.node.Capability&quot;,&quot;Description&quot;:&quot;Bastion node capabilities&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("bastionNode")]
		public AnalyticsnodeCapability BastionNode {
			get {
				return this.BastionNode_bfield;
			}
			set {
				this.BastionNode_bfield = value;
			}
		}
		
		/// <summary>
		/// Analytic Data Platform Components list
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;analytics.Component[]&quot;,&quot;Description&quot;:&quot;Analytic Data Platform Components list&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("components")]
		public string[] Components {
			get {
				return this.Components_bfield;
			}
			set {
				this.Components_bfield = value;
			}
		}
		
		/// <summary>
		/// Edge node capabilities
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;analytics.node.Capability&quot;,&quot;Description&quot;:&quot;Edge node capabilities&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("edgeNode")]
		public AnalyticsnodeCapability EdgeNode {
			get {
				return this.EdgeNode_bfield;
			}
			set {
				this.EdgeNode_bfield = value;
			}
		}
		
		/// <summary>
		/// Analytic Data Platform replication factor
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Analytic Data Platform replication factor&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("hdfsReplicationFactor")]
		public long HdfsReplicationFactor {
			get {
				return this.HdfsReplicationFactor_bfield;
			}
			set {
				this.HdfsReplicationFactor_bfield = value;
			}
		}
		
		/// <summary>
		/// Master node capabilities
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;analytics.node.Capability&quot;,&quot;Description&quot;:&quot;Master node capabilities&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("masterNode")]
		public AnalyticsnodeCapability MasterNode {
			get {
				return this.MasterNode_bfield;
			}
			set {
				this.MasterNode_bfield = value;
			}
		}
		
		/// <summary>
		/// List of fields to hide or display
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;analytics.platform.Capability.Requirement[]&quot;,&quot;Description&quot;:&quot;List of fields to hide or display&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("requirements")]
		public string[] Requirements {
			get {
				return this.Requirements_bfield;
			}
			set {
				this.Requirements_bfield = value;
			}
		}
		
		/// <summary>
		/// Utility node capabilities
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;analytics.node.Capability&quot;,&quot;Description&quot;:&quot;Utility node capabilities&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("utilityNode")]
		public AnalyticsnodeCapability UtilityNode {
			get {
				return this.UtilityNode_bfield;
			}
			set {
				this.UtilityNode_bfield = value;
			}
		}
		
		/// <summary>
		/// Analytic Data Platform software version
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Analytic Data Platform software version&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("version")]
		public string Version {
			get {
				return this.Version_bfield;
			}
			set {
				this.Version_bfield = value;
			}
		}
		
		/// <summary>
		/// Analytic Data Platform software version description
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Analytic Data Platform software version description&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("versionDescription")]
		public string VersionDescription {
			get {
				return this.VersionDescription_bfield;
			}
			set {
				this.VersionDescription_bfield = value;
			}
		}
		
		/// <summary>
		/// Worker node capabilities
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;analytics.node.Capability&quot;,&quot;Description&quot;:&quot;Worker node capabilities&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("workerNode")]
		public AnalyticsnodeCapability WorkerNode {
			get {
				return this.WorkerNode_bfield;
			}
			set {
				this.WorkerNode_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Requirement for fields to be displayed or hidden
	/// </summary>
	public class AnalyticsplatformCapabilityRequirement {
		
		private bool Display_bfield;
		
		private string FieldName_bfield;
		
		/// <summary>
		/// Field display flag. True for display, false to hide
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Field display flag. True for display, false to hide&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("display")]
		public bool Display {
			get {
				return this.Display_bfield;
			}
			set {
				this.Display_bfield = value;
			}
		}
		
		/// <summary>
		/// Field name to be displayed or hidden
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Field name to be displayed or hidden&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("fieldName")]
		public string FieldName {
			get {
				return this.FieldName_bfield;
			}
			set {
				this.FieldName_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Map a possible renew for a specific service
	/// </summary>
	public class ServiceRenewType {
		
		private bool Automatic_bfield;
		
		private bool DeleteAtExpiration_bfield;
		
		private bool Forced_bfield;
		
		private System.Nullable<bool> ManualPayment_bfield;
		
		private System.Nullable<long> Period_bfield;
		
		/// <summary>
		/// The service is automatically renewed
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;The service is automatically renewed&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("automatic")]
		public bool Automatic {
			get {
				return this.Automatic_bfield;
			}
			set {
				this.Automatic_bfield = value;
			}
		}
		
		/// <summary>
		/// The service will be deleted at expiration
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;The service will be deleted at expiration&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("deleteAtExpiration")]
		public bool DeleteAtExpiration {
			get {
				return this.DeleteAtExpiration_bfield;
			}
			set {
				this.DeleteAtExpiration_bfield = value;
			}
		}
		
		/// <summary>
		/// The service forced to be renewed
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;The service forced to be renewed&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("forced")]
		public bool Forced {
			get {
				return this.Forced_bfield;
			}
			set {
				this.Forced_bfield = value;
			}
		}
		
		/// <summary>
		/// The service needs to be manually renewed and paid
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;The service needs to be manually renewed and paid&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("manualPayment")]
		public System.Nullable<bool> ManualPayment {
			get {
				return this.ManualPayment_bfield;
			}
			set {
				this.ManualPayment_bfield = value;
			}
		}
		
		/// <summary>
		/// period of renew in month
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;period of renew in month&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("period")]
		public System.Nullable<long> Period {
			get {
				return this.Period_bfield;
			}
			set {
				this.Period_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Details about a Service
	/// </summary>
	public class ServicesService {
		
		private bool CanDeleteAtExpiration_bfield;
		
		private string ContactAdmin_bfield;
		
		private string ContactBilling_bfield;
		
		private string ContactTech_bfield;
		
		private string Creation_bfield;
		
		private string Domain_bfield;
		
		private string EngagedUpTo_bfield;
		
		private string Expiration_bfield;
		
		private long[] PossibleRenewPeriod_bfield;
		
		private ServiceRenewType Renew_bfield;
		
		private string RenewalType_bfield;
		
		private long ServiceId_bfield;
		
		private string Status_bfield;
		
		/// <summary>
		/// Indicates that the service can be set up to be deleted at expiration
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Indicates that the service can be set up to be deleted at expiration&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("canDeleteAtExpiration")]
		public bool CanDeleteAtExpiration {
			get {
				return this.CanDeleteAtExpiration_bfield;
			}
			set {
				this.CanDeleteAtExpiration_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("contactAdmin")]
		public string ContactAdmin {
			get {
				return this.ContactAdmin_bfield;
			}
			set {
				this.ContactAdmin_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("contactBilling")]
		public string ContactBilling {
			get {
				return this.ContactBilling_bfield;
			}
			set {
				this.ContactBilling_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("contactTech")]
		public string ContactTech {
			get {
				return this.ContactTech_bfield;
			}
			set {
				this.ContactTech_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;date&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("creation")]
		public string Creation {
			get {
				return this.Creation_bfield;
			}
			set {
				this.Creation_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("domain")]
		public string Domain {
			get {
				return this.Domain_bfield;
			}
			set {
				this.Domain_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;date&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("engagedUpTo")]
		public string EngagedUpTo {
			get {
				return this.EngagedUpTo_bfield;
			}
			set {
				this.EngagedUpTo_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;date&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("expiration")]
		public string Expiration {
			get {
				return this.Expiration_bfield;
			}
			set {
				this.Expiration_bfield = value;
			}
		}
		
		/// <summary>
		/// All the possible renew period of your service in month
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long[]&quot;,&quot;Description&quot;:&quot;All the possible renew period of your service in month&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("possibleRenewPeriod")]
		public long[] PossibleRenewPeriod {
			get {
				return this.PossibleRenewPeriod_bfield;
			}
			set {
				this.PossibleRenewPeriod_bfield = value;
			}
		}
		
		/// <summary>
		/// Way of handling the renew
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;service.RenewType&quot;,&quot;Description&quot;:&quot;Way of handling the renew&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("renew")]
		public ServiceRenewType Renew {
			get {
				return this.Renew_bfield;
			}
			set {
				this.Renew_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;service.RenewalTypeEnum&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("renewalType")]
		public string RenewalType {
			get {
				return this.RenewalType_bfield;
			}
			set {
				this.RenewalType_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("serviceId")]
		public long ServiceId {
			get {
				return this.ServiceId_bfield;
			}
			set {
				this.ServiceId_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;service.StateEnum&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("status")]
		public string Status {
			get {
				return this.Status_bfield;
			}
			set {
				this.Status_bfield = value;
			}
		}
	}
}
