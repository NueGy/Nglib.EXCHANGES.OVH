//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Newtonsoft.Json;
using Nglib.VENDORS.OVH.SHARED;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Threading.Tasks;


// [GET] "/ovhCloudConnect"  uuid[]--
//[GET] "/ovhCloudConnect/{serviceName}"  ovhcloudconnect.Service--serviceName
//[PUT] "/ovhCloudConnect/{serviceName}"  void--,serviceName
//[POST] "/ovhCloudConnect/{serviceName}/changeContact"  long[]--contactAdmin,contactBilling,contactTech,serviceName
//[GET] "/ovhCloudConnect/{serviceName}/config/pop"  long[]--serviceName
//[POST] "/ovhCloudConnect/{serviceName}/config/pop"  ovhcloudconnect.Task--,serviceName
//[DELETE] "/ovhCloudConnect/{serviceName}/config/pop/{popId}"  ovhcloudconnect.Task--popId,serviceName
//[GET] "/ovhCloudConnect/{serviceName}/config/pop/{popId}"  ovhcloudconnect.PopConfig--popId,serviceName
//[GET] "/ovhCloudConnect/{serviceName}/config/pop/{popId}/datacenter"  long[]--popId,serviceName
//[POST] "/ovhCloudConnect/{serviceName}/config/pop/{popId}/datacenter"  ovhcloudconnect.Task--,popId,serviceName
//[DELETE] "/ovhCloudConnect/{serviceName}/config/pop/{popId}/datacenter/{datacenterId}"  ovhcloudconnect.Task--datacenterId,popId,serviceName
//[GET] "/ovhCloudConnect/{serviceName}/config/pop/{popId}/datacenter/{datacenterId}"  ovhcloudconnect.DatacenterConfig--datacenterId,popId,serviceName
//[GET] "/ovhCloudConnect/{serviceName}/config/pop/{popId}/datacenter/{datacenterId}/extra"  long[]--datacenterId,popId,serviceName
//[POST] "/ovhCloudConnect/{serviceName}/config/pop/{popId}/datacenter/{datacenterId}/extra"  ovhcloudconnect.Task--,datacenterId,popId,serviceName
//[DELETE] "/ovhCloudConnect/{serviceName}/config/pop/{popId}/datacenter/{datacenterId}/extra/{extraId}"  ovhcloudconnect.Task--datacenterId,extraId,popId,serviceName
//[GET] "/ovhCloudConnect/{serviceName}/config/pop/{popId}/datacenter/{datacenterId}/extra/{extraId}"  ovhcloudconnect.DatacenterExtraConfig--datacenterId,extraId,popId,serviceName
//[POST] "/ovhCloudConnect/{serviceName}/confirmTermination"  string--commentary,futureUse,reason,serviceName,token
//[GET] "/ovhCloudConnect/{serviceName}/datacenter"  long[]--serviceName
//[GET] "/ovhCloudConnect/{serviceName}/datacenter/{id}"  ovhcloudconnect.Datacenter--id,serviceName
//[GET] "/ovhCloudConnect/{serviceName}/interface"  long[]--serviceName
//[GET] "/ovhCloudConnect/{serviceName}/interface/{id}"  ovhcloudconnect.Interface--id,serviceName
//[POST] "/ovhCloudConnect/{serviceName}/interface/{id}/lock"  ovhcloudconnect.Task--id,serviceName
//[POST] "/ovhCloudConnect/{serviceName}/interface/{id}/unlock"  ovhcloudconnect.Task--id,serviceName
//[POST] "/ovhCloudConnect/{serviceName}/loa"  string--serviceName
//[GET] "/ovhCloudConnect/{serviceName}/serviceInfos"  services.Service--serviceName
//[PUT] "/ovhCloudConnect/{serviceName}/serviceInfos"  void--,serviceName
//[GET] "/ovhCloudConnect/{serviceName}/serviceKey"  long[]--serviceName
//[GET] "/ovhCloudConnect/{serviceName}/serviceKey/{serviceKeyId}"  ovhcloudconnect.Key--serviceKeyId,serviceName
//[POST] "/ovhCloudConnect/{serviceName}/serviceKey/{serviceKeyId}/regenerate"  ovhcloudconnect.Key--serviceKeyId,serviceName
//[POST] "/ovhCloudConnect/{serviceName}/serviceKey/{serviceKeyId}/send"  ovhcloudconnect.SendKeyAnswer--,serviceKeyId,serviceName
//[GET] "/ovhCloudConnect/{serviceName}/task"  long[]--serviceName
//[GET] "/ovhCloudConnect/{serviceName}/task/{id}"  ovhcloudconnect.Task--id,serviceName
//[POST] "/ovhCloudConnect/{serviceName}/terminate"  string--serviceName
namespace Nglib.VENDORS.OVH.OVHCLOUDCONNECT {
	
	
	/// <summary>
	/// Enum values for Datacenter Extra Configuration Type
	/// </summary>
	public enum OvhcloudconnectdatacenterExtraConfigTypeEnum {
		
		[EnumMember(Value="bgp")]
		Bgp,
		
		[EnumMember(Value="network")]
		Network,
	}
	
	/// <summary>
	/// Enum values for the light status
	/// </summary>
	public enum OvhcloudconnectinterfaceLightStatusEnum {
		
		[EnumMember(Value="up")]
		Up,
		
		[EnumMember(Value="down")]
		Down,
		
		[EnumMember(Value="unknown")]
		Unknown,
	}
	
	/// <summary>
	/// Enum values for interface status
	/// </summary>
	public enum OvhcloudconnectinterfaceStatusEnum {
		
		[EnumMember(Value="enabled")]
		Enabled,
		
		[EnumMember(Value="disabled")]
		Disabled,
	}
	
	/// <summary>
	/// Enum values for service key provider
	/// </summary>
	public enum OvhcloudconnectkeyProviderEnum {
		
		[EnumMember(Value="megaport")]
		Megaport,
		
		[EnumMember(Value="equinix")]
		Equinix,
		
		[EnumMember(Value="internal")]
		Internal,
	}
	
	/// <summary>
	/// Enum values for service key status
	/// </summary>
	public enum OvhcloudconnectkeyStatusEnum {
		
		[EnumMember(Value="doing")]
		Doing,
		
		[EnumMember(Value="active")]
		Active,
		
		[EnumMember(Value="cancelled")]
		Cancelled,
		
		[EnumMember(Value="terminated")]
		Terminated,
		
		[EnumMember(Value="toCheck")]
		ToCheck,
	}
	
	/// <summary>
	/// Enum values for messageCode
	/// </summary>
	public enum OvhcloudconnectmessageCodeEnum {
		
		[EnumMember(Value="mailSent")]
		MailSent,
	}
	
	/// <summary>
	/// Enum values for Pop Configuration Status
	/// </summary>
	public enum OvhcloudconnectpopConfigStatusEnum {
		
		[EnumMember(Value="init")]
		Init,
		
		[EnumMember(Value="active")]
		Active,
		
		[EnumMember(Value="toDelete")]
		ToDelete,
	}
	
	/// <summary>
	/// Enum values for Pop Configuration Type
	/// </summary>
	public enum OvhcloudconnectpopConfigTypeEnum {
		
		[EnumMember(Value="l2")]
		L2,
		
		[EnumMember(Value="l3")]
		L3,
	}
	
	/// <summary>
	/// Enum values for bandwidth
	/// </summary>
	public enum OvhcloudconnectserviceBandwidthEnum {
		
		[EnumMember(Value="200m")]
		_200m,
		
		[EnumMember(Value="500m")]
		_500m,
		
		[EnumMember(Value="1g")]
		_1g,
		
		[EnumMember(Value="2g")]
		_2g,
		
		[EnumMember(Value="5g")]
		_5g,
		
		[EnumMember(Value="10g")]
		_10g,
	}
	
	/// <summary>
	/// Enum values for port quantity
	/// </summary>
	public enum OvhcloudconnectservicePortEnum {
		
		[EnumMember(Value="1")]
		_1,
		
		[EnumMember(Value="2")]
		_2,
	}
	
	/// <summary>
	/// Enum values for service provider
	/// </summary>
	public enum OvhcloudconnectserviceProviderEnum {
		
		[EnumMember(Value="megaport")]
		Megaport,
		
		[EnumMember(Value="equinix")]
		Equinix,
		
		[EnumMember(Value="internal")]
		Internal,
		
		[EnumMember(Value="OVHcloud")]
		OVHcloud,
	}
	
	/// <summary>
	/// Enum values for the Service
	/// </summary>
	public enum OvhcloudconnectserviceStatusEnum {
		
		[EnumMember(Value="active")]
		Active,
		
		[EnumMember(Value="closed")]
		Closed,
	}
	
	/// <summary>
	/// Enum values for Task function
	/// </summary>
	public enum OvhcloudconnecttaskFunctionEnum {
		
		[EnumMember(Value="addVrack")]
		AddVrack,
		
		[EnumMember(Value="removeVrack")]
		RemoveVrack,
		
		[EnumMember(Value="lockInterface")]
		LockInterface,
		
		[EnumMember(Value="unlockInterface")]
		UnlockInterface,
		
		[EnumMember(Value="addPopConfiguration")]
		AddPopConfiguration,
		
		[EnumMember(Value="delPopConfiguration")]
		DelPopConfiguration,
		
		[EnumMember(Value="addDatacenterConfiguration")]
		AddDatacenterConfiguration,
		
		[EnumMember(Value="delDatacenterConfiguration")]
		DelDatacenterConfiguration,
		
		[EnumMember(Value="addDatacenterExtraConfiguration")]
		AddDatacenterExtraConfiguration,
		
		[EnumMember(Value="delDatacenterExtraConfiguration")]
		DelDatacenterExtraConfiguration,
	}
	
	/// <summary>
	/// Enum values for Task status
	/// </summary>
	public enum OvhcloudconnecttaskStatusEnum {
		
		[EnumMember(Value="todo")]
		Todo,
		
		[EnumMember(Value="doing")]
		Doing,
		
		[EnumMember(Value="done")]
		Done,
		
		[EnumMember(Value="error")]
		Error,
	}
	
	/// <summary>
	/// Detailed renewal type of a service
	/// </summary>
	public enum ServiceRenewalTypeEnum {
		
		[EnumMember(Value="automaticForcedProduct")]
		AutomaticForcedProduct,
		
		[EnumMember(Value="automaticV2012")]
		AutomaticV2012,
		
		[EnumMember(Value="automaticV2014")]
		AutomaticV2014,
		
		[EnumMember(Value="automaticV2016")]
		AutomaticV2016,
		
		[EnumMember(Value="manual")]
		Manual,
		
		[EnumMember(Value="oneShot")]
		OneShot,
		
		[EnumMember(Value="option")]
		Option,
	}
	
	public enum ServiceStateEnum {
		
		[EnumMember(Value="expired")]
		Expired,
		
		[EnumMember(Value="inCreation")]
		InCreation,
		
		[EnumMember(Value="ok")]
		Ok,
		
		[EnumMember(Value="pendingDebt")]
		PendingDebt,
		
		[EnumMember(Value="unPaid")]
		UnPaid,
	}
	
	/// <summary>
	/// All future uses you can provide for a service termination
	/// </summary>
	public enum ServiceTerminationFutureUseEnum {
		
		[EnumMember(Value="NOT_REPLACING_SERVICE")]
		NOT_REPLACING_SERVICE,
		
		[EnumMember(Value="OTHER")]
		OTHER,
		
		[EnumMember(Value="SUBSCRIBE_AN_OTHER_SERVICE")]
		SUBSCRIBE_AN_OTHER_SERVICE,
		
		[EnumMember(Value="SUBSCRIBE_OTHER_KIND_OF_SERVICE_WITH_COMPETITOR")]
		SUBSCRIBE_OTHER_KIND_OF_SERVICE_WITH_COMPETITOR,
		
		[EnumMember(Value="SUBSCRIBE_SIMILAR_SERVICE_WITH_COMPETITOR")]
		SUBSCRIBE_SIMILAR_SERVICE_WITH_COMPETITOR,
	}
	
	/// <summary>
	/// All reasons you can provide for a service termination
	/// </summary>
	public enum ServiceTerminationReasonEnum {
		
		[EnumMember(Value="FEATURES_DONT_SUIT_ME")]
		FEATURES_DONT_SUIT_ME,
		
		[EnumMember(Value="LACK_OF_PERFORMANCES")]
		LACK_OF_PERFORMANCES,
		
		[EnumMember(Value="MIGRATED_TO_ANOTHER_OVH_PRODUCT")]
		MIGRATED_TO_ANOTHER_OVH_PRODUCT,
		
		[EnumMember(Value="MIGRATED_TO_COMPETITOR")]
		MIGRATED_TO_COMPETITOR,
		
		[EnumMember(Value="NOT_ENOUGH_RECOGNITION")]
		NOT_ENOUGH_RECOGNITION,
		
		[EnumMember(Value="NOT_NEEDED_ANYMORE")]
		NOT_NEEDED_ANYMORE,
		
		[EnumMember(Value="NOT_RELIABLE")]
		NOT_RELIABLE,
		
		[EnumMember(Value="NO_ANSWER")]
		NO_ANSWER,
		
		[EnumMember(Value="OTHER")]
		OTHER,
		
		[EnumMember(Value="PRODUCT_DIMENSION_DONT_SUIT_ME")]
		PRODUCT_DIMENSION_DONT_SUIT_ME,
		
		[EnumMember(Value="PRODUCT_TOOLS_DONT_SUIT_ME")]
		PRODUCT_TOOLS_DONT_SUIT_ME,
		
		[EnumMember(Value="TOO_EXPENSIVE")]
		TOO_EXPENSIVE,
		
		[EnumMember(Value="TOO_HARD_TO_USE")]
		TOO_HARD_TO_USE,
		
		[EnumMember(Value="UNSATIFIED_BY_CUSTOMER_SUPPORT")]
		UNSATIFIED_BY_CUSTOMER_SUPPORT,
	}
	
	/// <summary>
	/// OVHcloud Connect Datacenter
	/// </summary>
	public class OvhcloudconnectDatacenter {
		
		private bool Available_bfield;
		
		private long Id_bfield;
		
		private string Name_bfield;
		
		/// <summary>
		/// Get availability to add new configuration on it
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Get availability to add new configuration on it&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("available")]
		public bool Available {
			get {
				return this.Available_bfield;
			}
			set {
				this.Available_bfield = value;
			}
		}
		
		/// <summary>
		/// ID of the datacenter
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;ID of the datacenter&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("id")]
		public long Id {
			get {
				return this.Id_bfield;
			}
			set {
				this.Id_bfield = value;
			}
		}
		
		/// <summary>
		/// name of the datacenter
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;name of the datacenter&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("name")]
		public string Name {
			get {
				return this.Name_bfield;
			}
			set {
				this.Name_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// OVHcloud Connect Service Datacenter Configuration
	/// </summary>
	public class OvhcloudconnectDatacenterConfig {
		
		private long DatacenterId_bfield;
		
		private long Id_bfield;
		
		private long OvhBgpArea_bfield;
		
		private string Status_bfield;
		
		private string Subnet_bfield;
		
		/// <summary>
		/// ID of the datacenter linked
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;ID of the datacenter linked&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("datacenterId")]
		public long DatacenterId {
			get {
				return this.DatacenterId_bfield;
			}
			set {
				this.DatacenterId_bfield = value;
			}
		}
		
		/// <summary>
		/// ID of the Datacenter configuration
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;ID of the Datacenter configuration&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("id")]
		public long Id {
			get {
				return this.Id_bfield;
			}
			set {
				this.Id_bfield = value;
			}
		}
		
		/// <summary>
		/// OVH Private AS
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;OVH Private AS&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("ovhBgpArea")]
		public long OvhBgpArea {
			get {
				return this.OvhBgpArea_bfield;
			}
			set {
				this.OvhBgpArea_bfield = value;
			}
		}
		
		/// <summary>
		/// Status of the pop configuration
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;ovhcloudconnect.popConfig.StatusEnum&quot;,&quot;Description&quot;:&quot;Status of the pop configuration&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("status")]
		public string Status {
			get {
				return this.Status_bfield;
			}
			set {
				this.Status_bfield = value;
			}
		}
		
		/// <summary>
		/// Subnet should be a /28 min
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;ipv4Block&quot;,&quot;Description&quot;:&quot;Subnet should be a /28 min&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("subnet")]
		public string Subnet {
			get {
				return this.Subnet_bfield;
			}
			set {
				this.Subnet_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// OVHcloud Connect Service Datacenter Extra Configuration
	/// </summary>
	public class OvhcloudconnectDatacenterExtraConfig {
		
		private System.Nullable<long> BgpNeighborArea_bfield;
		
		private string BgpNeighborIp_bfield;
		
		private long Id_bfield;
		
		private string NextHop_bfield;
		
		private string Status_bfield;
		
		private string Subnet_bfield;
		
		private string Type_bfield;
		
		/// <summary>
		/// BGP AS number
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;BGP AS number&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("bgpNeighborArea")]
		public System.Nullable<long> BgpNeighborArea {
			get {
				return this.BgpNeighborArea_bfield;
			}
			set {
				this.BgpNeighborArea_bfield = value;
			}
		}
		
		/// <summary>
		/// Router IP for BGP
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;ipv4&quot;,&quot;Description&quot;:&quot;Router IP for BGP&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("bgpNeighborIp")]
		public string BgpNeighborIp {
			get {
				return this.BgpNeighborIp_bfield;
			}
			set {
				this.BgpNeighborIp_bfield = value;
			}
		}
		
		/// <summary>
		/// ID of the extra configuration 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;ID of the extra configuration &quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("id")]
		public long Id {
			get {
				return this.Id_bfield;
			}
			set {
				this.Id_bfield = value;
			}
		}
		
		/// <summary>
		/// Static route next hop
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;ipv4&quot;,&quot;Description&quot;:&quot;Static route next hop&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("nextHop")]
		public string NextHop {
			get {
				return this.NextHop_bfield;
			}
			set {
				this.NextHop_bfield = value;
			}
		}
		
		/// <summary>
		/// Status of the pop configuration
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;ovhcloudconnect.popConfig.StatusEnum&quot;,&quot;Description&quot;:&quot;Status of the pop configuration&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("status")]
		public string Status {
			get {
				return this.Status_bfield;
			}
			set {
				this.Status_bfield = value;
			}
		}
		
		/// <summary>
		/// Static route ip
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;ipv4Block&quot;,&quot;Description&quot;:&quot;Static route ip&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("subnet")]
		public string Subnet {
			get {
				return this.Subnet_bfield;
			}
			set {
				this.Subnet_bfield = value;
			}
		}
		
		/// <summary>
		/// Type of the configuration
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;ovhcloudconnect.datacenterExtraConfig.TypeEnum&quot;,&quot;Description&quot;:&quot;Type of the configuration&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("type")]
		public string Type {
			get {
				return this.Type_bfield;
			}
			set {
				this.Type_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// OVHcloud Connect Interface
	/// </summary>
	public class OvhcloudconnectInterface {
		
		private long Id_bfield;
		
		private string IncomingLightStatus_bfield;
		
		private System.DateTime LightLastUpdate_bfield;
		
		private string OutgoingLightStatus_bfield;
		
		private string Status_bfield;
		
		/// <summary>
		/// Interface reference
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Interface reference&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("id")]
		public long Id {
			get {
				return this.Id_bfield;
			}
			set {
				this.Id_bfield = value;
			}
		}
		
		/// <summary>
		/// Status of the light received on the port (checked every 5 min)
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;ovhcloudconnect.interface.LightStatusEnum&quot;,&quot;Description&quot;:&quot;Status of the light received on the port (checked every 5 min)&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("incomingLightStatus")]
		public string IncomingLightStatus {
			get {
				return this.IncomingLightStatus_bfield;
			}
			set {
				this.IncomingLightStatus_bfield = value;
			}
		}
		
		/// <summary>
		/// Date of the last light change detected
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Date of the last light change detected&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("lightLastUpdate")]
		public System.DateTime LightLastUpdate {
			get {
				return this.LightLastUpdate_bfield;
			}
			set {
				this.LightLastUpdate_bfield = value;
			}
		}
		
		/// <summary>
		/// Status of the light emitted on the port (checked every 5 min)
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;ovhcloudconnect.interface.LightStatusEnum&quot;,&quot;Description&quot;:&quot;Status of the light emitted on the port (checked every 5 min)&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("outgoingLightStatus")]
		public string OutgoingLightStatus {
			get {
				return this.OutgoingLightStatus_bfield;
			}
			set {
				this.OutgoingLightStatus_bfield = value;
			}
		}
		
		/// <summary>
		/// Status of the port
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;ovhcloudconnect.interface.StatusEnum&quot;,&quot;Description&quot;:&quot;Status of the port&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("status")]
		public string Status {
			get {
				return this.Status_bfield;
			}
			set {
				this.Status_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// OVHcloud Connect Service Key
	/// </summary>
	public class OvhcloudconnectKey {
		
		private long Id_bfield;
		
		private string Key_bfield;
		
		private string Provider_bfield;
		
		private string Status_bfield;
		
		/// <summary>
		/// Service Key id
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Service Key id&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("id")]
		public long Id {
			get {
				return this.Id_bfield;
			}
			set {
				this.Id_bfield = value;
			}
		}
		
		/// <summary>
		/// Reference of the service
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Reference of the service&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("key")]
		public string Key {
			get {
				return this.Key_bfield;
			}
			set {
				this.Key_bfield = value;
			}
		}
		
		/// <summary>
		/// Service Key provider
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;ovhcloudconnect.key.ProviderEnum&quot;,&quot;Description&quot;:&quot;Service Key provider&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("provider")]
		public string Provider {
			get {
				return this.Provider_bfield;
			}
			set {
				this.Provider_bfield = value;
			}
		}
		
		/// <summary>
		/// Service Key status
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;ovhcloudconnect.key.StatusEnum&quot;,&quot;Description&quot;:&quot;Service Key status&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("status")]
		public string Status {
			get {
				return this.Status_bfield;
			}
			set {
				this.Status_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// OVHcloud Connect Service Pop Configuration
	/// </summary>
	public class OvhcloudconnectPopConfig {
		
		private long CustomerBgpArea_bfield;
		
		private long Id_bfield;
		
		private long InterfaceId_bfield;
		
		private long OvhBgpArea_bfield;
		
		private string Status_bfield;
		
		private string Subnet_bfield;
		
		private string Type_bfield;
		
		/// <summary>
		/// Customer Private AS
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Customer Private AS&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("customerBgpArea")]
		public long CustomerBgpArea {
			get {
				return this.CustomerBgpArea_bfield;
			}
			set {
				this.CustomerBgpArea_bfield = value;
			}
		}
		
		/// <summary>
		/// ID of the Pop Configuration
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;ID of the Pop Configuration&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("id")]
		public long Id {
			get {
				return this.Id_bfield;
			}
			set {
				this.Id_bfield = value;
			}
		}
		
		/// <summary>
		/// ID of the interface
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;ID of the interface&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("interfaceId")]
		public long InterfaceId {
			get {
				return this.InterfaceId_bfield;
			}
			set {
				this.InterfaceId_bfield = value;
			}
		}
		
		/// <summary>
		/// OVH Private AS
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;OVH Private AS&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("ovhBgpArea")]
		public long OvhBgpArea {
			get {
				return this.OvhBgpArea_bfield;
			}
			set {
				this.OvhBgpArea_bfield = value;
			}
		}
		
		/// <summary>
		/// Status of the pop configuration
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;ovhcloudconnect.popConfig.StatusEnum&quot;,&quot;Description&quot;:&quot;Status of the pop configuration&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("status")]
		public string Status {
			get {
				return this.Status_bfield;
			}
			set {
				this.Status_bfield = value;
			}
		}
		
		/// <summary>
		/// Subnet should be a /30, first IP for OVH, second IP for customer
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;ipv4Block&quot;,&quot;Description&quot;:&quot;Subnet should be a /30, first IP for OVH, second IP for customer&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("subnet")]
		public string Subnet {
			get {
				return this.Subnet_bfield;
			}
			set {
				this.Subnet_bfield = value;
			}
		}
		
		/// <summary>
		/// Type of the pop configuration
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;ovhcloudconnect.popConfig.TypeEnum&quot;,&quot;Description&quot;:&quot;Type of the pop configuration&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("type")]
		public string Type {
			get {
				return this.Type_bfield;
			}
			set {
				this.Type_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// OVHcloud Connect send key answer
	/// </summary>
	public class OvhcloudconnectSendKeyAnswer {
		
		private string MessageCode_bfield;
		
		/// <summary>
		/// message code for UX to display appropriate text
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;ovhcloudconnect.messageCode.Enum&quot;,&quot;Description&quot;:&quot;message code for UX to display appropriate text&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("messageCode")]
		public string MessageCode {
			get {
				return this.MessageCode_bfield;
			}
			set {
				this.MessageCode_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// OVHcloud Connect Service
	/// </summary>
	public class OvhcloudconnectService {
		
		private string Bandwidth_bfield;
		
		private string Description_bfield;
		
		private long[] InterfaceList_bfield;
		
		private string Pop_bfield;
		
		private string PortQuantity_bfield;
		
		private string Product_bfield;
		
		private string Provider_bfield;
		
		private string Status_bfield;
		
		private string Uuid_bfield;
		
		private string Vrack_bfield;
		
		/// <summary>
		/// Service bandwidth
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;ovhcloudconnect.service.BandwidthEnum&quot;,&quot;Description&quot;:&quot;Service bandwidth&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("bandwidth")]
		public string Bandwidth {
			get {
				return this.Bandwidth_bfield;
			}
			set {
				this.Bandwidth_bfield = value;
			}
		}
		
		/// <summary>
		/// Service description
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Service description&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("description")]
		public string Description {
			get {
				return this.Description_bfield;
			}
			set {
				this.Description_bfield = value;
			}
		}
		
		/// <summary>
		/// List of interfaces linked to a service
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long[]&quot;,&quot;Description&quot;:&quot;List of interfaces linked to a service&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("interfaceList")]
		public long[] InterfaceList {
			get {
				return this.InterfaceList_bfield;
			}
			set {
				this.InterfaceList_bfield = value;
			}
		}
		
		/// <summary>
		/// Pop reference where the service is delivered
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Pop reference where the service is delivered&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("pop")]
		public string Pop {
			get {
				return this.Pop_bfield;
			}
			set {
				this.Pop_bfield = value;
			}
		}
		
		/// <summary>
		/// Port quantity
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;ovhcloudconnect.service.PortEnum&quot;,&quot;Description&quot;:&quot;Port quantity&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("portQuantity")]
		public string PortQuantity {
			get {
				return this.PortQuantity_bfield;
			}
			set {
				this.PortQuantity_bfield = value;
			}
		}
		
		/// <summary>
		/// Product name of the service
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Product name of the service&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("product")]
		public string Product {
			get {
				return this.Product_bfield;
			}
			set {
				this.Product_bfield = value;
			}
		}
		
		/// <summary>
		/// Service provider
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;ovhcloudconnect.service.ProviderEnum&quot;,&quot;Description&quot;:&quot;Service provider&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("provider")]
		public string Provider {
			get {
				return this.Provider_bfield;
			}
			set {
				this.Provider_bfield = value;
			}
		}
		
		/// <summary>
		/// Service status
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;ovhcloudconnect.service.StatusEnum&quot;,&quot;Description&quot;:&quot;Service status&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("status")]
		public string Status {
			get {
				return this.Status_bfield;
			}
			set {
				this.Status_bfield = value;
			}
		}
		
		/// <summary>
		/// Service UUID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Service UUID&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("uuid")]
		public string Uuid {
			get {
				return this.Uuid_bfield;
			}
			set {
				this.Uuid_bfield = value;
			}
		}
		
		/// <summary>
		/// vrack linked to the service
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;vrack linked to the service&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("vrack")]
		public string Vrack {
			get {
				return this.Vrack_bfield;
			}
			set {
				this.Vrack_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// OVHcloud Connect Task
	/// </summary>
	public class OvhcloudconnectTask {
		
		private string Function_bfield;
		
		private long Id_bfield;
		
		private long ResourceId_bfield;
		
		private string Status_bfield;
		
		/// <summary>
		/// Task function
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;ovhcloudconnect.task.FunctionEnum&quot;,&quot;Description&quot;:&quot;Task function&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("function")]
		public string Function {
			get {
				return this.Function_bfield;
			}
			set {
				this.Function_bfield = value;
			}
		}
		
		/// <summary>
		/// Task id
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Task id&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("id")]
		public long Id {
			get {
				return this.Id_bfield;
			}
			set {
				this.Id_bfield = value;
			}
		}
		
		/// <summary>
		/// Reference of the created resource
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Reference of the created resource&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("resourceId")]
		public long ResourceId {
			get {
				return this.ResourceId_bfield;
			}
			set {
				this.ResourceId_bfield = value;
			}
		}
		
		/// <summary>
		/// Task status
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;ovhcloudconnect.task.StatusEnum&quot;,&quot;Description&quot;:&quot;Task status&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("status")]
		public string Status {
			get {
				return this.Status_bfield;
			}
			set {
				this.Status_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// OVHcloud Connect email
	/// </summary>
	public class OvhcloudconnectTo {
		
		private string Email_bfield;
		
		/// <summary>
		/// Email address to send the key
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Email address to send the key&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("email")]
		public string Email {
			get {
				return this.Email_bfield;
			}
			set {
				this.Email_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Missing description
	/// </summary>
	public class OvhcloudconnectUpdate {
		
		private string Description_bfield;
		
		/// <summary>
		/// New description for your service
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;New description for your service&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("description")]
		public string Description {
			get {
				return this.Description_bfield;
			}
			set {
				this.Description_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Map a possible renew for a specific service
	/// </summary>
	public class ServiceRenewType {
		
		private bool Automatic_bfield;
		
		private bool DeleteAtExpiration_bfield;
		
		private bool Forced_bfield;
		
		private System.Nullable<bool> ManualPayment_bfield;
		
		private System.Nullable<long> Period_bfield;
		
		/// <summary>
		/// The service is automatically renewed
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;The service is automatically renewed&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("automatic")]
		public bool Automatic {
			get {
				return this.Automatic_bfield;
			}
			set {
				this.Automatic_bfield = value;
			}
		}
		
		/// <summary>
		/// The service will be deleted at expiration
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;The service will be deleted at expiration&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("deleteAtExpiration")]
		public bool DeleteAtExpiration {
			get {
				return this.DeleteAtExpiration_bfield;
			}
			set {
				this.DeleteAtExpiration_bfield = value;
			}
		}
		
		/// <summary>
		/// The service forced to be renewed
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;The service forced to be renewed&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("forced")]
		public bool Forced {
			get {
				return this.Forced_bfield;
			}
			set {
				this.Forced_bfield = value;
			}
		}
		
		/// <summary>
		/// The service needs to be manually renewed and paid
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;The service needs to be manually renewed and paid&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("manualPayment")]
		public System.Nullable<bool> ManualPayment {
			get {
				return this.ManualPayment_bfield;
			}
			set {
				this.ManualPayment_bfield = value;
			}
		}
		
		/// <summary>
		/// period of renew in month
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;period of renew in month&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("period")]
		public System.Nullable<long> Period {
			get {
				return this.Period_bfield;
			}
			set {
				this.Period_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Details about a Service
	/// </summary>
	public class ServicesService {
		
		private bool CanDeleteAtExpiration_bfield;
		
		private string ContactAdmin_bfield;
		
		private string ContactBilling_bfield;
		
		private string ContactTech_bfield;
		
		private string Creation_bfield;
		
		private string Domain_bfield;
		
		private string EngagedUpTo_bfield;
		
		private string Expiration_bfield;
		
		private long[] PossibleRenewPeriod_bfield;
		
		private ServiceRenewType Renew_bfield;
		
		private string RenewalType_bfield;
		
		private long ServiceId_bfield;
		
		private string Status_bfield;
		
		/// <summary>
		/// Indicates that the service can be set up to be deleted at expiration
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Indicates that the service can be set up to be deleted at expiration&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("canDeleteAtExpiration")]
		public bool CanDeleteAtExpiration {
			get {
				return this.CanDeleteAtExpiration_bfield;
			}
			set {
				this.CanDeleteAtExpiration_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("contactAdmin")]
		public string ContactAdmin {
			get {
				return this.ContactAdmin_bfield;
			}
			set {
				this.ContactAdmin_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("contactBilling")]
		public string ContactBilling {
			get {
				return this.ContactBilling_bfield;
			}
			set {
				this.ContactBilling_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("contactTech")]
		public string ContactTech {
			get {
				return this.ContactTech_bfield;
			}
			set {
				this.ContactTech_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;date&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("creation")]
		public string Creation {
			get {
				return this.Creation_bfield;
			}
			set {
				this.Creation_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("domain")]
		public string Domain {
			get {
				return this.Domain_bfield;
			}
			set {
				this.Domain_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;date&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("engagedUpTo")]
		public string EngagedUpTo {
			get {
				return this.EngagedUpTo_bfield;
			}
			set {
				this.EngagedUpTo_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;date&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("expiration")]
		public string Expiration {
			get {
				return this.Expiration_bfield;
			}
			set {
				this.Expiration_bfield = value;
			}
		}
		
		/// <summary>
		/// All the possible renew period of your service in month
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long[]&quot;,&quot;Description&quot;:&quot;All the possible renew period of your service in month&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("possibleRenewPeriod")]
		public long[] PossibleRenewPeriod {
			get {
				return this.PossibleRenewPeriod_bfield;
			}
			set {
				this.PossibleRenewPeriod_bfield = value;
			}
		}
		
		/// <summary>
		/// Way of handling the renew
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;service.RenewType&quot;,&quot;Description&quot;:&quot;Way of handling the renew&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("renew")]
		public ServiceRenewType Renew {
			get {
				return this.Renew_bfield;
			}
			set {
				this.Renew_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;service.RenewalTypeEnum&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("renewalType")]
		public string RenewalType {
			get {
				return this.RenewalType_bfield;
			}
			set {
				this.RenewalType_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("serviceId")]
		public long ServiceId {
			get {
				return this.ServiceId_bfield;
			}
			set {
				this.ServiceId_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;service.StateEnum&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("status")]
		public string Status {
			get {
				return this.Status_bfield;
			}
			set {
				this.Status_bfield = value;
			}
		}
	}
}
