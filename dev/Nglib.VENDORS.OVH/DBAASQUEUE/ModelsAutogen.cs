//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Newtonsoft.Json;
using Nglib.VENDORS.OVH.SHARED;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Threading.Tasks;


// [GET] "/dbaas/queue"  string[]--
//[GET] "/dbaas/queue/{serviceName}"  dbaas.queue.App--serviceName
//[PUT] "/dbaas/queue/{serviceName}"  dbaas.queue.App--name,serviceName
//[GET] "/dbaas/queue/{serviceName}/key"  string[]--serviceName
//[GET] "/dbaas/queue/{serviceName}/key/{keyId}"  dbaas.queue.Key--keyId,serviceName
//[GET] "/dbaas/queue/{serviceName}/metrics/account"  dbaas.queue.MetricsAccount--serviceName
//[GET] "/dbaas/queue/{serviceName}/region"  string[]--serviceName
//[GET] "/dbaas/queue/{serviceName}/region/{regionId}"  dbaas.queue.Region--regionId,serviceName
//[GET] "/dbaas/queue/{serviceName}/role"  string[]--serviceName
//[GET] "/dbaas/queue/{serviceName}/role/{roleName}"  dbaas.queue.Role--roleName,serviceName
//[GET] "/dbaas/queue/{serviceName}/serviceInfos"  services.Service--serviceName
//[PUT] "/dbaas/queue/{serviceName}/serviceInfos"  void--,serviceName
//[GET] "/dbaas/queue/{serviceName}/topic"  string[]--serviceName
//[DELETE] "/dbaas/queue/{serviceName}/topic/{topicId}"  void--serviceName,topicId
//[GET] "/dbaas/queue/{serviceName}/topic/{topicId}"  dbaas.queue.Topic--serviceName,topicId
//[GET] "/dbaas/queue/{serviceName}/user"  string[]--serviceName
//[GET] "/dbaas/queue/{serviceName}/user/{userId}"  dbaas.queue.User--serviceName,userId
//[POST] "/dbaas/queue/{serviceName}/user/{userId}/changePassword"  dbaas.queue.UserWithPassword--serviceName,userId
//[GET] "/dbaas/queue/{serviceName}/user/{userId}/roles"  string[]--serviceName,userId
namespace Nglib.VENDORS.OVH.DBAASQUEUE {
	
	
	/// <summary>
	/// Detailed renewal type of a service
	/// </summary>
	public enum ServiceRenewalTypeEnum {
		
		[EnumMember(Value="automaticForcedProduct")]
		AutomaticForcedProduct,
		
		[EnumMember(Value="automaticV2012")]
		AutomaticV2012,
		
		[EnumMember(Value="automaticV2014")]
		AutomaticV2014,
		
		[EnumMember(Value="automaticV2016")]
		AutomaticV2016,
		
		[EnumMember(Value="manual")]
		Manual,
		
		[EnumMember(Value="oneShot")]
		OneShot,
		
		[EnumMember(Value="option")]
		Option,
	}
	
	public enum ServiceStateEnum {
		
		[EnumMember(Value="expired")]
		Expired,
		
		[EnumMember(Value="inCreation")]
		InCreation,
		
		[EnumMember(Value="ok")]
		Ok,
		
		[EnumMember(Value="pendingDebt")]
		PendingDebt,
		
		[EnumMember(Value="unPaid")]
		UnPaid,
	}
	
	/// <summary>
	/// App
	/// </summary>
	public class DbaasqueueApp {
		
		private string HumanId_bfield;
		
		private string Id_bfield;
		
		private string Name_bfield;
		
		private string RegionId_bfield;
		
		private DbaasqueueAppStatus Status_bfield;
		
		/// <summary>
		/// Human ID of the application
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Human ID of the application&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("humanId")]
		public string HumanId {
			get {
				return this.HumanId_bfield;
			}
			set {
				this.HumanId_bfield = value;
			}
		}
		
		/// <summary>
		/// Application ID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Application ID&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("id")]
		public string Id {
			get {
				return this.Id_bfield;
			}
			set {
				this.Id_bfield = value;
			}
		}
		
		/// <summary>
		/// Application name
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Application name&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("name")]
		public string Name {
			get {
				return this.Name_bfield;
			}
			set {
				this.Name_bfield = value;
			}
		}
		
		/// <summary>
		/// Region ID of the application
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Region ID of the application&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("regionId")]
		public string RegionId {
			get {
				return this.RegionId_bfield;
			}
			set {
				this.RegionId_bfield = value;
			}
		}
		
		/// <summary>
		/// Application status
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;dbaas.queue.AppStatus&quot;,&quot;Description&quot;:&quot;Application status&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("status")]
		public DbaasqueueAppStatus Status {
			get {
				return this.Status_bfield;
			}
			set {
				this.Status_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// AppConfiguration
	/// </summary>
	public class DbaasqueueAppConfiguration {
		
		private DbaasqueueApp App_bfield;
		
		private DbaasqueueMetricsAccount MetricsAccount_bfield;
		
		private string[] Roles_bfield;
		
		private string[] Users_bfield;
		
		/// <summary>
		/// Application
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;dbaas.queue.App&quot;,&quot;Description&quot;:&quot;Application&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("app")]
		public DbaasqueueApp App {
			get {
				return this.App_bfield;
			}
			set {
				this.App_bfield = value;
			}
		}
		
		/// <summary>
		/// Metrics account
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;dbaas.queue.MetricsAccount&quot;,&quot;Description&quot;:&quot;Metrics account&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("metricsAccount")]
		public DbaasqueueMetricsAccount MetricsAccount {
			get {
				return this.MetricsAccount_bfield;
			}
			set {
				this.MetricsAccount_bfield = value;
			}
		}
		
		/// <summary>
		/// List of created roles
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;dbaas.queue.Role[]&quot;,&quot;Description&quot;:&quot;List of created roles&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("roles")]
		public string[] Roles {
			get {
				return this.Roles_bfield;
			}
			set {
				this.Roles_bfield = value;
			}
		}
		
		/// <summary>
		/// List of created users
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;dbaas.queue.UserWithPassword[]&quot;,&quot;Description&quot;:&quot;List of created users&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("users")]
		public string[] Users {
			get {
				return this.Users_bfield;
			}
			set {
				this.Users_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// AppStatus
	/// </summary>
	public class DbaasqueueAppStatus {
	}
	
	/// <summary>
	/// Key
	/// </summary>
	public class DbaasqueueKey {
		
		private string HumanAppId_bfield;
		
		private string Id_bfield;
		
		private string Name_bfield;
		
		/// <summary>
		/// Human ID of the key's application
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Human ID of the key's application&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("humanAppId")]
		public string HumanAppId {
			get {
				return this.HumanAppId_bfield;
			}
			set {
				this.HumanAppId_bfield = value;
			}
		}
		
		/// <summary>
		/// Key ID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Key ID&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("id")]
		public string Id {
			get {
				return this.Id_bfield;
			}
			set {
				this.Id_bfield = value;
			}
		}
		
		/// <summary>
		/// Key name
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Key name&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("name")]
		public string Name {
			get {
				return this.Name_bfield;
			}
			set {
				this.Name_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// KeyWithSecret
	/// </summary>
	public class DbaasqueueKeyWithSecret {
		
		private string HumanAppId_bfield;
		
		private string Id_bfield;
		
		private string Name_bfield;
		
		private string Secret_bfield;
		
		/// <summary>
		/// Human ID of the key's application
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Human ID of the key's application&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("humanAppId")]
		public string HumanAppId {
			get {
				return this.HumanAppId_bfield;
			}
			set {
				this.HumanAppId_bfield = value;
			}
		}
		
		/// <summary>
		/// Key ID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Key ID&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("id")]
		public string Id {
			get {
				return this.Id_bfield;
			}
			set {
				this.Id_bfield = value;
			}
		}
		
		/// <summary>
		/// Key name
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Key name&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("name")]
		public string Name {
			get {
				return this.Name_bfield;
			}
			set {
				this.Name_bfield = value;
			}
		}
		
		/// <summary>
		/// Key secret
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;password&quot;,&quot;Description&quot;:&quot;Key secret&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("secret")]
		public string Secret {
			get {
				return this.Secret_bfield;
			}
			set {
				this.Secret_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// MetricsAccount
	/// </summary>
	public class DbaasqueueMetricsAccount {
		
		private string Host_bfield;
		
		private string Token_bfield;
		
		/// <summary>
		/// OpenTSDB host url
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;OpenTSDB host url&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("host")]
		public string Host {
			get {
				return this.Host_bfield;
			}
			set {
				this.Host_bfield = value;
			}
		}
		
		/// <summary>
		/// Token for OpenTSDB metrics access
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Token for OpenTSDB metrics access&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("token")]
		public string Token {
			get {
				return this.Token_bfield;
			}
			set {
				this.Token_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Region
	/// </summary>
	public class DbaasqueueRegion {
		
		private string Id_bfield;
		
		private string Name_bfield;
		
		private string Url_bfield;
		
		/// <summary>
		/// Region ID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Region ID&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("id")]
		public string Id {
			get {
				return this.Id_bfield;
			}
			set {
				this.Id_bfield = value;
			}
		}
		
		/// <summary>
		/// Region name
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Region name&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("name")]
		public string Name {
			get {
				return this.Name_bfield;
			}
			set {
				this.Name_bfield = value;
			}
		}
		
		/// <summary>
		/// Region URL
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Region URL&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("url")]
		public string Url {
			get {
				return this.Url_bfield;
			}
			set {
				this.Url_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Role
	/// </summary>
	public class DbaasqueueRole {
		
		private bool AutoCreateAcl_bfield;
		
		private string Name_bfield;
		
		private string[] ReadAcl_bfield;
		
		private string[] WriteAcl_bfield;
		
		/// <summary>
		/// Automatically create non-existing topics on read &amp; write operations
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Automatically create non-existing topics on read &amp; write operations&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("autoCreateAcl")]
		public bool AutoCreateAcl {
			get {
				return this.AutoCreateAcl_bfield;
			}
			set {
				this.AutoCreateAcl_bfield = value;
			}
		}
		
		/// <summary>
		/// Role name
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Role name&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("name")]
		public string Name {
			get {
				return this.Name_bfield;
			}
			set {
				this.Name_bfield = value;
			}
		}
		
		/// <summary>
		/// List of topics with read access
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string[]&quot;,&quot;Description&quot;:&quot;List of topics with read access&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("readAcl")]
		public string[] ReadAcl {
			get {
				return this.ReadAcl_bfield;
			}
			set {
				this.ReadAcl_bfield = value;
			}
		}
		
		/// <summary>
		/// List of topics with write access
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string[]&quot;,&quot;Description&quot;:&quot;List of topics with write access&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("writeAcl")]
		public string[] WriteAcl {
			get {
				return this.WriteAcl_bfield;
			}
			set {
				this.WriteAcl_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Topic
	/// </summary>
	public class DbaasqueueTopic {
		
		private string Id_bfield;
		
		private long Partitions_bfield;
		
		private long ReplicationFactor_bfield;
		
		/// <summary>
		/// Topic ID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Topic ID&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("id")]
		public string Id {
			get {
				return this.Id_bfield;
			}
			set {
				this.Id_bfield = value;
			}
		}
		
		/// <summary>
		/// Number of partitions
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Number of partitions&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("partitions")]
		public long Partitions {
			get {
				return this.Partitions_bfield;
			}
			set {
				this.Partitions_bfield = value;
			}
		}
		
		/// <summary>
		/// Replication factor
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Replication factor&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("replicationFactor")]
		public long ReplicationFactor {
			get {
				return this.ReplicationFactor_bfield;
			}
			set {
				this.ReplicationFactor_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// User
	/// </summary>
	public class DbaasqueueUser {
		
		private string Id_bfield;
		
		private string Name_bfield;
		
		private string[] Roles_bfield;
		
		/// <summary>
		/// User ID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;User ID&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("id")]
		public string Id {
			get {
				return this.Id_bfield;
			}
			set {
				this.Id_bfield = value;
			}
		}
		
		/// <summary>
		/// User name
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;User name&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("name")]
		public string Name {
			get {
				return this.Name_bfield;
			}
			set {
				this.Name_bfield = value;
			}
		}
		
		/// <summary>
		/// List of roles this user belongs to
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string[]&quot;,&quot;Description&quot;:&quot;List of roles this user belongs to&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("roles")]
		public string[] Roles {
			get {
				return this.Roles_bfield;
			}
			set {
				this.Roles_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// UserWithPassword
	/// </summary>
	public class DbaasqueueUserWithPassword {
		
		private string Id_bfield;
		
		private string Name_bfield;
		
		private string Password_bfield;
		
		private string[] Roles_bfield;
		
		/// <summary>
		/// User ID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;User ID&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("id")]
		public string Id {
			get {
				return this.Id_bfield;
			}
			set {
				this.Id_bfield = value;
			}
		}
		
		/// <summary>
		/// User name
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;User name&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("name")]
		public string Name {
			get {
				return this.Name_bfield;
			}
			set {
				this.Name_bfield = value;
			}
		}
		
		/// <summary>
		/// User password
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;password&quot;,&quot;Description&quot;:&quot;User password&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("password")]
		public string Password {
			get {
				return this.Password_bfield;
			}
			set {
				this.Password_bfield = value;
			}
		}
		
		/// <summary>
		/// List of roles this user belongs to
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string[]&quot;,&quot;Description&quot;:&quot;List of roles this user belongs to&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("roles")]
		public string[] Roles {
			get {
				return this.Roles_bfield;
			}
			set {
				this.Roles_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Map a possible renew for a specific service
	/// </summary>
	public class ServiceRenewType {
		
		private bool Automatic_bfield;
		
		private bool DeleteAtExpiration_bfield;
		
		private bool Forced_bfield;
		
		private System.Nullable<bool> ManualPayment_bfield;
		
		private System.Nullable<long> Period_bfield;
		
		/// <summary>
		/// The service is automatically renewed
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;The service is automatically renewed&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("automatic")]
		public bool Automatic {
			get {
				return this.Automatic_bfield;
			}
			set {
				this.Automatic_bfield = value;
			}
		}
		
		/// <summary>
		/// The service will be deleted at expiration
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;The service will be deleted at expiration&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("deleteAtExpiration")]
		public bool DeleteAtExpiration {
			get {
				return this.DeleteAtExpiration_bfield;
			}
			set {
				this.DeleteAtExpiration_bfield = value;
			}
		}
		
		/// <summary>
		/// The service forced to be renewed
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;The service forced to be renewed&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("forced")]
		public bool Forced {
			get {
				return this.Forced_bfield;
			}
			set {
				this.Forced_bfield = value;
			}
		}
		
		/// <summary>
		/// The service needs to be manually renewed and paid
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;The service needs to be manually renewed and paid&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("manualPayment")]
		public System.Nullable<bool> ManualPayment {
			get {
				return this.ManualPayment_bfield;
			}
			set {
				this.ManualPayment_bfield = value;
			}
		}
		
		/// <summary>
		/// period of renew in month
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;period of renew in month&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("period")]
		public System.Nullable<long> Period {
			get {
				return this.Period_bfield;
			}
			set {
				this.Period_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Details about a Service
	/// </summary>
	public class ServicesService {
		
		private bool CanDeleteAtExpiration_bfield;
		
		private string ContactAdmin_bfield;
		
		private string ContactBilling_bfield;
		
		private string ContactTech_bfield;
		
		private string Creation_bfield;
		
		private string Domain_bfield;
		
		private string EngagedUpTo_bfield;
		
		private string Expiration_bfield;
		
		private long[] PossibleRenewPeriod_bfield;
		
		private ServiceRenewType Renew_bfield;
		
		private string RenewalType_bfield;
		
		private long ServiceId_bfield;
		
		private string Status_bfield;
		
		/// <summary>
		/// Indicates that the service can be set up to be deleted at expiration
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Indicates that the service can be set up to be deleted at expiration&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("canDeleteAtExpiration")]
		public bool CanDeleteAtExpiration {
			get {
				return this.CanDeleteAtExpiration_bfield;
			}
			set {
				this.CanDeleteAtExpiration_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("contactAdmin")]
		public string ContactAdmin {
			get {
				return this.ContactAdmin_bfield;
			}
			set {
				this.ContactAdmin_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("contactBilling")]
		public string ContactBilling {
			get {
				return this.ContactBilling_bfield;
			}
			set {
				this.ContactBilling_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("contactTech")]
		public string ContactTech {
			get {
				return this.ContactTech_bfield;
			}
			set {
				this.ContactTech_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;date&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("creation")]
		public string Creation {
			get {
				return this.Creation_bfield;
			}
			set {
				this.Creation_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("domain")]
		public string Domain {
			get {
				return this.Domain_bfield;
			}
			set {
				this.Domain_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;date&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("engagedUpTo")]
		public string EngagedUpTo {
			get {
				return this.EngagedUpTo_bfield;
			}
			set {
				this.EngagedUpTo_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;date&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("expiration")]
		public string Expiration {
			get {
				return this.Expiration_bfield;
			}
			set {
				this.Expiration_bfield = value;
			}
		}
		
		/// <summary>
		/// All the possible renew period of your service in month
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long[]&quot;,&quot;Description&quot;:&quot;All the possible renew period of your service in month&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("possibleRenewPeriod")]
		public long[] PossibleRenewPeriod {
			get {
				return this.PossibleRenewPeriod_bfield;
			}
			set {
				this.PossibleRenewPeriod_bfield = value;
			}
		}
		
		/// <summary>
		/// Way of handling the renew
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;service.RenewType&quot;,&quot;Description&quot;:&quot;Way of handling the renew&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("renew")]
		public ServiceRenewType Renew {
			get {
				return this.Renew_bfield;
			}
			set {
				this.Renew_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;service.RenewalTypeEnum&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("renewalType")]
		public string RenewalType {
			get {
				return this.RenewalType_bfield;
			}
			set {
				this.RenewalType_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("serviceId")]
		public long ServiceId {
			get {
				return this.ServiceId_bfield;
			}
			set {
				this.ServiceId_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;service.StateEnum&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("status")]
		public string Status {
			get {
				return this.Status_bfield;
			}
			set {
				this.Status_bfield = value;
			}
		}
	}
}
