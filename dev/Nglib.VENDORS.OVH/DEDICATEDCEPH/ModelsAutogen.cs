//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Newtonsoft.Json;
using Nglib.VENDORS.OVH.SHARED;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Threading.Tasks;


// [GET] "/dedicated/ceph"  string[]--
//[GET] "/dedicated/ceph/{serviceName}"  dedicated.ceph.clusterGet.response--serviceName
//[PUT] "/dedicated/ceph/{serviceName}"  string--crushTunables,label,serviceName
//[GET] "/dedicated/ceph/{serviceName}/acl"  dedicated.ceph.aclList.response[]--serviceName
//[POST] "/dedicated/ceph/{serviceName}/acl"  string--aclList,serviceName
//[DELETE] "/dedicated/ceph/{serviceName}/acl/{aclId}"  string--aclId,serviceName
//[GET] "/dedicated/ceph/{serviceName}/acl/{aclId}"  dedicated.ceph.aclGet.response--aclId,serviceName
//[GET] "/dedicated/ceph/{serviceName}/cephfs"  dedicated.ceph.cephfsList.response[]--serviceName
//[DELETE] "/dedicated/ceph/{serviceName}/cephfs/{fsName}"  string--fsName,serviceName
//[GET] "/dedicated/ceph/{serviceName}/cephfs/{fsName}"  dedicated.ceph.cephfsGet.response--fsName,serviceName
//[POST] "/dedicated/ceph/{serviceName}/cephfs/{fsName}/disable"  string--fsName,serviceName
//[POST] "/dedicated/ceph/{serviceName}/cephfs/{fsName}/enable"  string--fsName,serviceName
//[POST] "/dedicated/ceph/{serviceName}/changeContact"  long[]--contactAdmin,contactBilling,contactTech,serviceName
//[POST] "/dedicated/ceph/{serviceName}/confirmTermination"  string--commentary,futureUse,reason,serviceName,token
//[GET] "/dedicated/ceph/{serviceName}/health"  dedicated.ceph.clusterHealth.response--serviceName
//[GET] "/dedicated/ceph/{serviceName}/pool"  dedicated.ceph.poolList.response[]--serviceName
//[POST] "/dedicated/ceph/{serviceName}/pool"  string--poolName,serviceName
//[DELETE] "/dedicated/ceph/{serviceName}/pool/{poolName}"  string--poolName,serviceName
//[GET] "/dedicated/ceph/{serviceName}/pool/{poolName}"  dedicated.ceph.poolGet.response--poolName,serviceName
//[GET] "/dedicated/ceph/{serviceName}/serviceInfos"  services.Service--serviceName
//[PUT] "/dedicated/ceph/{serviceName}/serviceInfos"  void--,serviceName
//[GET] "/dedicated/ceph/{serviceName}/task"  dedicated.ceph.taskList.response[]--serviceName
//[GET] "/dedicated/ceph/{serviceName}/task/{taskId}"  dedicated.ceph.taskGet.response[]--serviceName,taskId
//[POST] "/dedicated/ceph/{serviceName}/terminate"  string--serviceName
//[GET] "/dedicated/ceph/{serviceName}/user"  dedicated.ceph.userList.response[]--serviceName
//[POST] "/dedicated/ceph/{serviceName}/user"  string--serviceName,userName
//[DELETE] "/dedicated/ceph/{serviceName}/user/{userName}"  string--serviceName,userName
//[GET] "/dedicated/ceph/{serviceName}/user/{userName}"  dedicated.ceph.userGet.response--serviceName,userName
//[GET] "/dedicated/ceph/{serviceName}/user/{userName}/pool"  dedicated.ceph.userPoolPermList.response[]--serviceName,userName
//[POST] "/dedicated/ceph/{serviceName}/user/{userName}/pool"  string--permissions,serviceName,userName
//[PUT] "/dedicated/ceph/{serviceName}/user/{userName}/pool"  string--classRead,classWrite,execute,poolName,read,serviceName,userName,write
//[DELETE] "/dedicated/ceph/{serviceName}/user/{userName}/pool/{poolName}"  string--poolName,serviceName,userName
namespace Nglib.VENDORS.OVH.DEDICATEDCEPH {
	
	
	/// <summary>
	/// Family of IP ACL
	/// </summary>
	public enum DedicatedcephaclGetresponsefamilyEnum {
		
		[EnumMember(Value="IPV4")]
		IPV4,
		
		[EnumMember(Value="IPV6")]
		IPV6,
	}
	
	/// <summary>
	/// Family of IP ACL
	/// </summary>
	public enum DedicatedcephaclListresponsefamilyEnum {
		
		[EnumMember(Value="IPV4")]
		IPV4,
		
		[EnumMember(Value="IPV6")]
		IPV6,
	}
	
	/// <summary>
	/// Tunables of cluster
	/// </summary>
	public enum DedicatedcephclusterGetresponsecrushTunablesEnum {
		
		[EnumMember(Value="OPTIMAL")]
		OPTIMAL,
		
		[EnumMember(Value="DEFAULT")]
		DEFAULT,
		
		[EnumMember(Value="LEGACY")]
		LEGACY,
		
		[EnumMember(Value="BOBTAIL")]
		BOBTAIL,
		
		[EnumMember(Value="ARGONAUT")]
		ARGONAUT,
		
		[EnumMember(Value="FIREFLY")]
		FIREFLY,
		
		[EnumMember(Value="HAMMER")]
		HAMMER,
		
		[EnumMember(Value="JEWEL")]
		JEWEL,
	}
	
	/// <summary>
	/// State of cluster
	/// </summary>
	public enum DedicatedcephclusterGetresponsestateEnum {
		
		[EnumMember(Value="ACTIVE")]
		ACTIVE,
		
		[EnumMember(Value="SUSPENDED")]
		SUSPENDED,
	}
	
	/// <summary>
	/// Status of cluster
	/// </summary>
	public enum DedicatedcephclusterGetresponsestatusEnum {
		
		[EnumMember(Value="CREATING")]
		CREATING,
		
		[EnumMember(Value="INSTALLED")]
		INSTALLED,
		
		[EnumMember(Value="DELETING")]
		DELETING,
		
		[EnumMember(Value="DELETED")]
		DELETED,
		
		[EnumMember(Value="TASK_IN_PROGRESS")]
		TASK_IN_PROGRESS,
	}
	
	/// <summary>
	/// Tunables of cluster
	/// </summary>
	public enum DedicatedcephclusterUpdatecrushTunablesEnum {
		
		[EnumMember(Value="OPTIMAL")]
		OPTIMAL,
		
		[EnumMember(Value="DEFAULT")]
		DEFAULT,
		
		[EnumMember(Value="LEGACY")]
		LEGACY,
		
		[EnumMember(Value="BOBTAIL")]
		BOBTAIL,
		
		[EnumMember(Value="ARGONAUT")]
		ARGONAUT,
		
		[EnumMember(Value="FIREFLY")]
		FIREFLY,
		
		[EnumMember(Value="HAMMER")]
		HAMMER,
		
		[EnumMember(Value="JEWEL")]
		JEWEL,
	}
	
	/// <summary>
	/// Type of pool
	/// </summary>
	public enum DedicatedcephpoolGetresponsepoolTypeEnum {
		
		[EnumMember(Value="REPLICATED")]
		REPLICATED,
		
		[EnumMember(Value="ERASURE_CODED")]
		ERASURE_CODED,
	}
	
	/// <summary>
	/// Type of pool
	/// </summary>
	public enum DedicatedcephpoolListresponsepoolTypeEnum {
		
		[EnumMember(Value="REPLICATED")]
		REPLICATED,
		
		[EnumMember(Value="ERASURE_CODED")]
		ERASURE_CODED,
	}
	
	/// <summary>
	/// State of task
	/// </summary>
	public enum DedicatedcephtaskGetresponsestateEnum {
		
		[EnumMember(Value="IN PROGRESS")]
		IN_PROGRESS,
		
		[EnumMember(Value="DONE")]
		DONE,
		
		[EnumMember(Value="FAILED")]
		FAILED,
	}
	
	/// <summary>
	/// Detailed renewal type of a service
	/// </summary>
	public enum ServiceRenewalTypeEnum {
		
		[EnumMember(Value="automaticForcedProduct")]
		AutomaticForcedProduct,
		
		[EnumMember(Value="automaticV2012")]
		AutomaticV2012,
		
		[EnumMember(Value="automaticV2014")]
		AutomaticV2014,
		
		[EnumMember(Value="automaticV2016")]
		AutomaticV2016,
		
		[EnumMember(Value="manual")]
		Manual,
		
		[EnumMember(Value="oneShot")]
		OneShot,
		
		[EnumMember(Value="option")]
		Option,
	}
	
	public enum ServiceStateEnum {
		
		[EnumMember(Value="expired")]
		Expired,
		
		[EnumMember(Value="inCreation")]
		InCreation,
		
		[EnumMember(Value="ok")]
		Ok,
		
		[EnumMember(Value="pendingDebt")]
		PendingDebt,
		
		[EnumMember(Value="unPaid")]
		UnPaid,
	}
	
	/// <summary>
	/// All future uses you can provide for a service termination
	/// </summary>
	public enum ServiceTerminationFutureUseEnum {
		
		[EnumMember(Value="NOT_REPLACING_SERVICE")]
		NOT_REPLACING_SERVICE,
		
		[EnumMember(Value="OTHER")]
		OTHER,
		
		[EnumMember(Value="SUBSCRIBE_AN_OTHER_SERVICE")]
		SUBSCRIBE_AN_OTHER_SERVICE,
		
		[EnumMember(Value="SUBSCRIBE_OTHER_KIND_OF_SERVICE_WITH_COMPETITOR")]
		SUBSCRIBE_OTHER_KIND_OF_SERVICE_WITH_COMPETITOR,
		
		[EnumMember(Value="SUBSCRIBE_SIMILAR_SERVICE_WITH_COMPETITOR")]
		SUBSCRIBE_SIMILAR_SERVICE_WITH_COMPETITOR,
	}
	
	/// <summary>
	/// All reasons you can provide for a service termination
	/// </summary>
	public enum ServiceTerminationReasonEnum {
		
		[EnumMember(Value="FEATURES_DONT_SUIT_ME")]
		FEATURES_DONT_SUIT_ME,
		
		[EnumMember(Value="LACK_OF_PERFORMANCES")]
		LACK_OF_PERFORMANCES,
		
		[EnumMember(Value="MIGRATED_TO_ANOTHER_OVH_PRODUCT")]
		MIGRATED_TO_ANOTHER_OVH_PRODUCT,
		
		[EnumMember(Value="MIGRATED_TO_COMPETITOR")]
		MIGRATED_TO_COMPETITOR,
		
		[EnumMember(Value="NOT_ENOUGH_RECOGNITION")]
		NOT_ENOUGH_RECOGNITION,
		
		[EnumMember(Value="NOT_NEEDED_ANYMORE")]
		NOT_NEEDED_ANYMORE,
		
		[EnumMember(Value="NOT_RELIABLE")]
		NOT_RELIABLE,
		
		[EnumMember(Value="NO_ANSWER")]
		NO_ANSWER,
		
		[EnumMember(Value="OTHER")]
		OTHER,
		
		[EnumMember(Value="PRODUCT_DIMENSION_DONT_SUIT_ME")]
		PRODUCT_DIMENSION_DONT_SUIT_ME,
		
		[EnumMember(Value="PRODUCT_TOOLS_DONT_SUIT_ME")]
		PRODUCT_TOOLS_DONT_SUIT_ME,
		
		[EnumMember(Value="TOO_EXPENSIVE")]
		TOO_EXPENSIVE,
		
		[EnumMember(Value="TOO_HARD_TO_USE")]
		TOO_HARD_TO_USE,
		
		[EnumMember(Value="UNSATIFIED_BY_CUSTOMER_SUPPORT")]
		UNSATIFIED_BY_CUSTOMER_SUPPORT,
	}
	
	/// <summary>
	/// IP ACL
	/// </summary>
	public class DedicatedcephaclGetresponse {
		
		private string Family_bfield;
		
		private long Id_bfield;
		
		private string Netmask_bfield;
		
		private string Network_bfield;
		
		/// <summary>
		/// Family of IP ACL
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;dedicated.ceph.aclGet.response.familyEnum&quot;,&quot;Description&quot;:&quot;Family of IP ACL&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("family")]
		public string Family {
			get {
				return this.Family_bfield;
			}
			set {
				this.Family_bfield = value;
			}
		}
		
		/// <summary>
		/// ID of IP ACL
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;ID of IP ACL&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("id")]
		public long Id {
			get {
				return this.Id_bfield;
			}
			set {
				this.Id_bfield = value;
			}
		}
		
		/// <summary>
		/// Netmask of IP ACL
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;ip&quot;,&quot;Description&quot;:&quot;Netmask of IP ACL&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("netmask")]
		public string Netmask {
			get {
				return this.Netmask_bfield;
			}
			set {
				this.Netmask_bfield = value;
			}
		}
		
		/// <summary>
		/// Network of IP ACL
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;ip&quot;,&quot;Description&quot;:&quot;Network of IP ACL&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("network")]
		public string Network {
			get {
				return this.Network_bfield;
			}
			set {
				this.Network_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Structure holding IP ACLs
	/// </summary>
	public class DedicatedcephaclListresponse {
		
		private string Family_bfield;
		
		private long Id_bfield;
		
		private string Netmask_bfield;
		
		private string Network_bfield;
		
		/// <summary>
		/// Family of IP ACL
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;dedicated.ceph.aclList.response.familyEnum&quot;,&quot;Description&quot;:&quot;Family of IP ACL&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("family")]
		public string Family {
			get {
				return this.Family_bfield;
			}
			set {
				this.Family_bfield = value;
			}
		}
		
		/// <summary>
		/// ID of IP ACL
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;ID of IP ACL&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("id")]
		public long Id {
			get {
				return this.Id_bfield;
			}
			set {
				this.Id_bfield = value;
			}
		}
		
		/// <summary>
		/// Netmask of IP ACL
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;ip&quot;,&quot;Description&quot;:&quot;Netmask of IP ACL&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("netmask")]
		public string Netmask {
			get {
				return this.Netmask_bfield;
			}
			set {
				this.Netmask_bfield = value;
			}
		}
		
		/// <summary>
		/// Network of IP ACL
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;ip&quot;,&quot;Description&quot;:&quot;Network of IP ACL&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("network")]
		public string Network {
			get {
				return this.Network_bfield;
			}
			set {
				this.Network_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// CephFS filesystem data
	/// </summary>
	public class DedicatedcephcephfsGetresponse {
		
		private bool Enabled_bfield;
		
		private string FsName_bfield;
		
		/// <summary>
		/// Filesystem state
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Filesystem state&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("enabled")]
		public bool Enabled {
			get {
				return this.Enabled_bfield;
			}
			set {
				this.Enabled_bfield = value;
			}
		}
		
		/// <summary>
		/// Filesystem name
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Filesystem name&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("fsName")]
		public string FsName {
			get {
				return this.FsName_bfield;
			}
			set {
				this.FsName_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// List of CephFS filesystems
	/// </summary>
	public class DedicatedcephcephfsListresponse {
		
		private bool Enabled_bfield;
		
		private string FsName_bfield;
		
		/// <summary>
		/// Filesystem state
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Filesystem state&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("enabled")]
		public bool Enabled {
			get {
				return this.Enabled_bfield;
			}
			set {
				this.Enabled_bfield = value;
			}
		}
		
		/// <summary>
		/// Filesystem name
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Filesystem name&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("fsName")]
		public string FsName {
			get {
				return this.FsName_bfield;
			}
			set {
				this.FsName_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Details about ceph cluster
	/// </summary>
	public class DedicatedcephclusterGetresponse {
		
		private string[] CephMons_bfield;
		
		private string CephVersion_bfield;
		
		private string CreateDate_bfield;
		
		private string CrushTunables_bfield;
		
		private string Label_bfield;
		
		private string Region_bfield;
		
		private string ServiceName_bfield;
		
		private long Size_bfield;
		
		private string State_bfield;
		
		private string Status_bfield;
		
		private string UpdateDate_bfield;
		
		/// <summary>
		/// List of CEPH monitor IPs
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;ip[]&quot;,&quot;Description&quot;:&quot;List of CEPH monitor IPs&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("cephMons")]
		public string[] CephMons {
			get {
				return this.CephMons_bfield;
			}
			set {
				this.CephMons_bfield = value;
			}
		}
		
		/// <summary>
		/// Used version of ceph
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Used version of ceph&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("cephVersion")]
		public string CephVersion {
			get {
				return this.CephVersion_bfield;
			}
			set {
				this.CephVersion_bfield = value;
			}
		}
		
		/// <summary>
		/// Creation date
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Creation date&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("createDate")]
		public string CreateDate {
			get {
				return this.CreateDate_bfield;
			}
			set {
				this.CreateDate_bfield = value;
			}
		}
		
		/// <summary>
		/// Tunables of cluster
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;dedicated.ceph.clusterGet.response.crushTunablesEnum&quot;,&quot;Description&quot;:&quot;Tunables of cluster&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("crushTunables")]
		public string CrushTunables {
			get {
				return this.CrushTunables_bfield;
			}
			set {
				this.CrushTunables_bfield = value;
			}
		}
		
		/// <summary>
		/// Name of cluster
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Name of cluster&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("label")]
		public string Label {
			get {
				return this.Label_bfield;
			}
			set {
				this.Label_bfield = value;
			}
		}
		
		/// <summary>
		/// Name of region where cluster is located
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Name of region where cluster is located&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("region")]
		public string Region {
			get {
				return this.Region_bfield;
			}
			set {
				this.Region_bfield = value;
			}
		}
		
		/// <summary>
		/// ID of cluster
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;ID of cluster&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("serviceName")]
		public string ServiceName {
			get {
				return this.ServiceName_bfield;
			}
			set {
				this.ServiceName_bfield = value;
			}
		}
		
		/// <summary>
		/// Size of cluster in TB
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Size of cluster in TB&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("size")]
		public long Size {
			get {
				return this.Size_bfield;
			}
			set {
				this.Size_bfield = value;
			}
		}
		
		/// <summary>
		/// State of cluster
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;dedicated.ceph.clusterGet.response.stateEnum&quot;,&quot;Description&quot;:&quot;State of cluster&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("state")]
		public string State {
			get {
				return this.State_bfield;
			}
			set {
				this.State_bfield = value;
			}
		}
		
		/// <summary>
		/// Status of cluster
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;dedicated.ceph.clusterGet.response.statusEnum&quot;,&quot;Description&quot;:&quot;Status of cluster&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("status")]
		public string Status {
			get {
				return this.Status_bfield;
			}
			set {
				this.Status_bfield = value;
			}
		}
		
		/// <summary>
		/// Last update date
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Last update date&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("updateDate")]
		public string UpdateDate {
			get {
				return this.UpdateDate_bfield;
			}
			set {
				this.UpdateDate_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Health of ceph cluster
	/// </summary>
	public class DedicatedcephclusterHealthresponse {
		
		private long AvailableBytes_bfield;
		
		private bool Healthy_bfield;
		
		private string ServiceName_bfield;
		
		private string Status_bfield;
		
		private long TotalBytes_bfield;
		
		private long UsedBytes_bfield;
		
		/// <summary>
		/// All available space in bytes
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;All available space in bytes&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("availableBytes")]
		public long AvailableBytes {
			get {
				return this.AvailableBytes_bfield;
			}
			set {
				this.AvailableBytes_bfield = value;
			}
		}
		
		/// <summary>
		/// True or False
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;True or False&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("healthy")]
		public bool Healthy {
			get {
				return this.Healthy_bfield;
			}
			set {
				this.Healthy_bfield = value;
			}
		}
		
		/// <summary>
		/// ID of cluster
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;ID of cluster&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("serviceName")]
		public string ServiceName {
			get {
				return this.ServiceName_bfield;
			}
			set {
				this.ServiceName_bfield = value;
			}
		}
		
		/// <summary>
		/// Status of ceph cluster
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Status of ceph cluster&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("status")]
		public string Status {
			get {
				return this.Status_bfield;
			}
			set {
				this.Status_bfield = value;
			}
		}
		
		/// <summary>
		/// Total cluster space in bytes
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Total cluster space in bytes&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("totalBytes")]
		public long TotalBytes {
			get {
				return this.TotalBytes_bfield;
			}
			set {
				this.TotalBytes_bfield = value;
			}
		}
		
		/// <summary>
		/// Used cluster space in bytes
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Used cluster space in bytes&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("usedBytes")]
		public long UsedBytes {
			get {
				return this.UsedBytes_bfield;
			}
			set {
				this.UsedBytes_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Ceph pool
	/// </summary>
	public class DedicatedcephpoolGetresponse {
		
		private bool Backup_bfield;
		
		private long MinActiveReplicas_bfield;
		
		private string Name_bfield;
		
		private string PoolType_bfield;
		
		private long ReplicaCount_bfield;
		
		private string ServiceName_bfield;
		
		/// <summary>
		/// Determine if pool should be backuped
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Determine if pool should be backuped&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("backup")]
		public bool Backup {
			get {
				return this.Backup_bfield;
			}
			set {
				this.Backup_bfield = value;
			}
		}
		
		/// <summary>
		/// Minimum active replicas
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Minimum active replicas&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("minActiveReplicas")]
		public long MinActiveReplicas {
			get {
				return this.MinActiveReplicas_bfield;
			}
			set {
				this.MinActiveReplicas_bfield = value;
			}
		}
		
		/// <summary>
		/// Name of ceph user
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Name of ceph user&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("name")]
		public string Name {
			get {
				return this.Name_bfield;
			}
			set {
				this.Name_bfield = value;
			}
		}
		
		/// <summary>
		/// Type of pool
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;dedicated.ceph.poolGet.response.poolTypeEnum&quot;,&quot;Description&quot;:&quot;Type of pool&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("poolType")]
		public string PoolType {
			get {
				return this.PoolType_bfield;
			}
			set {
				this.PoolType_bfield = value;
			}
		}
		
		/// <summary>
		/// Number of replica
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Number of replica&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("replicaCount")]
		public long ReplicaCount {
			get {
				return this.ReplicaCount_bfield;
			}
			set {
				this.ReplicaCount_bfield = value;
			}
		}
		
		/// <summary>
		/// ID of cluster
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;ID of cluster&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("serviceName")]
		public string ServiceName {
			get {
				return this.ServiceName_bfield;
			}
			set {
				this.ServiceName_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// List of cluster pools
	/// </summary>
	public class DedicatedcephpoolListresponse {
		
		private bool Backup_bfield;
		
		private long MinActiveReplicas_bfield;
		
		private string Name_bfield;
		
		private string PoolType_bfield;
		
		private long ReplicaCount_bfield;
		
		private string ServiceName_bfield;
		
		/// <summary>
		/// Determine if pool should be backuped
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Determine if pool should be backuped&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("backup")]
		public bool Backup {
			get {
				return this.Backup_bfield;
			}
			set {
				this.Backup_bfield = value;
			}
		}
		
		/// <summary>
		/// Minimum active replicas
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Minimum active replicas&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("minActiveReplicas")]
		public long MinActiveReplicas {
			get {
				return this.MinActiveReplicas_bfield;
			}
			set {
				this.MinActiveReplicas_bfield = value;
			}
		}
		
		/// <summary>
		/// Name of ceph user
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Name of ceph user&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("name")]
		public string Name {
			get {
				return this.Name_bfield;
			}
			set {
				this.Name_bfield = value;
			}
		}
		
		/// <summary>
		/// Type of pool
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;dedicated.ceph.poolList.response.poolTypeEnum&quot;,&quot;Description&quot;:&quot;Type of pool&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("poolType")]
		public string PoolType {
			get {
				return this.PoolType_bfield;
			}
			set {
				this.PoolType_bfield = value;
			}
		}
		
		/// <summary>
		/// Number of replica
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Number of replica&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("replicaCount")]
		public long ReplicaCount {
			get {
				return this.ReplicaCount_bfield;
			}
			set {
				this.ReplicaCount_bfield = value;
			}
		}
		
		/// <summary>
		/// ID of cluster
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;ID of cluster&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("serviceName")]
		public string ServiceName {
			get {
				return this.ServiceName_bfield;
			}
			set {
				this.ServiceName_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// list of task subtasks
	/// </summary>
	public class DedicatedcephtaskGetresponse {
		
		private string CreateDate_bfield;
		
		private string FinishDate_bfield;
		
		private string Name_bfield;
		
		private string State_bfield;
		
		private string Type_bfield;
		
		/// <summary>
		/// Creation date of task
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Creation date of task&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("createDate")]
		public string CreateDate {
			get {
				return this.CreateDate_bfield;
			}
			set {
				this.CreateDate_bfield = value;
			}
		}
		
		/// <summary>
		/// Finish date of task
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Finish date of task&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("finishDate")]
		public string FinishDate {
			get {
				return this.FinishDate_bfield;
			}
			set {
				this.FinishDate_bfield = value;
			}
		}
		
		/// <summary>
		/// Name of task
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Name of task&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("name")]
		public string Name {
			get {
				return this.Name_bfield;
			}
			set {
				this.Name_bfield = value;
			}
		}
		
		/// <summary>
		/// State of task
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;dedicated.ceph.taskGet.response.stateEnum&quot;,&quot;Description&quot;:&quot;State of task&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("state")]
		public string State {
			get {
				return this.State_bfield;
			}
			set {
				this.State_bfield = value;
			}
		}
		
		/// <summary>
		/// Type of task
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Type of task&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("type")]
		public string Type {
			get {
				return this.Type_bfield;
			}
			set {
				this.Type_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// List of active tasks
	/// </summary>
	public class DedicatedcephtaskListresponse {
		
		private string Id_bfield;
		
		private string Name_bfield;
		
		/// <summary>
		/// ID of task
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;ID of task&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("id")]
		public string Id {
			get {
				return this.Id_bfield;
			}
			set {
				this.Id_bfield = value;
			}
		}
		
		/// <summary>
		/// Name of task
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Name of task&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("name")]
		public string Name {
			get {
				return this.Name_bfield;
			}
			set {
				this.Name_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Ceph user
	/// </summary>
	public class DedicatedcephuserGetresponse {
		
		private string Key_bfield;
		
		private string MdsCaps_bfield;
		
		private string MonCaps_bfield;
		
		private string Name_bfield;
		
		private string OsdCaps_bfield;
		
		private string ServiceName_bfield;
		
		/// <summary>
		/// Key of user to connect into cluster
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Key of user to connect into cluster&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("key")]
		public string Key {
			get {
				return this.Key_bfield;
			}
			set {
				this.Key_bfield = value;
			}
		}
		
		/// <summary>
		/// Capabilities of user on MDS
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Capabilities of user on MDS&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("mdsCaps")]
		public string MdsCaps {
			get {
				return this.MdsCaps_bfield;
			}
			set {
				this.MdsCaps_bfield = value;
			}
		}
		
		/// <summary>
		/// Capabilities of user on MON
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Capabilities of user on MON&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("monCaps")]
		public string MonCaps {
			get {
				return this.MonCaps_bfield;
			}
			set {
				this.MonCaps_bfield = value;
			}
		}
		
		/// <summary>
		/// Name of ceph user
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Name of ceph user&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("name")]
		public string Name {
			get {
				return this.Name_bfield;
			}
			set {
				this.Name_bfield = value;
			}
		}
		
		/// <summary>
		/// Capabilities of user on OSD
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Capabilities of user on OSD&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("osdCaps")]
		public string OsdCaps {
			get {
				return this.OsdCaps_bfield;
			}
			set {
				this.OsdCaps_bfield = value;
			}
		}
		
		/// <summary>
		/// ID of cluster
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;ID of cluster&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("serviceName")]
		public string ServiceName {
			get {
				return this.ServiceName_bfield;
			}
			set {
				this.ServiceName_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// List of cluster users
	/// </summary>
	public class DedicatedcephuserListresponse {
		
		private string Key_bfield;
		
		private string MdsCaps_bfield;
		
		private string MonCaps_bfield;
		
		private string Name_bfield;
		
		private string OsdCaps_bfield;
		
		private string ServiceName_bfield;
		
		/// <summary>
		/// Key of user to connect into cluster
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Key of user to connect into cluster&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("key")]
		public string Key {
			get {
				return this.Key_bfield;
			}
			set {
				this.Key_bfield = value;
			}
		}
		
		/// <summary>
		/// Capabilities of user on MDS
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Capabilities of user on MDS&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("mdsCaps")]
		public string MdsCaps {
			get {
				return this.MdsCaps_bfield;
			}
			set {
				this.MdsCaps_bfield = value;
			}
		}
		
		/// <summary>
		/// Capabilities of user on MON
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Capabilities of user on MON&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("monCaps")]
		public string MonCaps {
			get {
				return this.MonCaps_bfield;
			}
			set {
				this.MonCaps_bfield = value;
			}
		}
		
		/// <summary>
		/// Name of ceph user
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Name of ceph user&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("name")]
		public string Name {
			get {
				return this.Name_bfield;
			}
			set {
				this.Name_bfield = value;
			}
		}
		
		/// <summary>
		/// Capabilities of user on OSD
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Capabilities of user on OSD&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("osdCaps")]
		public string OsdCaps {
			get {
				return this.OsdCaps_bfield;
			}
			set {
				this.OsdCaps_bfield = value;
			}
		}
		
		/// <summary>
		/// ID of cluster
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;ID of cluster&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("serviceName")]
		public string ServiceName {
			get {
				return this.ServiceName_bfield;
			}
			set {
				this.ServiceName_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// List of permissions
	/// </summary>
	public class DedicatedcephuserPoolPermListresponse {
		
		private bool ClassRead_bfield;
		
		private bool ClassWrite_bfield;
		
		private bool Execute_bfield;
		
		private string PoolName_bfield;
		
		private bool Read_bfield;
		
		private bool Write_bfield;
		
		/// <summary>
		/// Class read permission
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Class read permission&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("classRead")]
		public bool ClassRead {
			get {
				return this.ClassRead_bfield;
			}
			set {
				this.ClassRead_bfield = value;
			}
		}
		
		/// <summary>
		/// Class write permission
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Class write permission&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("classWrite")]
		public bool ClassWrite {
			get {
				return this.ClassWrite_bfield;
			}
			set {
				this.ClassWrite_bfield = value;
			}
		}
		
		/// <summary>
		/// Execute permission
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Execute permission&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("execute")]
		public bool Execute {
			get {
				return this.Execute_bfield;
			}
			set {
				this.Execute_bfield = value;
			}
		}
		
		/// <summary>
		/// Name of Ceph pool
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Name of Ceph pool&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("poolName")]
		public string PoolName {
			get {
				return this.PoolName_bfield;
			}
			set {
				this.PoolName_bfield = value;
			}
		}
		
		/// <summary>
		/// Read permission
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Read permission&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("read")]
		public bool Read {
			get {
				return this.Read_bfield;
			}
			set {
				this.Read_bfield = value;
			}
		}
		
		/// <summary>
		/// Write permission
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Write permission&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("write")]
		public bool Write {
			get {
				return this.Write_bfield;
			}
			set {
				this.Write_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// List of permissions
	/// </summary>
	public class DedicatedcephuserPoolPermSetAllpermissions {
		
		private bool ClassRead_bfield;
		
		private bool ClassWrite_bfield;
		
		private bool Execute_bfield;
		
		private string PoolName_bfield;
		
		private bool Read_bfield;
		
		private bool Write_bfield;
		
		/// <summary>
		/// Class read permission
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Class read permission&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("classRead")]
		public bool ClassRead {
			get {
				return this.ClassRead_bfield;
			}
			set {
				this.ClassRead_bfield = value;
			}
		}
		
		/// <summary>
		/// Class write permission
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Class write permission&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("classWrite")]
		public bool ClassWrite {
			get {
				return this.ClassWrite_bfield;
			}
			set {
				this.ClassWrite_bfield = value;
			}
		}
		
		/// <summary>
		/// Execute permission
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Execute permission&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("execute")]
		public bool Execute {
			get {
				return this.Execute_bfield;
			}
			set {
				this.Execute_bfield = value;
			}
		}
		
		/// <summary>
		/// Name of Ceph pool
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Name of Ceph pool&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("poolName")]
		public string PoolName {
			get {
				return this.PoolName_bfield;
			}
			set {
				this.PoolName_bfield = value;
			}
		}
		
		/// <summary>
		/// Read permission
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Read permission&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("read")]
		public bool Read {
			get {
				return this.Read_bfield;
			}
			set {
				this.Read_bfield = value;
			}
		}
		
		/// <summary>
		/// Write permission
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Write permission&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("write")]
		public bool Write {
			get {
				return this.Write_bfield;
			}
			set {
				this.Write_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Map a possible renew for a specific service
	/// </summary>
	public class ServiceRenewType {
		
		private bool Automatic_bfield;
		
		private bool DeleteAtExpiration_bfield;
		
		private bool Forced_bfield;
		
		private System.Nullable<bool> ManualPayment_bfield;
		
		private System.Nullable<long> Period_bfield;
		
		/// <summary>
		/// The service is automatically renewed
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;The service is automatically renewed&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("automatic")]
		public bool Automatic {
			get {
				return this.Automatic_bfield;
			}
			set {
				this.Automatic_bfield = value;
			}
		}
		
		/// <summary>
		/// The service will be deleted at expiration
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;The service will be deleted at expiration&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("deleteAtExpiration")]
		public bool DeleteAtExpiration {
			get {
				return this.DeleteAtExpiration_bfield;
			}
			set {
				this.DeleteAtExpiration_bfield = value;
			}
		}
		
		/// <summary>
		/// The service forced to be renewed
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;The service forced to be renewed&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("forced")]
		public bool Forced {
			get {
				return this.Forced_bfield;
			}
			set {
				this.Forced_bfield = value;
			}
		}
		
		/// <summary>
		/// The service needs to be manually renewed and paid
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;The service needs to be manually renewed and paid&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("manualPayment")]
		public System.Nullable<bool> ManualPayment {
			get {
				return this.ManualPayment_bfield;
			}
			set {
				this.ManualPayment_bfield = value;
			}
		}
		
		/// <summary>
		/// period of renew in month
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;period of renew in month&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("period")]
		public System.Nullable<long> Period {
			get {
				return this.Period_bfield;
			}
			set {
				this.Period_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Details about a Service
	/// </summary>
	public class ServicesService {
		
		private bool CanDeleteAtExpiration_bfield;
		
		private string ContactAdmin_bfield;
		
		private string ContactBilling_bfield;
		
		private string ContactTech_bfield;
		
		private string Creation_bfield;
		
		private string Domain_bfield;
		
		private string EngagedUpTo_bfield;
		
		private string Expiration_bfield;
		
		private long[] PossibleRenewPeriod_bfield;
		
		private ServiceRenewType Renew_bfield;
		
		private string RenewalType_bfield;
		
		private long ServiceId_bfield;
		
		private string Status_bfield;
		
		/// <summary>
		/// Indicates that the service can be set up to be deleted at expiration
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Indicates that the service can be set up to be deleted at expiration&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("canDeleteAtExpiration")]
		public bool CanDeleteAtExpiration {
			get {
				return this.CanDeleteAtExpiration_bfield;
			}
			set {
				this.CanDeleteAtExpiration_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("contactAdmin")]
		public string ContactAdmin {
			get {
				return this.ContactAdmin_bfield;
			}
			set {
				this.ContactAdmin_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("contactBilling")]
		public string ContactBilling {
			get {
				return this.ContactBilling_bfield;
			}
			set {
				this.ContactBilling_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("contactTech")]
		public string ContactTech {
			get {
				return this.ContactTech_bfield;
			}
			set {
				this.ContactTech_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;date&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("creation")]
		public string Creation {
			get {
				return this.Creation_bfield;
			}
			set {
				this.Creation_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("domain")]
		public string Domain {
			get {
				return this.Domain_bfield;
			}
			set {
				this.Domain_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;date&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("engagedUpTo")]
		public string EngagedUpTo {
			get {
				return this.EngagedUpTo_bfield;
			}
			set {
				this.EngagedUpTo_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;date&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("expiration")]
		public string Expiration {
			get {
				return this.Expiration_bfield;
			}
			set {
				this.Expiration_bfield = value;
			}
		}
		
		/// <summary>
		/// All the possible renew period of your service in month
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long[]&quot;,&quot;Description&quot;:&quot;All the possible renew period of your service in month&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("possibleRenewPeriod")]
		public long[] PossibleRenewPeriod {
			get {
				return this.PossibleRenewPeriod_bfield;
			}
			set {
				this.PossibleRenewPeriod_bfield = value;
			}
		}
		
		/// <summary>
		/// Way of handling the renew
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;service.RenewType&quot;,&quot;Description&quot;:&quot;Way of handling the renew&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("renew")]
		public ServiceRenewType Renew {
			get {
				return this.Renew_bfield;
			}
			set {
				this.Renew_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;service.RenewalTypeEnum&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("renewalType")]
		public string RenewalType {
			get {
				return this.RenewalType_bfield;
			}
			set {
				this.RenewalType_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("serviceId")]
		public long ServiceId {
			get {
				return this.ServiceId_bfield;
			}
			set {
				this.ServiceId_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;service.StateEnum&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("status")]
		public string Status {
			get {
				return this.Status_bfield;
			}
			set {
				this.Status_bfield = value;
			}
		}
	}
}
