//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Newtonsoft.Json;
using Nglib.VENDORS.OVH.SHARED;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Threading.Tasks;


// [GET] "/sms"  string[]--
//[POST] "/sms/estimate"  sms.JobEstimate--message,noStopClause,senderType
//[GET] "/sms/ptts"  sms.PttDetails--ptt
//[GET] "/sms/rates/destinations"  sms.DestinationRates--billingCountry,country
//[GET] "/sms/rates/packs"  sms.PackDetails[]--billingCountry,country
//[GET] "/sms/virtualNumbers"  string[]--
//[GET] "/sms/virtualNumbers/{number}"  sms.VirtualNumberGenericService--number
//[GET] "/sms/virtualNumbers/{number}/serviceInfos"  services.Service--number
//[PUT] "/sms/virtualNumbers/{number}/serviceInfos"  void--,number
//[GET] "/sms/{serviceName}"  sms.Account--serviceName
//[PUT] "/sms/{serviceName}"  void--,serviceName
//[GET] "/sms/{serviceName}/batches"  sms.Batch[]--serviceName
//[POST] "/sms/{serviceName}/batches"  sms.Batch--serviceName,
//[GET] "/sms/{serviceName}/batches/{id}"  sms.Batch--serviceName,id
//[PUT] "/sms/{serviceName}/batches/{id}"  sms.Batch--serviceName,,id
//[POST] "/sms/{serviceName}/batches/{id}/cancel"  sms.Batch--serviceName,id
//[GET] "/sms/{serviceName}/batches/{id}/statistics"  sms.BatchStatistics--serviceName,id
//[GET] "/sms/{serviceName}/blacklists"  string[]--batchID,serviceName,smsOutgoingID
//[DELETE] "/sms/{serviceName}/blacklists/{number}"  void--number,serviceName
//[GET] "/sms/{serviceName}/blacklists/{number}"  sms.Blacklist--number,serviceName
//[GET] "/sms/{serviceName}/document"  string--batchID,creationDatetime.from,creationDatetime.to,serviceName,tag,wayType
//[GET] "/sms/{serviceName}/exceptions"  sms.Exception[]--receiver,serviceName
//[GET] "/sms/{serviceName}/hlr"  long[]--serviceName
//[POST] "/sms/{serviceName}/hlr"  sms.SmsSendingReport--receivers,receiversDocumentUrl,serviceName
//[GET] "/sms/{serviceName}/hlr/{id}"  sms.HlrLookupNumber--id,serviceName
//[GET] "/sms/{serviceName}/hlr/{id}/operator"  sms.Hlr--id,serviceName
//[GET] "/sms/{serviceName}/incoming"  long[]--creationDatetime.from,creationDatetime.to,sender,serviceName,tag
//[DELETE] "/sms/{serviceName}/incoming/{id}"  void--id,serviceName
//[GET] "/sms/{serviceName}/incoming/{id}"  sms.Incoming--id,serviceName
//[GET] "/sms/{serviceName}/jobs"  long[]--serviceName
//[POST] "/sms/{serviceName}/jobs"  sms.SmsSendingReport--charset,class,coding,differedPeriod,message,noStopClause,priority,receivers,receiversDocumentUrl,receiversSlotId,sender,senderForResponse,serviceName,tag,validityPeriod
//[DELETE] "/sms/{serviceName}/jobs/{id}"  void--id,serviceName
//[GET] "/sms/{serviceName}/jobs/{id}"  sms.Job--id,serviceName
//[GET] "/sms/{serviceName}/outgoing"  long[]--serviceName,batchID,creationDatetime.from,creationDatetime.to,deliveryReceipt,differedDelivery,ptt,receiver,sender,tag
//[DELETE] "/sms/{serviceName}/outgoing/{id}"  void--serviceName,id
//[GET] "/sms/{serviceName}/outgoing/{id}"  sms.Outgoing--serviceName,id
//[GET] "/sms/{serviceName}/outgoing/{id}/hlr"  sms.Hlr--id,serviceName
//[GET] "/sms/{serviceName}/phonebooks"  string[]--serviceName
//[POST] "/sms/{serviceName}/phonebooks"  string--name,serviceName
//[DELETE] "/sms/{serviceName}/phonebooks/{bookKey}"  void--bookKey,serviceName
//[GET] "/sms/{serviceName}/phonebooks/{bookKey}"  sms.Phonebook--bookKey,serviceName
//[PUT] "/sms/{serviceName}/phonebooks/{bookKey}"  void--,bookKey,serviceName
//[GET] "/sms/{serviceName}/phonebooks/{bookKey}/export"  telephony.PcsFile--bookKey,format,serviceName
//[POST] "/sms/{serviceName}/phonebooks/{bookKey}/import"  telephony.Task--bookKey,documentId,serviceName
//[GET] "/sms/{serviceName}/phonebooks/{bookKey}/phonebookContact"  long[]--bookKey,serviceName
//[POST] "/sms/{serviceName}/phonebooks/{bookKey}/phonebookContact"  long--bookKey,group,homeMobile,homePhone,name,serviceName,surname,workMobile,workPhone
//[DELETE] "/sms/{serviceName}/phonebooks/{bookKey}/phonebookContact/{id}"  void--bookKey,id,serviceName
//[GET] "/sms/{serviceName}/phonebooks/{bookKey}/phonebookContact/{id}"  sms.PhonebookContact--bookKey,id,serviceName
//[PUT] "/sms/{serviceName}/phonebooks/{bookKey}/phonebookContact/{id}"  void--,bookKey,id,serviceName
//[GET] "/sms/{serviceName}/receivers"  long[]--serviceName
//[POST] "/sms/{serviceName}/receivers"  sms.Receiver--autoUpdate,csvUrl,description,documentId,serviceName,slotId
//[DELETE] "/sms/{serviceName}/receivers/{slotId}"  void--serviceName,slotId
//[GET] "/sms/{serviceName}/receivers/{slotId}"  sms.Receiver--serviceName,slotId
//[PUT] "/sms/{serviceName}/receivers/{slotId}"  void--,serviceName,slotId
//[POST] "/sms/{serviceName}/receivers/{slotId}/clean"  sms.ReceiversAsynchronousCleanReport--freemium,priceOnly,serviceName,slotId
//[GET] "/sms/{serviceName}/receivers/{slotId}/csv"  string--serviceName,slotId
//[GET] "/sms/{serviceName}/seeOffers"  sms.PackOffer[]--countryCurrencyPrice,countryDestination,quantity,serviceName
//[GET] "/sms/{serviceName}/senders"  string[]--serviceName
//[POST] "/sms/{serviceName}/senders"  string--description,reason,sender,serviceName
//[DELETE] "/sms/{serviceName}/senders/{sender}"  void--sender,serviceName
//[GET] "/sms/{serviceName}/senders/{sender}"  sms.Sender--sender,serviceName
//[PUT] "/sms/{serviceName}/senders/{sender}"  void--,sender,serviceName
//[GET] "/sms/{serviceName}/senders/{sender}/documents"  uuid[]--sender,serviceName
//[POST] "/sms/{serviceName}/senders/{sender}/documents"  sms.SenderDocument--description,name,sender,serviceName
//[GET] "/sms/{serviceName}/senders/{sender}/documents/{documentID}"  sms.SenderDocument--documentID,sender,serviceName
//[PUT] "/sms/{serviceName}/senders/{sender}/documents/{documentID}"  void--,documentID,sender,serviceName
//[POST] "/sms/{serviceName}/senders/{sender}/validate"  void--code,sender,serviceName
//[GET] "/sms/{serviceName}/sendersAvailableForValidation"  sms.SenderAvailable[]--referer,serviceName
//[GET] "/sms/{serviceName}/serviceInfos"  services.Service--serviceName
//[PUT] "/sms/{serviceName}/serviceInfos"  void--,serviceName
//[GET] "/sms/{serviceName}/task"  long[]--serviceName,status
//[GET] "/sms/{serviceName}/task/{taskId}"  sms.Task--serviceName,taskId
//[GET] "/sms/{serviceName}/templatesControl"  string[]--serviceName
//[POST] "/sms/{serviceName}/templatesControl"  void--activity,description,message,name,reason,serviceName
//[DELETE] "/sms/{serviceName}/templatesControl/{name}"  void--name,serviceName
//[GET] "/sms/{serviceName}/templatesControl/{name}"  sms.TemplateControl--name,serviceName
//[PUT] "/sms/{serviceName}/templatesControl/{name}"  void--,name,serviceName
//[POST] "/sms/{serviceName}/templatesControl/{name}/relaunchValidation"  void--description,message,name,serviceName
//[POST] "/sms/{serviceName}/transferCredits"  void--credits,serviceName,smsAccountTarget
//[GET] "/sms/{serviceName}/users"  string[]--serviceName
//[POST] "/sms/{serviceName}/users"  void--login,password,serviceName
//[DELETE] "/sms/{serviceName}/users/{login}"  void--login,serviceName
//[GET] "/sms/{serviceName}/users/{login}"  sms.User--login,serviceName
//[PUT] "/sms/{serviceName}/users/{login}"  void--,login,serviceName
//[GET] "/sms/{serviceName}/users/{login}/document"  string--creationDatetime.from,creationDatetime.to,login,serviceName,tag,wayType
//[GET] "/sms/{serviceName}/users/{login}/incoming"  long[]--login,sender,serviceName,tag
//[DELETE] "/sms/{serviceName}/users/{login}/incoming/{id}"  void--id,login,serviceName
//[GET] "/sms/{serviceName}/users/{login}/incoming/{id}"  sms.Incoming--id,login,serviceName
//[GET] "/sms/{serviceName}/users/{login}/jobs"  long[]--login,serviceName
//[POST] "/sms/{serviceName}/users/{login}/jobs"  sms.SmsSendingReport--charset,class,coding,differedPeriod,login,message,noStopClause,priority,receivers,receiversDocumentUrl,receiversSlotId,sender,senderForResponse,serviceName,tag,validityPeriod
//[DELETE] "/sms/{serviceName}/users/{login}/jobs/{id}"  void--id,login,serviceName
//[GET] "/sms/{serviceName}/users/{login}/jobs/{id}"  sms.Job--id,login,serviceName
//[GET] "/sms/{serviceName}/users/{login}/outgoing"  long[]--deliveryReceipt,differedDelivery,login,ptt,receiver,sender,serviceName,tag
//[DELETE] "/sms/{serviceName}/users/{login}/outgoing/{id}"  void--id,login,serviceName
//[GET] "/sms/{serviceName}/users/{login}/outgoing/{id}"  sms.Outgoing--id,login,serviceName
//[GET] "/sms/{serviceName}/users/{login}/outgoing/{id}/hlr"  sms.Hlr--id,login,serviceName
//[GET] "/sms/{serviceName}/users/{login}/receivers"  long[]--login,serviceName
//[POST] "/sms/{serviceName}/users/{login}/receivers"  sms.Receiver--autoUpdate,csvUrl,description,documentId,login,serviceName,slotId
//[DELETE] "/sms/{serviceName}/users/{login}/receivers/{slotId}"  void--login,serviceName,slotId
//[GET] "/sms/{serviceName}/users/{login}/receivers/{slotId}"  sms.Receiver--login,serviceName,slotId
//[PUT] "/sms/{serviceName}/users/{login}/receivers/{slotId}"  void--,login,serviceName,slotId
//[POST] "/sms/{serviceName}/users/{login}/receivers/{slotId}/clean"  sms.ReceiversAsynchronousCleanReport--freemium,login,priceOnly,serviceName,slotId
//[GET] "/sms/{serviceName}/users/{login}/receivers/{slotId}/csv"  string--login,serviceName,slotId
//[GET] "/sms/{serviceName}/virtualNumbers"  string[]--serviceName
//[GET] "/sms/{serviceName}/virtualNumbers/{number}"  sms.VirtualNumber--number,serviceName
//[DELETE] "/sms/{serviceName}/virtualNumbers/{number}/chatAccess"  void--number,serviceName
//[GET] "/sms/{serviceName}/virtualNumbers/{number}/chatAccess"  sms.ChatAccess--number,serviceName
//[POST] "/sms/{serviceName}/virtualNumbers/{number}/chatAccess"  sms.ChatAccess--number,serviceName
//[GET] "/sms/{serviceName}/virtualNumbers/{number}/incoming"  long[]--creationDatetime.from,creationDatetime.to,number,sender,serviceName,tag
//[DELETE] "/sms/{serviceName}/virtualNumbers/{number}/incoming/{id}"  void--id,number,serviceName
//[GET] "/sms/{serviceName}/virtualNumbers/{number}/incoming/{id}"  sms.Incoming--id,number,serviceName
//[GET] "/sms/{serviceName}/virtualNumbers/{number}/jobs"  long[]--number,serviceName
//[POST] "/sms/{serviceName}/virtualNumbers/{number}/jobs"  sms.SmsSendingReport--charset,class,coding,differedPeriod,message,number,priority,receivers,receiversDocumentUrl,receiversSlotId,serviceName,tag,validityPeriod
//[DELETE] "/sms/{serviceName}/virtualNumbers/{number}/jobs/{id}"  void--id,number,serviceName
//[GET] "/sms/{serviceName}/virtualNumbers/{number}/jobs/{id}"  sms.VirtualNumberJob--id,number,serviceName
//[GET] "/sms/{serviceName}/virtualNumbers/{number}/outgoing"  long[]--creationDatetime.from,creationDatetime.to,deliveryReceipt,differedDelivery,number,ptt,receiver,sender,serviceName,tag
//[DELETE] "/sms/{serviceName}/virtualNumbers/{number}/outgoing/{id}"  void--id,number,serviceName
//[GET] "/sms/{serviceName}/virtualNumbers/{number}/outgoing/{id}"  sms.Outgoing--id,number,serviceName
//[GET] "/sms/{serviceName}/virtualNumbers/{number}/outgoing/{id}/hlr"  sms.Hlr--id,number,serviceName
namespace Nglib.VENDORS.OVH.SMS {
	
	
	public enum OrderCurrencyCodeEnum {
		
		[EnumMember(Value="AUD")]
		AUD,
		
		[EnumMember(Value="CAD")]
		CAD,
		
		[EnumMember(Value="CZK")]
		CZK,
		
		[EnumMember(Value="EUR")]
		EUR,
		
		[EnumMember(Value="GBP")]
		GBP,
		
		[EnumMember(Value="LTL")]
		LTL,
		
		[EnumMember(Value="MAD")]
		MAD,
		
		[EnumMember(Value="N/A")]
		N_A,
		
		[EnumMember(Value="PLN")]
		PLN,
		
		[EnumMember(Value="SGD")]
		SGD,
		
		[EnumMember(Value="TND")]
		TND,
		
		[EnumMember(Value="USD")]
		USD,
		
		[EnumMember(Value="XOF")]
		XOF,
		
		[EnumMember(Value="points")]
		Points,
	}
	
	/// <summary>
	/// All country prices accessible from a reference
	/// </summary>
	public enum ReferenceCountryEnum {
		
		[EnumMember(Value="all")]
		All,
		
		[EnumMember(Value="ca")]
		Ca,
		
		[EnumMember(Value="cz")]
		Cz,
		
		[EnumMember(Value="de")]
		De,
		
		[EnumMember(Value="en")]
		En,
		
		[EnumMember(Value="es")]
		Es,
		
		[EnumMember(Value="fi")]
		Fi,
		
		[EnumMember(Value="fr")]
		Fr,
		
		[EnumMember(Value="gb")]
		Gb,
		
		[EnumMember(Value="ie")]
		Ie,
		
		[EnumMember(Value="it")]
		It,
		
		[EnumMember(Value="lt")]
		Lt,
		
		[EnumMember(Value="ma")]
		Ma,
		
		[EnumMember(Value="nl")]
		Nl,
		
		[EnumMember(Value="pl")]
		Pl,
		
		[EnumMember(Value="pp")]
		Pp,
		
		[EnumMember(Value="pt")]
		Pt,
		
		[EnumMember(Value="qc")]
		Qc,
		
		[EnumMember(Value="ru")]
		Ru,
		
		[EnumMember(Value="sk")]
		Sk,
		
		[EnumMember(Value="sn")]
		Sn,
		
		[EnumMember(Value="tn")]
		Tn,
		
		[EnumMember(Value="we")]
		We,
	}
	
	/// <summary>
	/// Detailed renewal type of a service
	/// </summary>
	public enum ServiceRenewalTypeEnum {
		
		[EnumMember(Value="automaticForcedProduct")]
		AutomaticForcedProduct,
		
		[EnumMember(Value="automaticV2012")]
		AutomaticV2012,
		
		[EnumMember(Value="automaticV2014")]
		AutomaticV2014,
		
		[EnumMember(Value="automaticV2016")]
		AutomaticV2016,
		
		[EnumMember(Value="manual")]
		Manual,
		
		[EnumMember(Value="oneShot")]
		OneShot,
		
		[EnumMember(Value="option")]
		Option,
	}
	
	public enum ServiceStateEnum {
		
		[EnumMember(Value="expired")]
		Expired,
		
		[EnumMember(Value="inCreation")]
		InCreation,
		
		[EnumMember(Value="ok")]
		Ok,
		
		[EnumMember(Value="pendingDebt")]
		PendingDebt,
		
		[EnumMember(Value="unPaid")]
		UnPaid,
	}
	
	/// <summary>
	/// SMS classes
	/// </summary>
	public enum SmsBatchClassEnum {
		
		[EnumMember(Value="FLASH")]
		FLASH,
		
		[EnumMember(Value="PHONE")]
		PHONE,
		
		[EnumMember(Value="SIM")]
		SIM,
	}
	
	/// <summary>
	/// Batch statuses
	/// </summary>
	public enum SmsBatchStatusEnum {
		
		[EnumMember(Value="PENDING")]
		PENDING,
		
		[EnumMember(Value="INSERTING")]
		INSERTING,
		
		[EnumMember(Value="INSERTED")]
		INSERTED,
		
		[EnumMember(Value="COMPLETED")]
		COMPLETED,
		
		[EnumMember(Value="TO_CANCEL")]
		TO_CANCEL,
		
		[EnumMember(Value="CANCELING")]
		CANCELING,
		
		[EnumMember(Value="CANCELED")]
		CANCELED,
		
		[EnumMember(Value="FAILED")]
		FAILED,
	}
	
	/// <summary>
	/// Countries where we sell SMS credits
	/// </summary>
	public enum SmsBillingCountryEnum {
		
		[EnumMember(Value="es")]
		Es,
		
		[EnumMember(Value="fr")]
		Fr,
		
		[EnumMember(Value="gb")]
		Gb,
		
		[EnumMember(Value="ie")]
		Ie,
		
		[EnumMember(Value="it")]
		It,
		
		[EnumMember(Value="pl")]
		Pl,
	}
	
	/// <summary>
	/// The charset format
	/// </summary>
	public enum SmsCharsetEnum {
		
		[EnumMember(Value="UTF-8")]
		UTF_8,
	}
	
	/// <summary>
	/// The sms class of sms sending job
	/// </summary>
	public enum SmsClassEnum {
		
		[EnumMember(Value="flash")]
		Flash,
		
		[EnumMember(Value="phoneDisplay")]
		PhoneDisplay,
		
		[EnumMember(Value="sim")]
		Sim,
		
		[EnumMember(Value="toolkit")]
		Toolkit,
	}
	
	/// <summary>
	/// The sms coding
	/// </summary>
	public enum SmsCodingEnum {
		
		[EnumMember(Value="7bit")]
		_7bit,
		
		[EnumMember(Value="8bit")]
		_8bit,
	}
	
	/// <summary>
	/// All country suffixes accessible for sms services and &quot;all&quot; available
	/// </summary>
	public enum SmsCountryEnum {
		
		[EnumMember(Value="ad")]
		Ad,
		
		[EnumMember(Value="ae")]
		Ae,
		
		[EnumMember(Value="af")]
		Af,
		
		[EnumMember(Value="ag")]
		Ag,
		
		[EnumMember(Value="ai")]
		Ai,
		
		[EnumMember(Value="al")]
		Al,
		
		[EnumMember(Value="all")]
		All,
		
		[EnumMember(Value="am")]
		Am,
		
		[EnumMember(Value="an")]
		An,
		
		[EnumMember(Value="ao")]
		Ao,
		
		[EnumMember(Value="ar")]
		Ar,
		
		[EnumMember(Value="at")]
		At,
		
		[EnumMember(Value="au")]
		Au,
		
		[EnumMember(Value="aw")]
		Aw,
		
		[EnumMember(Value="az")]
		Az,
		
		[EnumMember(Value="ba")]
		Ba,
		
		[EnumMember(Value="bb")]
		Bb,
		
		[EnumMember(Value="bd")]
		Bd,
		
		[EnumMember(Value="be")]
		Be,
		
		[EnumMember(Value="bf")]
		Bf,
		
		[EnumMember(Value="bg")]
		Bg,
		
		[EnumMember(Value="bh")]
		Bh,
		
		[EnumMember(Value="bi")]
		Bi,
		
		[EnumMember(Value="bj")]
		Bj,
		
		[EnumMember(Value="bm")]
		Bm,
		
		[EnumMember(Value="bn")]
		Bn,
		
		[EnumMember(Value="bo")]
		Bo,
		
		[EnumMember(Value="br")]
		Br,
		
		[EnumMember(Value="bs")]
		Bs,
		
		[EnumMember(Value="bt")]
		Bt,
		
		[EnumMember(Value="bw")]
		Bw,
		
		[EnumMember(Value="by")]
		By,
		
		[EnumMember(Value="bz")]
		Bz,
		
		[EnumMember(Value="ca")]
		Ca,
		
		[EnumMember(Value="cd")]
		Cd,
		
		[EnumMember(Value="cf")]
		Cf,
		
		[EnumMember(Value="cg")]
		Cg,
		
		[EnumMember(Value="ch")]
		Ch,
		
		[EnumMember(Value="ci")]
		Ci,
		
		[EnumMember(Value="ck")]
		Ck,
		
		[EnumMember(Value="cl")]
		Cl,
		
		[EnumMember(Value="cm")]
		Cm,
		
		[EnumMember(Value="cn")]
		Cn,
		
		[EnumMember(Value="co")]
		Co,
		
		[EnumMember(Value="cr")]
		Cr,
		
		[EnumMember(Value="cu")]
		Cu,
		
		[EnumMember(Value="cv")]
		Cv,
		
		[EnumMember(Value="cy")]
		Cy,
		
		[EnumMember(Value="cz")]
		Cz,
		
		[EnumMember(Value="de")]
		De,
		
		[EnumMember(Value="dk")]
		Dk,
		
		[EnumMember(Value="dm")]
		Dm,
		
		[EnumMember(Value="dz")]
		Dz,
		
		[EnumMember(Value="ec")]
		Ec,
		
		[EnumMember(Value="ee")]
		Ee,
		
		[EnumMember(Value="eg")]
		Eg,
		
		[EnumMember(Value="es")]
		Es,
		
		[EnumMember(Value="et")]
		Et,
		
		[EnumMember(Value="fi")]
		Fi,
		
		[EnumMember(Value="fj")]
		Fj,
		
		[EnumMember(Value="fk")]
		Fk,
		
		[EnumMember(Value="fo")]
		Fo,
		
		[EnumMember(Value="fr")]
		Fr,
		
		[EnumMember(Value="ga")]
		Ga,
		
		[EnumMember(Value="gb")]
		Gb,
		
		[EnumMember(Value="gd")]
		Gd,
		
		[EnumMember(Value="ge")]
		Ge,
		
		[EnumMember(Value="gf")]
		Gf,
		
		[EnumMember(Value="gh")]
		Gh,
		
		[EnumMember(Value="gi")]
		Gi,
		
		[EnumMember(Value="gl")]
		Gl,
		
		[EnumMember(Value="gm")]
		Gm,
		
		[EnumMember(Value="gn")]
		Gn,
		
		[EnumMember(Value="gp")]
		Gp,
		
		[EnumMember(Value="gq")]
		Gq,
		
		[EnumMember(Value="gr")]
		Gr,
		
		[EnumMember(Value="gt")]
		Gt,
		
		[EnumMember(Value="gu")]
		Gu,
		
		[EnumMember(Value="gw")]
		Gw,
		
		[EnumMember(Value="gy")]
		Gy,
		
		[EnumMember(Value="hk")]
		Hk,
		
		[EnumMember(Value="hn")]
		Hn,
		
		[EnumMember(Value="hr")]
		Hr,
		
		[EnumMember(Value="ht")]
		Ht,
		
		[EnumMember(Value="hu")]
		Hu,
		
		[EnumMember(Value="id")]
		Id,
		
		[EnumMember(Value="ie")]
		Ie,
		
		[EnumMember(Value="il")]
		Il,
		
		[EnumMember(Value="in")]
		In,
		
		[EnumMember(Value="io")]
		Io,
		
		[EnumMember(Value="iq")]
		Iq,
		
		[EnumMember(Value="ir")]
		Ir,
		
		[EnumMember(Value="is")]
		Is,
		
		[EnumMember(Value="it")]
		It,
		
		[EnumMember(Value="jm")]
		Jm,
		
		[EnumMember(Value="jo")]
		Jo,
		
		[EnumMember(Value="jp")]
		Jp,
		
		[EnumMember(Value="ke")]
		Ke,
		
		[EnumMember(Value="kg")]
		Kg,
		
		[EnumMember(Value="kh")]
		Kh,
		
		[EnumMember(Value="km")]
		Km,
		
		[EnumMember(Value="kn")]
		Kn,
		
		[EnumMember(Value="kr")]
		Kr,
		
		[EnumMember(Value="kw")]
		Kw,
		
		[EnumMember(Value="ky")]
		Ky,
		
		[EnumMember(Value="kz")]
		Kz,
		
		[EnumMember(Value="la")]
		La,
		
		[EnumMember(Value="lb")]
		Lb,
		
		[EnumMember(Value="lc")]
		Lc,
		
		[EnumMember(Value="li")]
		Li,
		
		[EnumMember(Value="lk")]
		Lk,
		
		[EnumMember(Value="lr")]
		Lr,
		
		[EnumMember(Value="ls")]
		Ls,
		
		[EnumMember(Value="lt")]
		Lt,
		
		[EnumMember(Value="lu")]
		Lu,
		
		[EnumMember(Value="lv")]
		Lv,
		
		[EnumMember(Value="ly")]
		Ly,
		
		[EnumMember(Value="ma")]
		Ma,
		
		[EnumMember(Value="md")]
		Md,
		
		[EnumMember(Value="me")]
		Me,
		
		[EnumMember(Value="mg")]
		Mg,
		
		[EnumMember(Value="mk")]
		Mk,
		
		[EnumMember(Value="ml")]
		Ml,
		
		[EnumMember(Value="mn")]
		Mn,
		
		[EnumMember(Value="mo")]
		Mo,
		
		[EnumMember(Value="mq")]
		Mq,
		
		[EnumMember(Value="mr")]
		Mr,
		
		[EnumMember(Value="ms")]
		Ms,
		
		[EnumMember(Value="mt")]
		Mt,
		
		[EnumMember(Value="mu")]
		Mu,
		
		[EnumMember(Value="mv")]
		Mv,
		
		[EnumMember(Value="mw")]
		Mw,
		
		[EnumMember(Value="mx")]
		Mx,
		
		[EnumMember(Value="my")]
		My,
		
		[EnumMember(Value="mz")]
		Mz,
		
		[EnumMember(Value="na")]
		Na,
		
		[EnumMember(Value="nc")]
		Nc,
		
		[EnumMember(Value="ne")]
		Ne,
		
		[EnumMember(Value="ng")]
		Ng,
		
		[EnumMember(Value="ni")]
		Ni,
		
		[EnumMember(Value="nl")]
		Nl,
		
		[EnumMember(Value="no")]
		No,
		
		[EnumMember(Value="np")]
		Np,
		
		[EnumMember(Value="nz")]
		Nz,
		
		[EnumMember(Value="om")]
		Om,
		
		[EnumMember(Value="pa")]
		Pa,
		
		[EnumMember(Value="pe")]
		Pe,
		
		[EnumMember(Value="pf")]
		Pf,
		
		[EnumMember(Value="pg")]
		Pg,
		
		[EnumMember(Value="ph")]
		Ph,
		
		[EnumMember(Value="pk")]
		Pk,
		
		[EnumMember(Value="pl")]
		Pl,
		
		[EnumMember(Value="ps")]
		Ps,
		
		[EnumMember(Value="pt")]
		Pt,
		
		[EnumMember(Value="py")]
		Py,
		
		[EnumMember(Value="qa")]
		Qa,
		
		[EnumMember(Value="re")]
		Re,
		
		[EnumMember(Value="ro")]
		Ro,
		
		[EnumMember(Value="rs")]
		Rs,
		
		[EnumMember(Value="ru")]
		Ru,
		
		[EnumMember(Value="rw")]
		Rw,
		
		[EnumMember(Value="sa")]
		Sa,
		
		[EnumMember(Value="sb")]
		Sb,
		
		[EnumMember(Value="sc")]
		Sc,
		
		[EnumMember(Value="sd")]
		Sd,
		
		[EnumMember(Value="se")]
		Se,
		
		[EnumMember(Value="sg")]
		Sg,
		
		[EnumMember(Value="si")]
		Si,
		
		[EnumMember(Value="sk")]
		Sk,
		
		[EnumMember(Value="sl")]
		Sl,
		
		[EnumMember(Value="sm")]
		Sm,
		
		[EnumMember(Value="sn")]
		Sn,
		
		[EnumMember(Value="so")]
		So,
		
		[EnumMember(Value="sr")]
		Sr,
		
		[EnumMember(Value="st")]
		St,
		
		[EnumMember(Value="sv")]
		Sv,
		
		[EnumMember(Value="sy")]
		Sy,
		
		[EnumMember(Value="sz")]
		Sz,
		
		[EnumMember(Value="tc")]
		Tc,
		
		[EnumMember(Value="td")]
		Td,
		
		[EnumMember(Value="tg")]
		Tg,
		
		[EnumMember(Value="th")]
		Th,
		
		[EnumMember(Value="tj")]
		Tj,
		
		[EnumMember(Value="tl")]
		Tl,
		
		[EnumMember(Value="tm")]
		Tm,
		
		[EnumMember(Value="tn")]
		Tn,
		
		[EnumMember(Value="to")]
		To,
		
		[EnumMember(Value="tr")]
		Tr,
		
		[EnumMember(Value="tt")]
		Tt,
		
		[EnumMember(Value="tw")]
		Tw,
		
		[EnumMember(Value="tz")]
		Tz,
		
		[EnumMember(Value="ua")]
		Ua,
		
		[EnumMember(Value="ug")]
		Ug,
		
		[EnumMember(Value="us")]
		Us,
		
		[EnumMember(Value="uy")]
		Uy,
		
		[EnumMember(Value="uz")]
		Uz,
		
		[EnumMember(Value="vc")]
		Vc,
		
		[EnumMember(Value="ve")]
		Ve,
		
		[EnumMember(Value="vg")]
		Vg,
		
		[EnumMember(Value="vi")]
		Vi,
		
		[EnumMember(Value="vn")]
		Vn,
		
		[EnumMember(Value="vu")]
		Vu,
		
		[EnumMember(Value="ws")]
		Ws,
		
		[EnumMember(Value="ye")]
		Ye,
		
		[EnumMember(Value="yt")]
		Yt,
		
		[EnumMember(Value="za")]
		Za,
		
		[EnumMember(Value="zm")]
		Zm,
		
		[EnumMember(Value="zw")]
		Zw,
	}
	
	/// <summary>
	/// Way type
	/// </summary>
	public enum SmsDocumentWayTypeEnum {
		
		[EnumMember(Value="incoming")]
		Incoming,
		
		[EnumMember(Value="outgoing")]
		Outgoing,
	}
	
	/// <summary>
	/// The SMS available characters class
	/// </summary>
	public enum SmsEncodingEnum {
		
		[EnumMember(Value="7bits")]
		_7bits,
		
		[EnumMember(Value="unicode")]
		Unicode,
	}
	
	/// <summary>
	/// Pack quantity automatic recredit possibilities
	/// </summary>
	public enum SmsPackQuantityAutomaticRecreditEnum {
		
		[EnumMember(Value="100")]
		_100,
		
		[EnumMember(Value="1000")]
		_1000,
		
		[EnumMember(Value="10000")]
		_10000,
		
		[EnumMember(Value="200")]
		_200,
		
		[EnumMember(Value="250")]
		_250,
		
		[EnumMember(Value="500")]
		_500,
		
		[EnumMember(Value="5000")]
		_5000,
	}
	
	/// <summary>
	/// Pack quantity levels
	/// </summary>
	public enum SmsPackQuantityEnum {
		
		[EnumMember(Value="100")]
		_100,
		
		[EnumMember(Value="1000")]
		_1000,
		
		[EnumMember(Value="10000")]
		_10000,
		
		[EnumMember(Value="100000")]
		_100000,
		
		[EnumMember(Value="1000000")]
		_1000000,
		
		[EnumMember(Value="200")]
		_200,
		
		[EnumMember(Value="250")]
		_250,
		
		[EnumMember(Value="2500")]
		_2500,
		
		[EnumMember(Value="25000")]
		_25000,
		
		[EnumMember(Value="500")]
		_500,
		
		[EnumMember(Value="5000")]
		_5000,
		
		[EnumMember(Value="50000")]
		_50000,
	}
	
	/// <summary>
	/// The priority of an sms sending
	/// </summary>
	public enum SmsPriorityEnum {
		
		[EnumMember(Value="high")]
		High,
		
		[EnumMember(Value="low")]
		Low,
		
		[EnumMember(Value="medium")]
		Medium,
		
		[EnumMember(Value="veryLow")]
		VeryLow,
	}
	
	/// <summary>
	/// All typology of ptt duration
	/// </summary>
	public enum SmsPttDurationTypeEnum {
		
		[EnumMember(Value="indeterminated")]
		Indeterminated,
		
		[EnumMember(Value="permanent")]
		Permanent,
		
		[EnumMember(Value="temporary")]
		Temporary,
	}
	
	/// <summary>
	/// Current quota status
	/// </summary>
	public enum SmsQuotaStatusUserEnum {
		
		[EnumMember(Value="active")]
		Active,
		
		[EnumMember(Value="inactive")]
		Inactive,
	}
	
	/// <summary>
	/// All tyoplogy of senders
	/// </summary>
	public enum SmsRefererSenderEnum {
		
		[EnumMember(Value="custom")]
		Custom,
		
		[EnumMember(Value="domain")]
		Domain,
		
		[EnumMember(Value="line")]
		Line,
		
		[EnumMember(Value="nic")]
		Nic,
		
		[EnumMember(Value="owner")]
		Owner,
		
		[EnumMember(Value="virtual")]
		Virtual,
	}
	
	/// <summary>
	/// The tracking media response
	/// </summary>
	public enum SmsResponseTrackingMediaEnum {
		
		[EnumMember(Value="email")]
		Email,
		
		[EnumMember(Value="sms")]
		Sms,
		
		[EnumMember(Value="voice")]
		Voice,
	}
	
	/// <summary>
	/// Response type
	/// </summary>
	public enum SmsResponseTypeEnum {
		
		[EnumMember(Value="cgi")]
		Cgi,
		
		[EnumMember(Value="none")]
		None,
		
		[EnumMember(Value="text")]
		Text,
	}
	
	/// <summary>
	/// Restriction type used by the operator to filter sms.
	/// </summary>
	public enum SmsRestrictionCodeEnum {
		
		[EnumMember(Value="ALPHA")]
		ALPHA,
		
		[EnumMember(Value="BAD_DLR")]
		BAD_DLR,
		
		[EnumMember(Value="BLOCKED")]
		BLOCKED,
		
		[EnumMember(Value="CODING")]
		CODING,
		
		[EnumMember(Value="DLR")]
		DLR,
		
		[EnumMember(Value="FLASHONLY")]
		FLASHONLY,
		
		[EnumMember(Value="MSISDN")]
		MSISDN,
	}
	
	/// <summary>
	/// The referer of the available sender
	/// </summary>
	public enum SmsSenderRefererEnum {
		
		[EnumMember(Value="domain")]
		Domain,
		
		[EnumMember(Value="nichandle")]
		Nichandle,
	}
	
	/// <summary>
	/// Account status
	/// </summary>
	public enum SmsStatusAccountEnum {
		
		[EnumMember(Value="disable")]
		Disable,
		
		[EnumMember(Value="enable")]
		Enable,
	}
	
	/// <summary>
	/// All existing status for a given referer
	/// </summary>
	public enum SmsStatusSenderEnum {
		
		[EnumMember(Value="disable")]
		Disable,
		
		[EnumMember(Value="enable")]
		Enable,
		
		[EnumMember(Value="refused")]
		Refused,
		
		[EnumMember(Value="waitingValidation")]
		WaitingValidation,
	}
	
	/// <summary>
	/// The media support used to be contacted in case of alert
	/// </summary>
	public enum SmsSupportEnum {
		
		[EnumMember(Value="both")]
		Both,
		
		[EnumMember(Value="mail")]
		Mail,
		
		[EnumMember(Value="sms")]
		Sms,
	}
	
	/// <summary>
	/// The task function
	/// </summary>
	public enum SmsTodoGeneralPublicFunctionsEnum {
		
		[EnumMember(Value="cleanSmsReceivers")]
		CleanSmsReceivers,
	}
	
	/// <summary>
	/// The task step
	/// </summary>
	public enum SmsTodoGeneralPublicStepsEnum {
		
		[EnumMember(Value="checkOrder")]
		CheckOrder,
		
		[EnumMember(Value="createHlrs")]
		CreateHlrs,
		
		[EnumMember(Value="finishing")]
		Finishing,
		
		[EnumMember(Value="sendMailReport")]
		SendMailReport,
		
		[EnumMember(Value="starting")]
		Starting,
		
		[EnumMember(Value="waitForHlrs")]
		WaitForHlrs,
	}
	
	/// <summary>
	/// All existing types for a given sender
	/// </summary>
	public enum SmsTypeSenderEnum {
		
		[EnumMember(Value="alpha")]
		Alpha,
		
		[EnumMember(Value="numeric")]
		Numeric,
		
		[EnumMember(Value="shortcode")]
		Shortcode,
		
		[EnumMember(Value="virtual")]
		Virtual,
	}
	
	/// <summary>
	/// All existing types for a given template
	/// </summary>
	public enum SmsTypeTemplateEnum {
		
		[EnumMember(Value="alerting")]
		Alerting,
		
		[EnumMember(Value="authentification")]
		Authentification,
		
		[EnumMember(Value="transactional")]
		Transactional,
	}
	
	/// <summary>
	/// The ISO formated country code of the number
	/// </summary>
	public enum SmsVirtualNumberIsoCountryCodeEnum {
		
		[EnumMember(Value="be")]
		Be,
		
		[EnumMember(Value="ch")]
		Ch,
		
		[EnumMember(Value="de")]
		De,
		
		[EnumMember(Value="es")]
		Es,
		
		[EnumMember(Value="fr")]
		Fr,
		
		[EnumMember(Value="uk")]
		Uk,
	}
	
	/// <summary>
	/// Export file format
	/// </summary>
	public enum TelephonyContactsExportFormatsEnum {
		
		[EnumMember(Value="csv")]
		Csv,
	}
	
	/// <summary>
	/// File providing task status
	/// </summary>
	public enum TelephonyPcsFileStatusEnum {
		
		[EnumMember(Value="doing")]
		Doing,
		
		[EnumMember(Value="done")]
		Done,
		
		[EnumMember(Value="error")]
		Error,
		
		[EnumMember(Value="todo")]
		Todo,
	}
	
	/// <summary>
	/// Task status
	/// </summary>
	public enum TelephonyTaskStatusEnum {
		
		[EnumMember(Value="doing")]
		Doing,
		
		[EnumMember(Value="done")]
		Done,
		
		[EnumMember(Value="error")]
		Error,
		
		[EnumMember(Value="pause")]
		Pause,
		
		[EnumMember(Value="todo")]
		Todo,
	}
	
	/// <summary>
	/// Price with it's currency and textual representation
	/// </summary>
	public class OrderPrice {
		
		private string CurrencyCode_bfield;
		
		private string Text_bfield;
		
		private double Value_bfield;
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;order.CurrencyCodeEnum&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("currencyCode")]
		public string CurrencyCode {
			get {
				return this.CurrencyCode_bfield;
			}
			set {
				this.CurrencyCode_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("text")]
		public string Text {
			get {
				return this.Text_bfield;
			}
			set {
				this.Text_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;double&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("value")]
		public double Value {
			get {
				return this.Value_bfield;
			}
			set {
				this.Value_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Map a possible renew for a specific service
	/// </summary>
	public class ServiceRenewType {
		
		private bool Automatic_bfield;
		
		private bool DeleteAtExpiration_bfield;
		
		private bool Forced_bfield;
		
		private System.Nullable<bool> ManualPayment_bfield;
		
		private System.Nullable<long> Period_bfield;
		
		/// <summary>
		/// The service is automatically renewed
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;The service is automatically renewed&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("automatic")]
		public bool Automatic {
			get {
				return this.Automatic_bfield;
			}
			set {
				this.Automatic_bfield = value;
			}
		}
		
		/// <summary>
		/// The service will be deleted at expiration
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;The service will be deleted at expiration&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("deleteAtExpiration")]
		public bool DeleteAtExpiration {
			get {
				return this.DeleteAtExpiration_bfield;
			}
			set {
				this.DeleteAtExpiration_bfield = value;
			}
		}
		
		/// <summary>
		/// The service forced to be renewed
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;The service forced to be renewed&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("forced")]
		public bool Forced {
			get {
				return this.Forced_bfield;
			}
			set {
				this.Forced_bfield = value;
			}
		}
		
		/// <summary>
		/// The service needs to be manually renewed and paid
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;The service needs to be manually renewed and paid&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("manualPayment")]
		public System.Nullable<bool> ManualPayment {
			get {
				return this.ManualPayment_bfield;
			}
			set {
				this.ManualPayment_bfield = value;
			}
		}
		
		/// <summary>
		/// period of renew in month
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;period of renew in month&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("period")]
		public System.Nullable<long> Period {
			get {
				return this.Period_bfield;
			}
			set {
				this.Period_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Details about a Service
	/// </summary>
	public class ServicesService {
		
		private bool CanDeleteAtExpiration_bfield;
		
		private string ContactAdmin_bfield;
		
		private string ContactBilling_bfield;
		
		private string ContactTech_bfield;
		
		private string Creation_bfield;
		
		private string Domain_bfield;
		
		private string EngagedUpTo_bfield;
		
		private string Expiration_bfield;
		
		private long[] PossibleRenewPeriod_bfield;
		
		private ServiceRenewType Renew_bfield;
		
		private string RenewalType_bfield;
		
		private long ServiceId_bfield;
		
		private string Status_bfield;
		
		/// <summary>
		/// Indicates that the service can be set up to be deleted at expiration
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Indicates that the service can be set up to be deleted at expiration&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("canDeleteAtExpiration")]
		public bool CanDeleteAtExpiration {
			get {
				return this.CanDeleteAtExpiration_bfield;
			}
			set {
				this.CanDeleteAtExpiration_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("contactAdmin")]
		public string ContactAdmin {
			get {
				return this.ContactAdmin_bfield;
			}
			set {
				this.ContactAdmin_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("contactBilling")]
		public string ContactBilling {
			get {
				return this.ContactBilling_bfield;
			}
			set {
				this.ContactBilling_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("contactTech")]
		public string ContactTech {
			get {
				return this.ContactTech_bfield;
			}
			set {
				this.ContactTech_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;date&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("creation")]
		public string Creation {
			get {
				return this.Creation_bfield;
			}
			set {
				this.Creation_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("domain")]
		public string Domain {
			get {
				return this.Domain_bfield;
			}
			set {
				this.Domain_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;date&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("engagedUpTo")]
		public string EngagedUpTo {
			get {
				return this.EngagedUpTo_bfield;
			}
			set {
				this.EngagedUpTo_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;date&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("expiration")]
		public string Expiration {
			get {
				return this.Expiration_bfield;
			}
			set {
				this.Expiration_bfield = value;
			}
		}
		
		/// <summary>
		/// All the possible renew period of your service in month
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long[]&quot;,&quot;Description&quot;:&quot;All the possible renew period of your service in month&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("possibleRenewPeriod")]
		public long[] PossibleRenewPeriod {
			get {
				return this.PossibleRenewPeriod_bfield;
			}
			set {
				this.PossibleRenewPeriod_bfield = value;
			}
		}
		
		/// <summary>
		/// Way of handling the renew
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;service.RenewType&quot;,&quot;Description&quot;:&quot;Way of handling the renew&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("renew")]
		public ServiceRenewType Renew {
			get {
				return this.Renew_bfield;
			}
			set {
				this.Renew_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;service.RenewalTypeEnum&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("renewalType")]
		public string RenewalType {
			get {
				return this.RenewalType_bfield;
			}
			set {
				this.RenewalType_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("serviceId")]
		public long ServiceId {
			get {
				return this.ServiceId_bfield;
			}
			set {
				this.ServiceId_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;service.StateEnum&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("status")]
		public string Status {
			get {
				return this.Status_bfield;
			}
			set {
				this.Status_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// SMS details
	/// </summary>
	public class SmsAccount {
		
		private string AutomaticRecreditAmount_bfield;
		
		private string CallBack_bfield;
		
		private double CreditThresholdForAutomaticRecredit_bfield;
		
		private double CreditsHoldByQuota_bfield;
		
		private double CreditsLeft_bfield;
		
		private string Description_bfield;
		
		private string Name_bfield;
		
		private SmsResponse SmsResponse_bfield;
		
		private string Status_bfield;
		
		private string StopCallBack_bfield;
		
		private SmsTemplates Templates_bfield;
		
		private long UserQuantityWithQuota_bfield;
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;sms.PackQuantityAutomaticRecreditEnum&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("automaticRecreditAmount")]
		public string AutomaticRecreditAmount {
			get {
				return this.AutomaticRecreditAmount_bfield;
			}
			set {
				this.AutomaticRecreditAmount_bfield = value;
			}
		}
		
		/// <summary>
		/// URL called when state of a sent SMS changes
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;URL called when state of a sent SMS changes&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("callBack")]
		public string CallBack {
			get {
				return this.CallBack_bfield;
			}
			set {
				this.CallBack_bfield = value;
			}
		}
		
		/// <summary>
		/// Credit threshold after which an automatic recredit is launched
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;double&quot;,&quot;Description&quot;:&quot;Credit threshold after which an automatic recredit is launched&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("creditThresholdForAutomaticRecredit")]
		public double CreditThresholdForAutomaticRecredit {
			get {
				return this.CreditThresholdForAutomaticRecredit_bfield;
			}
			set {
				this.CreditThresholdForAutomaticRecredit_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;double&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("creditsHoldByQuota")]
		public double CreditsHoldByQuota {
			get {
				return this.CreditsHoldByQuota_bfield;
			}
			set {
				this.CreditsHoldByQuota_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;double&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("creditsLeft")]
		public double CreditsLeft {
			get {
				return this.CreditsLeft_bfield;
			}
			set {
				this.CreditsLeft_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("description")]
		public string Description {
			get {
				return this.Description_bfield;
			}
			set {
				this.Description_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("name")]
		public string Name {
			get {
				return this.Name_bfield;
			}
			set {
				this.Name_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;sms.Response&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("smsResponse")]
		public SmsResponse SmsResponse {
			get {
				return this.SmsResponse_bfield;
			}
			set {
				this.SmsResponse_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;sms.StatusAccountEnum&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("status")]
		public string Status {
			get {
				return this.Status_bfield;
			}
			set {
				this.Status_bfield = value;
			}
		}
		
		/// <summary>
		/// URL called when a STOP is received after a receiver replied stop to a SMS
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;URL called when a STOP is received after a receiver replied stop to a SMS&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("stopCallBack")]
		public string StopCallBack {
			get {
				return this.StopCallBack_bfield;
			}
			set {
				this.StopCallBack_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;sms.Templates&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("templates")]
		public SmsTemplates Templates {
			get {
				return this.Templates_bfield;
			}
			set {
				this.Templates_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("userQuantityWithQuota")]
		public long UserQuantityWithQuota {
			get {
				return this.UserQuantityWithQuota_bfield;
			}
			set {
				this.UserQuantityWithQuota_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// A structure describing all information about alert threshold informations
	/// </summary>
	public class SmsAlertThreshold {
		
		private string AlertEmail_bfield;
		
		private string AlertNumber_bfield;
		
		private long AlertThreshold_bfield;
		
		private string Support_bfield;
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("alertEmail")]
		public string AlertEmail {
			get {
				return this.AlertEmail_bfield;
			}
			set {
				this.AlertEmail_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("alertNumber")]
		public string AlertNumber {
			get {
				return this.AlertNumber_bfield;
			}
			set {
				this.AlertNumber_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("alertThreshold")]
		public long AlertThreshold {
			get {
				return this.AlertThreshold_bfield;
			}
			set {
				this.AlertThreshold_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;sms.SupportEnum&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("support")]
		public string Support {
			get {
				return this.Support_bfield;
			}
			set {
				this.Support_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Batch of SMS to send
	/// </summary>
	public class SmsBatch {
		
		private long AccountID_bfield;
		
		private System.DateTime CreatedAt_bfield;
		
		private string[] Errors_bfield;
		
		private double EstimatedCredits_bfield;
		
		private System.Nullable<System.DateTime> FinishedAt_bfield;
		
		private string From_bfield;
		
		private string Id_bfield;
		
		private string Message_bfield;
		
		private string Name_bfield;
		
		private long ProcessedRecords_bfield;
		
		private string[] Receivers_bfield;
		
		private System.Nullable<System.DateTime> SentAt_bfield;
		
		private string SlotID_bfield;
		
		private System.Nullable<System.DateTime> StartedAt_bfield;
		
		private string Status_bfield;
		
		private long TotalRecords_bfield;
		
		private System.DateTime UpdatedAt_bfield;
		
		/// <summary>
		/// SMS account ID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;SMS account ID&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("accountID")]
		public long AccountID {
			get {
				return this.AccountID_bfield;
			}
			set {
				this.AccountID_bfield = value;
			}
		}
		
		/// <summary>
		/// Creation datetime
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Creation datetime&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("createdAt")]
		public System.DateTime CreatedAt {
			get {
				return this.CreatedAt_bfield;
			}
			set {
				this.CreatedAt_bfield = value;
			}
		}
		
		/// <summary>
		/// Details on error(s) on the batch, if any
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;sms.BatchError[]&quot;,&quot;Description&quot;:&quot;Details on error(s) on the batch, if any&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("errors")]
		public string[] Errors {
			get {
				return this.Errors_bfield;
			}
			set {
				this.Errors_bfield = value;
			}
		}
		
		/// <summary>
		/// The estimated cost of the batch in credits
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;double&quot;,&quot;Description&quot;:&quot;The estimated cost of the batch in credits&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("estimatedCredits")]
		public double EstimatedCredits {
			get {
				return this.EstimatedCredits_bfield;
			}
			set {
				this.EstimatedCredits_bfield = value;
			}
		}
		
		/// <summary>
		/// Datetime when the batch finished processing SMSs
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Datetime when the batch finished processing SMSs&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("finishedAt")]
		public System.Nullable<System.DateTime> FinishedAt {
			get {
				return this.FinishedAt_bfield;
			}
			set {
				this.FinishedAt_bfield = value;
			}
		}
		
		/// <summary>
		/// SMS sender
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;SMS sender&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("from")]
		public string From {
			get {
				return this.From_bfield;
			}
			set {
				this.From_bfield = value;
			}
		}
		
		/// <summary>
		/// Batch ID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Batch ID&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("id")]
		public string Id {
			get {
				return this.Id_bfield;
			}
			set {
				this.Id_bfield = value;
			}
		}
		
		/// <summary>
		/// SMS message
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;text&quot;,&quot;Description&quot;:&quot;SMS message&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("message")]
		public string Message {
			get {
				return this.Message_bfield;
			}
			set {
				this.Message_bfield = value;
			}
		}
		
		/// <summary>
		/// Batch name
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;text&quot;,&quot;Description&quot;:&quot;Batch name&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("name")]
		public string Name {
			get {
				return this.Name_bfield;
			}
			set {
				this.Name_bfield = value;
			}
		}
		
		/// <summary>
		/// Number of processed records in this batch
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Number of processed records in this batch&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("processedRecords")]
		public long ProcessedRecords {
			get {
				return this.ProcessedRecords_bfield;
			}
			set {
				this.ProcessedRecords_bfield = value;
			}
		}
		
		/// <summary>
		/// SMS receivers list
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;phoneNumber[]&quot;,&quot;Description&quot;:&quot;SMS receivers list&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("receivers")]
		public string[] Receivers {
			get {
				return this.Receivers_bfield;
			}
			set {
				this.Receivers_bfield = value;
			}
		}
		
		/// <summary>
		/// Datetime when the SMSs of the batch are sent (based on deferred time if exists)
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Datetime when the SMSs of the batch are sent (based on deferred time if exists)&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("sentAt")]
		public System.Nullable<System.DateTime> SentAt {
			get {
				return this.SentAt_bfield;
			}
			set {
				this.SentAt_bfield = value;
			}
		}
		
		/// <summary>
		/// Slot ID
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Slot ID&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("slotID")]
		public string SlotID {
			get {
				return this.SlotID_bfield;
			}
			set {
				this.SlotID_bfield = value;
			}
		}
		
		/// <summary>
		/// Datetime when the batch started processing SMSs
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Datetime when the batch started processing SMSs&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("startedAt")]
		public System.Nullable<System.DateTime> StartedAt {
			get {
				return this.StartedAt_bfield;
			}
			set {
				this.StartedAt_bfield = value;
			}
		}
		
		/// <summary>
		/// Batch status
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;sms.BatchStatusEnum&quot;,&quot;Description&quot;:&quot;Batch status&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("status")]
		public string Status {
			get {
				return this.Status_bfield;
			}
			set {
				this.Status_bfield = value;
			}
		}
		
		/// <summary>
		/// Total number of records in this batch
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Total number of records in this batch&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("totalRecords")]
		public long TotalRecords {
			get {
				return this.TotalRecords_bfield;
			}
			set {
				this.TotalRecords_bfield = value;
			}
		}
		
		/// <summary>
		/// Last update datetime
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Last update datetime&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("updatedAt")]
		public System.DateTime UpdatedAt {
			get {
				return this.UpdatedAt_bfield;
			}
			set {
				this.UpdatedAt_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Batch error details
	/// </summary>
	public class SmsBatchError {
		
		private string Message_bfield;
		
		private string Receiver_bfield;
		
		/// <summary>
		/// Error message
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Error message&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("message")]
		public string Message {
			get {
				return this.Message_bfield;
			}
			set {
				this.Message_bfield = value;
			}
		}
		
		/// <summary>
		/// Receiver that triggered the error
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Receiver that triggered the error&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("receiver")]
		public string Receiver {
			get {
				return this.Receiver_bfield;
			}
			set {
				this.Receiver_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Params to create a batch
	/// </summary>
	public class SmsBatchParams {
		
		private string Class_bfield;
		
		private System.DateTime? Deferred_bfield;
		
		private string From_bfield;
		
		private string Message_bfield;
		
		private string Name_bfield;
		
		private bool NoStop_bfield;
		
		private bool SenderForResponse_bfield;
		
		private string SlotID_bfield;
		
		private string Tag_bfield;
		
		private string[] To_bfield;
		
		/// <summary>
		/// SMS class
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;sms.BatchClassEnum&quot;,&quot;Description&quot;:&quot;SMS class&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("class")]
		public string Class {
			get {
				return this.Class_bfield;
			}
			set {
				this.Class_bfield = value;
			}
		}
		
		/// <summary>
		/// SMS deferred sending date
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;SMS deferred sending date&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("deferred")]
		public System.DateTime? Deferred {
			get {
				return this.Deferred_bfield;
			}
			set {
				this.Deferred_bfield = value;
			}
		}
		
		/// <summary>
		/// SMS sender. Either &quot;from&quot; or &quot;senderForResponse&quot; must be passed
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;SMS sender. Either \&quot;from\&quot; or \&quot;senderForResponse\&quot; must be passed&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("from")]
		public string From {
			get {
				return this.From_bfield;
			}
			set {
				this.From_bfield = value;
			}
		}
		
		/// <summary>
		/// SMS message
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;text&quot;,&quot;Description&quot;:&quot;SMS message&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("message")]
		public string Message {
			get {
				return this.Message_bfield;
			}
			set {
				this.Message_bfield = value;
			}
		}
		
		/// <summary>
		/// Batch name
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;text&quot;,&quot;Description&quot;:&quot;Batch name&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("name")]
		public string Name {
			get {
				return this.Name_bfield;
			}
			set {
				this.Name_bfield = value;
			}
		}
		
		/// <summary>
		/// STOP clause not needed
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;STOP clause not needed&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("noStop")]
		public bool NoStop {
			get {
				return this.NoStop_bfield;
			}
			set {
				this.NoStop_bfield = value;
			}
		}
		
		/// <summary>
		/// Ask to compute a sender that allows response. Either &quot;from&quot; or &quot;senderForResponse&quot; must be passed
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Ask to compute a sender that allows response. Either \&quot;from\&quot; or \&quot;senderForResponse\&quot; must be passed&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("senderForResponse")]
		public bool SenderForResponse {
			get {
				return this.SenderForResponse_bfield;
			}
			set {
				this.SenderForResponse_bfield = value;
			}
		}
		
		/// <summary>
		/// SMS receivers slot ID. Either &quot;to&quot; or &quot;slotID&quot; must be passed
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;SMS receivers slot ID. Either \&quot;to\&quot; or \&quot;slotID\&quot; must be passed&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("slotID")]
		public string SlotID {
			get {
				return this.SlotID_bfield;
			}
			set {
				this.SlotID_bfield = value;
			}
		}
		
		/// <summary>
		/// SMS tag
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;SMS tag&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("tag")]
		public string Tag {
			get {
				return this.Tag_bfield;
			}
			set {
				this.Tag_bfield = value;
			}
		}
		
		/// <summary>
		/// SMS receivers list. Either &quot;to&quot; or &quot;slotID&quot; must be passed
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;phoneNumber[]&quot;,&quot;Description&quot;:&quot;SMS receivers list. Either \&quot;to\&quot; or \&quot;slotID\&quot; must be passed&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("to")]
		public string[] To {
			get {
				return this.To_bfield;
			}
			set {
				this.To_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Batch's statistics
	/// </summary>
	public class SmsBatchStatistics {
		
		private double Credits_bfield;
		
		private long Delivered_bfield;
		
		private double EstimatedCredits_bfield;
		
		private long Failed_bfield;
		
		private string Id_bfield;
		
		private long Pending_bfield;
		
		private long Sent_bfield;
		
		private long Stoplisted_bfield;
		
		/// <summary>
		/// The cost of the batch in credits, computed during batch processing
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;double&quot;,&quot;Description&quot;:&quot;The cost of the batch in credits, computed during batch processing&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("credits")]
		public double Credits {
			get {
				return this.Credits_bfield;
			}
			set {
				this.Credits_bfield = value;
			}
		}
		
		/// <summary>
		/// Number of SMS that are delivered
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Number of SMS that are delivered&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("delivered")]
		public long Delivered {
			get {
				return this.Delivered_bfield;
			}
			set {
				this.Delivered_bfield = value;
			}
		}
		
		/// <summary>
		/// The estimated cost of the batch in credits, computed before batch processing
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;double&quot;,&quot;Description&quot;:&quot;The estimated cost of the batch in credits, computed before batch processing&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("estimatedCredits")]
		public double EstimatedCredits {
			get {
				return this.EstimatedCredits_bfield;
			}
			set {
				this.EstimatedCredits_bfield = value;
			}
		}
		
		/// <summary>
		/// Number of SMS in error
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Number of SMS in error&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("failed")]
		public long Failed {
			get {
				return this.Failed_bfield;
			}
			set {
				this.Failed_bfield = value;
			}
		}
		
		/// <summary>
		/// Batch ID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Batch ID&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("id")]
		public string Id {
			get {
				return this.Id_bfield;
			}
			set {
				this.Id_bfield = value;
			}
		}
		
		/// <summary>
		/// Number of SMS that are in pending status
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Number of SMS that are in pending status&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("pending")]
		public long Pending {
			get {
				return this.Pending_bfield;
			}
			set {
				this.Pending_bfield = value;
			}
		}
		
		/// <summary>
		/// Number of SMS that are sent to the broker
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Number of SMS that are sent to the broker&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("sent")]
		public long Sent {
			get {
				return this.Sent_bfield;
			}
			set {
				this.Sent_bfield = value;
			}
		}
		
		/// <summary>
		/// Number of SMS that received a STOP by the receiver
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Number of SMS that received a STOP by the receiver&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("stoplisted")]
		public long Stoplisted {
			get {
				return this.Stoplisted_bfield;
			}
			set {
				this.Stoplisted_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Params to update a batch
	/// </summary>
	public class SmsBatchUpdateParams {
		
		private string Name_bfield;
		
		/// <summary>
		/// Batch name
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;text&quot;,&quot;Description&quot;:&quot;Batch name&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("name")]
		public string Name {
			get {
				return this.Name_bfield;
			}
			set {
				this.Name_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// SMS blacklist
	/// </summary>
	public class SmsBlacklist {
		
		private string BatchID_bfield;
		
		private System.DateTime DateCreation_bfield;
		
		private string Number_bfield;
		
		private System.Nullable<long> SmsOutgoingID_bfield;
		
		/// <summary>
		/// ID of the batch responsible of the blacklist
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;ID of the batch responsible of the blacklist&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("batchID")]
		public string BatchID {
			get {
				return this.BatchID_bfield;
			}
			set {
				this.BatchID_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("dateCreation")]
		public System.DateTime DateCreation {
			get {
				return this.DateCreation_bfield;
			}
			set {
				this.DateCreation_bfield = value;
			}
		}
		
		/// <summary>
		/// The sms number blacklisted
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;The sms number blacklisted&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("number")]
		public string Number {
			get {
				return this.Number_bfield;
			}
			set {
				this.Number_bfield = value;
			}
		}
		
		/// <summary>
		/// ID of the outgoing SMS responsible of the blacklist
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;ID of the outgoing SMS responsible of the blacklist&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("smsOutgoingID")]
		public System.Nullable<long> SmsOutgoingID {
			get {
				return this.SmsOutgoingID_bfield;
			}
			set {
				this.SmsOutgoingID_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// The web access for your virtual number chat application
	/// </summary>
	public class SmsChatAccess {
		
		private System.DateTime CreationDate_bfield;
		
		private long Id_bfield;
		
		private string Url_bfield;
		
		/// <summary>
		/// The creation date of this access
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;The creation date of this access&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("creationDate")]
		public System.DateTime CreationDate {
			get {
				return this.CreationDate_bfield;
			}
			set {
				this.CreationDate_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("id")]
		public long Id {
			get {
				return this.Id_bfield;
			}
			set {
				this.Id_bfield = value;
			}
		}
		
		/// <summary>
		/// The url of the web access
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;The url of the web access&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("url")]
		public string Url {
			get {
				return this.Url_bfield;
			}
			set {
				this.Url_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Rates of a given destination
	/// </summary>
	public class SmsDestinationRates {
		
		private string Country_bfield;
		
		private string CountryCode_bfield;
		
		private double Credit_bfield;
		
		private OrderPrice Price_bfield;
		
		/// <summary>
		/// The country full name
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;The country full name&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("country")]
		public string Country {
			get {
				return this.Country_bfield;
			}
			set {
				this.Country_bfield = value;
			}
		}
		
		/// <summary>
		/// The country 2-letters code
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;sms.CountryEnum&quot;,&quot;Description&quot;:&quot;The country 2-letters code&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("countryCode")]
		public string CountryCode {
			get {
				return this.CountryCode_bfield;
			}
			set {
				this.CountryCode_bfield = value;
			}
		}
		
		/// <summary>
		/// Credits consumed by sending one SMS towards the given destination
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;double&quot;,&quot;Description&quot;:&quot;Credits consumed by sending one SMS towards the given destination&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("credit")]
		public double Credit {
			get {
				return this.Credit_bfield;
			}
			set {
				this.Credit_bfield = value;
			}
		}
		
		/// <summary>
		/// Price of one SMS sent towards the given destination
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;order.Price&quot;,&quot;Description&quot;:&quot;Price of one SMS sent towards the given destination&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("price")]
		public OrderPrice Price {
			get {
				return this.Price_bfield;
			}
			set {
				this.Price_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Sms reach list
	/// </summary>
	public class SmsException {
		
		private string CountrySuffixe_bfield;
		
		private string[] Messages_bfield;
		
		private string Operators_bfield;
		
		private string RestrictionCode_bfield;
		
		private string Substitution_bfield;
		
		/// <summary>
		/// The abreviated country code.
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;The abreviated country code.&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("countrySuffixe")]
		public string CountrySuffixe {
			get {
				return this.CountrySuffixe_bfield;
			}
			set {
				this.CountrySuffixe_bfield = value;
			}
		}
		
		/// <summary>
		/// The exception message
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string[]&quot;,&quot;Description&quot;:&quot;The exception message&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("messages")]
		public string[] Messages {
			get {
				return this.Messages_bfield;
			}
			set {
				this.Messages_bfield = value;
			}
		}
		
		/// <summary>
		/// The list of operators impacted.
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;The list of operators impacted.&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("operators")]
		public string Operators {
			get {
				return this.Operators_bfield;
			}
			set {
				this.Operators_bfield = value;
			}
		}
		
		/// <summary>
		/// The type of routing restriction imposed by the operator
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;sms.RestrictionCodeEnum&quot;,&quot;Description&quot;:&quot;The type of routing restriction imposed by the operator&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("restrictionCode")]
		public string RestrictionCode {
			get {
				return this.RestrictionCode_bfield;
			}
			set {
				this.RestrictionCode_bfield = value;
			}
		}
		
		/// <summary>
		/// The substitution sender used to bypass operator filter
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;The substitution sender used to bypass operator filter&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("substitution")]
		public string Substitution {
			get {
				return this.Substitution_bfield;
			}
			set {
				this.Substitution_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Sms operator informations
	/// </summary>
	public class SmsHlr {
		
		private string Country_bfield;
		
		private string CountryCode_bfield;
		
		private string Network_bfield;
		
		private string Operator_bfield;
		
		private string Region_bfield;
		
		/// <summary>
		/// The country
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;The country&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("country")]
		public string Country {
			get {
				return this.Country_bfield;
			}
			set {
				this.Country_bfield = value;
			}
		}
		
		/// <summary>
		/// The countryCode prefix number
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;The countryCode prefix number&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("countryCode")]
		public string CountryCode {
			get {
				return this.CountryCode_bfield;
			}
			set {
				this.CountryCode_bfield = value;
			}
		}
		
		/// <summary>
		/// The network name
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;The network name&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("network")]
		public string Network {
			get {
				return this.Network_bfield;
			}
			set {
				this.Network_bfield = value;
			}
		}
		
		/// <summary>
		/// The operator name
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;The operator name&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("operator")]
		public string Operator {
			get {
				return this.Operator_bfield;
			}
			set {
				this.Operator_bfield = value;
			}
		}
		
		/// <summary>
		/// The region
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;The region&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("region")]
		public string Region {
			get {
				return this.Region_bfield;
			}
			set {
				this.Region_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Home Location Register informations. Give informations about a given cellular phone.
	/// </summary>
	public class SmsHlrLookupNumber {
		
		private System.DateTime Datetime_bfield;
		
		private long Id_bfield;
		
		private string Msisdn_bfield;
		
		private string OperatorCode_bfield;
		
		private bool Ported_bfield;
		
		private bool Reachable_bfield;
		
		private bool Roaming_bfield;
		
		private SmsHlrStatuses Status_bfield;
		
		private bool Valid_bfield;
		
		/// <summary>
		/// HLR creation datetime
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;HLR creation datetime&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("datetime")]
		public System.DateTime Datetime {
			get {
				return this.Datetime_bfield;
			}
			set {
				this.Datetime_bfield = value;
			}
		}
		
		/// <summary>
		/// HLR id
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;HLR id&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("id")]
		public long Id {
			get {
				return this.Id_bfield;
			}
			set {
				this.Id_bfield = value;
			}
		}
		
		/// <summary>
		/// MSISDN
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;MSISDN&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("msisdn")]
		public string Msisdn {
			get {
				return this.Msisdn_bfield;
			}
			set {
				this.Msisdn_bfield = value;
			}
		}
		
		/// <summary>
		/// The {Mobile Country Code, Mobile Network Code} unique identifier
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;The {Mobile Country Code, Mobile Network Code} unique identifier&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("operatorCode")]
		public string OperatorCode {
			get {
				return this.OperatorCode_bfield;
			}
			set {
				this.OperatorCode_bfield = value;
			}
		}
		
		/// <summary>
		/// Has the MSISDN been ported from its original network
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Has the MSISDN been ported from its original network&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("ported")]
		public bool Ported {
			get {
				return this.Ported_bfield;
			}
			set {
				this.Ported_bfield = value;
			}
		}
		
		/// <summary>
		/// Is the MSISDN currently reachable
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Is the MSISDN currently reachable&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("reachable")]
		public bool Reachable {
			get {
				return this.Reachable_bfield;
			}
			set {
				this.Reachable_bfield = value;
			}
		}
		
		/// <summary>
		/// Is the MSISDN currently roaming outside its natinal network
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Is the MSISDN currently roaming outside its natinal network&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("roaming")]
		public bool Roaming {
			get {
				return this.Roaming_bfield;
			}
			set {
				this.Roaming_bfield = value;
			}
		}
		
		/// <summary>
		/// Status of the HLR request
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;sms.HlrStatuses&quot;,&quot;Description&quot;:&quot;Status of the HLR request&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("status")]
		public SmsHlrStatuses Status {
			get {
				return this.Status_bfield;
			}
			set {
				this.Status_bfield = value;
			}
		}
		
		/// <summary>
		/// Is the MSISDN valid
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Is the MSISDN valid&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("valid")]
		public bool Valid {
			get {
				return this.Valid_bfield;
			}
			set {
				this.Valid_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// The sms coding
	/// </summary>
	public class SmsHlrStatuses {
	}
	
	/// <summary>
	/// Sms history of sms incoming received
	/// </summary>
	public class SmsIncoming {
		
		private System.DateTime CreationDatetime_bfield;
		
		private double Credits_bfield;
		
		private long Id_bfield;
		
		private string Message_bfield;
		
		private string Sender_bfield;
		
		private string Tag_bfield;
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("creationDatetime")]
		public System.DateTime CreationDatetime {
			get {
				return this.CreationDatetime_bfield;
			}
			set {
				this.CreationDatetime_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;double&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("credits")]
		public double Credits {
			get {
				return this.Credits_bfield;
			}
			set {
				this.Credits_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("id")]
		public long Id {
			get {
				return this.Id_bfield;
			}
			set {
				this.Id_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("message")]
		public string Message {
			get {
				return this.Message_bfield;
			}
			set {
				this.Message_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("sender")]
		public string Sender {
			get {
				return this.Sender_bfield;
			}
			set {
				this.Sender_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("tag")]
		public string Tag {
			get {
				return this.Tag_bfield;
			}
			set {
				this.Tag_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Sms job
	/// </summary>
	public class SmsJob {
		
		private System.DateTime CreationDatetime_bfield;
		
		private double Credits_bfield;
		
		private System.Nullable<System.DateTime> DeliveredAt_bfield;
		
		private long DeliveryReceipt_bfield;
		
		private long DifferedDelivery_bfield;
		
		private long Id_bfield;
		
		private string Message_bfield;
		
		private long MessageLength_bfield;
		
		private long NumberOfSms_bfield;
		
		private long Ptt_bfield;
		
		private string Receiver_bfield;
		
		private string Sender_bfield;
		
		private System.Nullable<System.DateTime> SentAt_bfield;
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("creationDatetime")]
		public System.DateTime CreationDatetime {
			get {
				return this.CreationDatetime_bfield;
			}
			set {
				this.CreationDatetime_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;double&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("credits")]
		public double Credits {
			get {
				return this.Credits_bfield;
			}
			set {
				this.Credits_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("deliveredAt")]
		public System.Nullable<System.DateTime> DeliveredAt {
			get {
				return this.DeliveredAt_bfield;
			}
			set {
				this.DeliveredAt_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("deliveryReceipt")]
		public long DeliveryReceipt {
			get {
				return this.DeliveryReceipt_bfield;
			}
			set {
				this.DeliveryReceipt_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("differedDelivery")]
		public long DifferedDelivery {
			get {
				return this.DifferedDelivery_bfield;
			}
			set {
				this.DifferedDelivery_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("id")]
		public long Id {
			get {
				return this.Id_bfield;
			}
			set {
				this.Id_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("message")]
		public string Message {
			get {
				return this.Message_bfield;
			}
			set {
				this.Message_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("messageLength")]
		public long MessageLength {
			get {
				return this.MessageLength_bfield;
			}
			set {
				this.MessageLength_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("numberOfSms")]
		public long NumberOfSms {
			get {
				return this.NumberOfSms_bfield;
			}
			set {
				this.NumberOfSms_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("ptt")]
		public long Ptt {
			get {
				return this.Ptt_bfield;
			}
			set {
				this.Ptt_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("receiver")]
		public string Receiver {
			get {
				return this.Receiver_bfield;
			}
			set {
				this.Receiver_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("sender")]
		public string Sender {
			get {
				return this.Sender_bfield;
			}
			set {
				this.Sender_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("sentAt")]
		public System.Nullable<System.DateTime> SentAt {
			get {
				return this.SentAt_bfield;
			}
			set {
				this.SentAt_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// A structure describing the encoding, length and number of SMS parts of a text message
	/// </summary>
	public class SmsJobEstimate {
		
		private long Characters_bfield;
		
		private string CharactersClass_bfield;
		
		private long MaxCharactersPerPart_bfield;
		
		private long Parts_bfield;
		
		/// <summary>
		/// The number of characters the message contains, including invisible escaped characters
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;The number of characters the message contains, including invisible escaped characters&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("characters")]
		public long Characters {
			get {
				return this.Characters_bfield;
			}
			set {
				this.Characters_bfield = value;
			}
		}
		
		/// <summary>
		/// The characters class that will be used to send the SMS, depending on characters in message
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;sms.EncodingEnum&quot;,&quot;Description&quot;:&quot;The characters class that will be used to send the SMS, depending on characters in message&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("charactersClass")]
		public string CharactersClass {
			get {
				return this.CharactersClass_bfield;
			}
			set {
				this.CharactersClass_bfield = value;
			}
		}
		
		/// <summary>
		/// The number of characters every SMS part can contain, depending on characters class and quantity of parts
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;The number of characters every SMS part can contain, depending on characters class and quantity of parts&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("maxCharactersPerPart")]
		public long MaxCharactersPerPart {
			get {
				return this.MaxCharactersPerPart_bfield;
			}
			set {
				this.MaxCharactersPerPart_bfield = value;
			}
		}
		
		/// <summary>
		/// The quantity of SMS parts the message will be split in
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;The quantity of SMS parts the message will be split in&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("parts")]
		public long Parts {
			get {
				return this.Parts_bfield;
			}
			set {
				this.Parts_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Sent SMS
	/// </summary>
	public class SmsOutgoing {
		
		private string BatchID_bfield;
		
		private System.DateTime CreationDatetime_bfield;
		
		private double Credits_bfield;
		
		private System.Nullable<System.DateTime> DeliveredAt_bfield;
		
		private long DeliveryReceipt_bfield;
		
		private long DifferedDelivery_bfield;
		
		private long Id_bfield;
		
		private string Message_bfield;
		
		private long MessageLength_bfield;
		
		private long NumberOfSms_bfield;
		
		private long Ptt_bfield;
		
		private string Receiver_bfield;
		
		private string Sender_bfield;
		
		private System.Nullable<System.DateTime> SentAt_bfield;
		
		private string Tag_bfield;
		
		private string TariffCode_bfield;
		
		/// <summary>
		/// ID of batch linked to the SMS
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;ID of batch linked to the SMS&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("batchID")]
		public string BatchID {
			get {
				return this.BatchID_bfield;
			}
			set {
				this.BatchID_bfield = value;
			}
		}
		
		/// <summary>
		/// Creation datetime
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Creation datetime&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("creationDatetime")]
		public System.DateTime CreationDatetime {
			get {
				return this.CreationDatetime_bfield;
			}
			set {
				this.CreationDatetime_bfield = value;
			}
		}
		
		/// <summary>
		/// Spent credits
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;double&quot;,&quot;Description&quot;:&quot;Spent credits&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("credits")]
		public double Credits {
			get {
				return this.Credits_bfield;
			}
			set {
				this.Credits_bfield = value;
			}
		}
		
		/// <summary>
		/// Delivering datetime
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Delivering datetime&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("deliveredAt")]
		public System.Nullable<System.DateTime> DeliveredAt {
			get {
				return this.DeliveredAt_bfield;
			}
			set {
				this.DeliveredAt_bfield = value;
			}
		}
		
		/// <summary>
		/// Delivery receipt from operator
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Delivery receipt from operator&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("deliveryReceipt")]
		public long DeliveryReceipt {
			get {
				return this.DeliveryReceipt_bfield;
			}
			set {
				this.DeliveryReceipt_bfield = value;
			}
		}
		
		/// <summary>
		/// Delay before SMS sending
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Delay before SMS sending&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("differedDelivery")]
		public long DifferedDelivery {
			get {
				return this.DifferedDelivery_bfield;
			}
			set {
				this.DifferedDelivery_bfield = value;
			}
		}
		
		/// <summary>
		/// Identifier
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Identifier&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("id")]
		public long Id {
			get {
				return this.Id_bfield;
			}
			set {
				this.Id_bfield = value;
			}
		}
		
		/// <summary>
		/// SMS message
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;SMS message&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("message")]
		public string Message {
			get {
				return this.Message_bfield;
			}
			set {
				this.Message_bfield = value;
			}
		}
		
		/// <summary>
		/// SMS message length
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;SMS message length&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("messageLength")]
		public long MessageLength {
			get {
				return this.MessageLength_bfield;
			}
			set {
				this.MessageLength_bfield = value;
			}
		}
		
		/// <summary>
		/// SMS message's number of parts
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;SMS message's number of parts&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("numberOfSms")]
		public long NumberOfSms {
			get {
				return this.NumberOfSms_bfield;
			}
			set {
				this.NumberOfSms_bfield = value;
			}
		}
		
		/// <summary>
		/// Code representing SMS state
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Code representing SMS state&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("ptt")]
		public long Ptt {
			get {
				return this.Ptt_bfield;
			}
			set {
				this.Ptt_bfield = value;
			}
		}
		
		/// <summary>
		/// SMS receiver
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;SMS receiver&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("receiver")]
		public string Receiver {
			get {
				return this.Receiver_bfield;
			}
			set {
				this.Receiver_bfield = value;
			}
		}
		
		/// <summary>
		/// SMS sender
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;SMS sender&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("sender")]
		public string Sender {
			get {
				return this.Sender_bfield;
			}
			set {
				this.Sender_bfield = value;
			}
		}
		
		/// <summary>
		/// Sending datetime
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Sending datetime&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("sentAt")]
		public System.Nullable<System.DateTime> SentAt {
			get {
				return this.SentAt_bfield;
			}
			set {
				this.SentAt_bfield = value;
			}
		}
		
		/// <summary>
		/// Customer label to categorize SMSs
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Customer label to categorize SMSs&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("tag")]
		public string Tag {
			get {
				return this.Tag_bfield;
			}
			set {
				this.Tag_bfield = value;
			}
		}
		
		/// <summary>
		/// Tariff code applied on the sms
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Tariff code applied on the sms&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("tariffCode")]
		public string TariffCode {
			get {
				return this.TariffCode_bfield;
			}
			set {
				this.TariffCode_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Details about a SMS pack
	/// </summary>
	public class SmsPackDetails {
		
		private string CountryCode_bfield;
		
		private double Credit_bfield;
		
		private OrderPrice CreditPrice_bfield;
		
		private System.Nullable<long> CreditQuantityMax_bfield;
		
		private long CreditQuantityMin_bfield;
		
		private OrderPrice DiscountCreditPrice_bfield;
		
		private System.Nullable<long> DiscountPercentage_bfield;
		
		private OrderPrice DiscountSmsPrice_bfield;
		
		private OrderPrice SmsPrice_bfield;
		
		private System.Nullable<long> SmsQuantityMax_bfield;
		
		private long SmsQuantityMin_bfield;
		
		/// <summary>
		/// Destination country code
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;sms.CountryEnum&quot;,&quot;Description&quot;:&quot;Destination country code&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("countryCode")]
		public string CountryCode {
			get {
				return this.CountryCode_bfield;
			}
			set {
				this.CountryCode_bfield = value;
			}
		}
		
		/// <summary>
		/// Credits consumed by sending one SMS towards the given destination
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;double&quot;,&quot;Description&quot;:&quot;Credits consumed by sending one SMS towards the given destination&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("credit")]
		public double Credit {
			get {
				return this.Credit_bfield;
			}
			set {
				this.Credit_bfield = value;
			}
		}
		
		/// <summary>
		/// Price of one credit, including pack's promotion
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;order.Price&quot;,&quot;Description&quot;:&quot;Price of one credit, including pack's promotion&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("creditPrice")]
		public OrderPrice CreditPrice {
			get {
				return this.CreditPrice_bfield;
			}
			set {
				this.CreditPrice_bfield = value;
			}
		}
		
		/// <summary>
		/// Maximum quantity (excluded) of credit to order to have this price
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Maximum quantity (excluded) of credit to order to have this price&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("creditQuantityMax")]
		public System.Nullable<long> CreditQuantityMax {
			get {
				return this.CreditQuantityMax_bfield;
			}
			set {
				this.CreditQuantityMax_bfield = value;
			}
		}
		
		/// <summary>
		/// Minimum quantity (included) of credit to order to have this price
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Minimum quantity (included) of credit to order to have this price&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("creditQuantityMin")]
		public long CreditQuantityMin {
			get {
				return this.CreditQuantityMin_bfield;
			}
			set {
				this.CreditQuantityMin_bfield = value;
			}
		}
		
		/// <summary>
		/// Price of one credit, during a promotional event
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;order.Price&quot;,&quot;Description&quot;:&quot;Price of one credit, during a promotional event&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("discountCreditPrice")]
		public OrderPrice DiscountCreditPrice {
			get {
				return this.DiscountCreditPrice_bfield;
			}
			set {
				this.DiscountCreditPrice_bfield = value;
			}
		}
		
		/// <summary>
		/// Percentage applied as part of a promotional event
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Percentage applied as part of a promotional event&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("discountPercentage")]
		public System.Nullable<long> DiscountPercentage {
			get {
				return this.DiscountPercentage_bfield;
			}
			set {
				this.DiscountPercentage_bfield = value;
			}
		}
		
		/// <summary>
		/// Price of one SMS, during a promotional event
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;order.Price&quot;,&quot;Description&quot;:&quot;Price of one SMS, during a promotional event&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("discountSmsPrice")]
		public OrderPrice DiscountSmsPrice {
			get {
				return this.DiscountSmsPrice_bfield;
			}
			set {
				this.DiscountSmsPrice_bfield = value;
			}
		}
		
		/// <summary>
		/// Price of one SMS sent towards the given destination, including pack's promotion
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;order.Price&quot;,&quot;Description&quot;:&quot;Price of one SMS sent towards the given destination, including pack's promotion&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("smsPrice")]
		public OrderPrice SmsPrice {
			get {
				return this.SmsPrice_bfield;
			}
			set {
				this.SmsPrice_bfield = value;
			}
		}
		
		/// <summary>
		/// Maximum quantity (excluded) of SMS you can obtain with this pack
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Maximum quantity (excluded) of SMS you can obtain with this pack&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("smsQuantityMax")]
		public System.Nullable<long> SmsQuantityMax {
			get {
				return this.SmsQuantityMax_bfield;
			}
			set {
				this.SmsQuantityMax_bfield = value;
			}
		}
		
		/// <summary>
		/// Minimum quantity (included) of SMS you can obtain with this pack
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Minimum quantity (included) of SMS you can obtain with this pack&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("smsQuantityMin")]
		public long SmsQuantityMin {
			get {
				return this.SmsQuantityMin_bfield;
			}
			set {
				this.SmsQuantityMin_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// A structure describing all information about an sms pack offer
	/// </summary>
	public class SmsPackOffer {
		
		private string CountryDestination_bfield;
		
		private System.Nullable<double> GiftPrice_bfield;
		
		private System.Nullable<double> GiftQuantity_bfield;
		
		private string Language_bfield;
		
		private double Price_bfield;
		
		private long Quantity_bfield;
		
		private double SmsQuantity_bfield;
		
		private System.Nullable<double> TotalPrice_bfield;
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("countryDestination")]
		public string CountryDestination {
			get {
				return this.CountryDestination_bfield;
			}
			set {
				this.CountryDestination_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;double&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("giftPrice")]
		public System.Nullable<double> GiftPrice {
			get {
				return this.GiftPrice_bfield;
			}
			set {
				this.GiftPrice_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;double&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("giftQuantity")]
		public System.Nullable<double> GiftQuantity {
			get {
				return this.GiftQuantity_bfield;
			}
			set {
				this.GiftQuantity_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("language")]
		public string Language {
			get {
				return this.Language_bfield;
			}
			set {
				this.Language_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;double&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("price")]
		public double Price {
			get {
				return this.Price_bfield;
			}
			set {
				this.Price_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("quantity")]
		public long Quantity {
			get {
				return this.Quantity_bfield;
			}
			set {
				this.Quantity_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;double&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("smsQuantity")]
		public double SmsQuantity {
			get {
				return this.SmsQuantity_bfield;
			}
			set {
				this.SmsQuantity_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;double&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("totalPrice")]
		public System.Nullable<double> TotalPrice {
			get {
				return this.TotalPrice_bfield;
			}
			set {
				this.TotalPrice_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Phone book
	/// </summary>
	public class SmsPhonebook {
		
		private string BookKey_bfield;
		
		private string Name_bfield;
		
		private string PhoneKey_bfield;
		
		/// <summary>
		/// Identifier of the phonebook
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Identifier of the phonebook&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("bookKey")]
		public string BookKey {
			get {
				return this.BookKey_bfield;
			}
			set {
				this.BookKey_bfield = value;
			}
		}
		
		/// <summary>
		/// Phonebook name
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Phonebook name&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("name")]
		public string Name {
			get {
				return this.Name_bfield;
			}
			set {
				this.Name_bfield = value;
			}
		}
		
		/// <summary>
		/// Phone key identifier between the phone and phonebooks
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Phone key identifier between the phone and phonebooks&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("phoneKey")]
		public string PhoneKey {
			get {
				return this.PhoneKey_bfield;
			}
			set {
				this.PhoneKey_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Phone book contact
	/// </summary>
	public class SmsPhonebookContact {
		
		private string Group_bfield;
		
		private string HomeMobile_bfield;
		
		private string HomePhone_bfield;
		
		private long Id_bfield;
		
		private string Name_bfield;
		
		private string Surname_bfield;
		
		private string WorkMobile_bfield;
		
		private string WorkPhone_bfield;
		
		/// <summary>
		/// Group name of the phonebook
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Group name of the phonebook&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("group")]
		public string Group {
			get {
				return this.Group_bfield;
			}
			set {
				this.Group_bfield = value;
			}
		}
		
		/// <summary>
		/// Home mobile phone number of the contact
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;internationalPhoneNumber&quot;,&quot;Description&quot;:&quot;Home mobile phone number of the contact&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("homeMobile")]
		public string HomeMobile {
			get {
				return this.HomeMobile_bfield;
			}
			set {
				this.HomeMobile_bfield = value;
			}
		}
		
		/// <summary>
		/// Home landline phone number of the contact
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;internationalPhoneNumber&quot;,&quot;Description&quot;:&quot;Home landline phone number of the contact&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("homePhone")]
		public string HomePhone {
			get {
				return this.HomePhone_bfield;
			}
			set {
				this.HomePhone_bfield = value;
			}
		}
		
		/// <summary>
		/// Contact identifier
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Contact identifier&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("id")]
		public long Id {
			get {
				return this.Id_bfield;
			}
			set {
				this.Id_bfield = value;
			}
		}
		
		/// <summary>
		/// Contact name
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Contact name&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("name")]
		public string Name {
			get {
				return this.Name_bfield;
			}
			set {
				this.Name_bfield = value;
			}
		}
		
		/// <summary>
		/// Contact surname
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Contact surname&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("surname")]
		public string Surname {
			get {
				return this.Surname_bfield;
			}
			set {
				this.Surname_bfield = value;
			}
		}
		
		/// <summary>
		/// Mobile phone office number of the contact
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;internationalPhoneNumber&quot;,&quot;Description&quot;:&quot;Mobile phone office number of the contact&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("workMobile")]
		public string WorkMobile {
			get {
				return this.WorkMobile_bfield;
			}
			set {
				this.WorkMobile_bfield = value;
			}
		}
		
		/// <summary>
		/// Landline phone office number of the contact
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;internationalPhoneNumber&quot;,&quot;Description&quot;:&quot;Landline phone office number of the contact&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("workPhone")]
		public string WorkPhone {
			get {
				return this.WorkPhone_bfield;
			}
			set {
				this.WorkPhone_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// A structure describing ptt details
	/// </summary>
	public class SmsPttDetails {
		
		private string Comment_bfield;
		
		private string Description_bfield;
		
		private string Duration_bfield;
		
		/// <summary>
		/// Ptt informations
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Ptt informations&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("comment")]
		public string Comment {
			get {
				return this.Comment_bfield;
			}
			set {
				this.Comment_bfield = value;
			}
		}
		
		/// <summary>
		/// Ptt short description
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Ptt short description&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("description")]
		public string Description {
			get {
				return this.Description_bfield;
			}
			set {
				this.Description_bfield = value;
			}
		}
		
		/// <summary>
		/// Ptt volatility type
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;sms.PttDurationTypeEnum&quot;,&quot;Description&quot;:&quot;Ptt volatility type&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("duration")]
		public string Duration {
			get {
				return this.Duration_bfield;
			}
			set {
				this.Duration_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// A structure describing all information about quota informations
	/// </summary>
	public class SmsQuota {
		
		private double QuotaLeft_bfield;
		
		private string QuotaStatus_bfield;
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;double&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("quotaLeft")]
		public double QuotaLeft {
			get {
				return this.QuotaLeft_bfield;
			}
			set {
				this.QuotaLeft_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;sms.QuotaStatusUserEnum&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("quotaStatus")]
		public string QuotaStatus {
			get {
				return this.QuotaStatus_bfield;
			}
			set {
				this.QuotaStatus_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Sms receivers preloaded
	/// </summary>
	public class SmsReceiver {
		
		private bool AutoUpdate_bfield;
		
		private bool CanAutoUpdate_bfield;
		
		private System.DateTime Datetime_bfield;
		
		private string Description_bfield;
		
		private long Records_bfield;
		
		private long SlotId_bfield;
		
		/// <summary>
		/// Download file from URL before sending to contacts (works only with csvUrl and not document ID)
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Download file from URL before sending to contacts (works only with csvUrl and not document ID)&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("autoUpdate")]
		public bool AutoUpdate {
			get {
				return this.AutoUpdate_bfield;
			}
			set {
				this.AutoUpdate_bfield = value;
			}
		}
		
		/// <summary>
		/// Is the object compatible with autoUpdate
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Is the object compatible with autoUpdate&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("canAutoUpdate")]
		public bool CanAutoUpdate {
			get {
				return this.CanAutoUpdate_bfield;
			}
			set {
				this.CanAutoUpdate_bfield = value;
			}
		}
		
		/// <summary>
		/// Creation date of the document
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Creation date of the document&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("datetime")]
		public System.DateTime Datetime {
			get {
				return this.Datetime_bfield;
			}
			set {
				this.Datetime_bfield = value;
			}
		}
		
		/// <summary>
		/// Description name of the document
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Description name of the document&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("description")]
		public string Description {
			get {
				return this.Description_bfield;
			}
			set {
				this.Description_bfield = value;
			}
		}
		
		/// <summary>
		/// Number of receiver records in the document
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Number of receiver records in the document&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("records")]
		public long Records {
			get {
				return this.Records_bfield;
			}
			set {
				this.Records_bfield = value;
			}
		}
		
		/// <summary>
		/// Slot number id
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Slot number id&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("slotId")]
		public long SlotId {
			get {
				return this.SlotId_bfield;
			}
			set {
				this.SlotId_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// A structure giving operation price and asynchronous task ID
	/// </summary>
	public class SmsReceiversAsynchronousCleanReport {
		
		private long TaskId_bfield;
		
		private double TotalCreditsRemoved_bfield;
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("taskId")]
		public long TaskId {
			get {
				return this.TaskId_bfield;
			}
			set {
				this.TaskId_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;double&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("totalCreditsRemoved")]
		public double TotalCreditsRemoved {
			get {
				return this.TotalCreditsRemoved_bfield;
			}
			set {
				this.TotalCreditsRemoved_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// A structure describing how to manage an sms Response
	/// </summary>
	public class SmsResponse {
		
		private string CgiUrl_bfield;
		
		private string ResponseType_bfield;
		
		private string Text_bfield;
		
		private string TrackingDefaultSmsSender_bfield;
		
		private string[] TrackingOptions_bfield;
		
		/// <summary>
		/// Default url callback used for a given response.
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Default url callback used for a given response.&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("cgiUrl")]
		public string CgiUrl {
			get {
				return this.CgiUrl_bfield;
			}
			set {
				this.CgiUrl_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;sms.ResponseTypeEnum&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("responseType")]
		public string ResponseType {
			get {
				return this.ResponseType_bfield;
			}
			set {
				this.ResponseType_bfield = value;
			}
		}
		
		/// <summary>
		/// Automatic notification sent by text in case of customer reply.
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Automatic notification sent by text in case of customer reply.&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("text")]
		public string Text {
			get {
				return this.Text_bfield;
			}
			set {
				this.Text_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("trackingDefaultSmsSender")]
		public string TrackingDefaultSmsSender {
			get {
				return this.TrackingDefaultSmsSender_bfield;
			}
			set {
				this.TrackingDefaultSmsSender_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;sms.ResponseTrackingOptions[]&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("trackingOptions")]
		public string[] TrackingOptions {
			get {
				return this.TrackingOptions_bfield;
			}
			set {
				this.TrackingOptions_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// The tracking media response
	/// </summary>
	public class SmsResponseTrackingOptions {
		
		private string Media_bfield;
		
		private string Sender_bfield;
		
		private string Target_bfield;
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;sms.ResponseTrackingMediaEnum&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("media")]
		public string Media {
			get {
				return this.Media_bfield;
			}
			set {
				this.Media_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("sender")]
		public string Sender {
			get {
				return this.Sender_bfield;
			}
			set {
				this.Sender_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("target")]
		public string Target {
			get {
				return this.Target_bfield;
			}
			set {
				this.Target_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// SMS senders
	/// </summary>
	public class SmsSender {
		
		private string Comment_bfield;
		
		private string Description_bfield;
		
		private string Referer_bfield;
		
		private string Sender_bfield;
		
		private string Status_bfield;
		
		private string Type_bfield;
		
		private string ValidationMedia_bfield;
		
		/// <summary>
		/// Message sent by the moderator
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Message sent by the moderator&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("comment")]
		public string Comment {
			get {
				return this.Comment_bfield;
			}
			set {
				this.Comment_bfield = value;
			}
		}
		
		/// <summary>
		/// Sender description
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Sender description&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("description")]
		public string Description {
			get {
				return this.Description_bfield;
			}
			set {
				this.Description_bfield = value;
			}
		}
		
		/// <summary>
		/// Specify if the sender is custom or not
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;sms.RefererSenderEnum&quot;,&quot;Description&quot;:&quot;Specify if the sender is custom or not&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("referer")]
		public string Referer {
			get {
				return this.Referer_bfield;
			}
			set {
				this.Referer_bfield = value;
			}
		}
		
		/// <summary>
		/// The sms sender
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;The sms sender&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("sender")]
		public string Sender {
			get {
				return this.Sender_bfield;
			}
			set {
				this.Sender_bfield = value;
			}
		}
		
		/// <summary>
		/// Sender status
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;sms.StatusSenderEnum&quot;,&quot;Description&quot;:&quot;Sender status&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("status")]
		public string Status {
			get {
				return this.Status_bfield;
			}
			set {
				this.Status_bfield = value;
			}
		}
		
		/// <summary>
		/// Specify the kind of sender
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;sms.TypeSenderEnum&quot;,&quot;Description&quot;:&quot;Specify the kind of sender&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("type")]
		public string Type {
			get {
				return this.Type_bfield;
			}
			set {
				this.Type_bfield = value;
			}
		}
		
		/// <summary>
		/// Validation media identifier
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Validation media identifier&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("validationMedia")]
		public string ValidationMedia {
			get {
				return this.ValidationMedia_bfield;
			}
			set {
				this.ValidationMedia_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// A structure describing all information about senders available
	/// </summary>
	public class SmsSenderAvailable {
		
		private string Referer_bfield;
		
		private string Sender_bfield;
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;sms.SenderRefererEnum&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("referer")]
		public string Referer {
			get {
				return this.Referer_bfield;
			}
			set {
				this.Referer_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("sender")]
		public string Sender {
			get {
				return this.Sender_bfield;
			}
			set {
				this.Sender_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// SMS senders' document
	/// </summary>
	public class SmsSenderDocument {
		
		private System.DateTime CreatedAt_bfield;
		
		private string Description_bfield;
		
		private string DocumentID_bfield;
		
		private string GetUrl_bfield;
		
		private string Name_bfield;
		
		private string PutUrl_bfield;
		
		private long Size_bfield;
		
		/// <summary>
		/// Creation datetime
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Creation datetime&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("createdAt")]
		public System.DateTime CreatedAt {
			get {
				return this.CreatedAt_bfield;
			}
			set {
				this.CreatedAt_bfield = value;
			}
		}
		
		/// <summary>
		/// Document description
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Document description&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("description")]
		public string Description {
			get {
				return this.Description_bfield;
			}
			set {
				this.Description_bfield = value;
			}
		}
		
		/// <summary>
		/// Document ID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Document ID&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("documentID")]
		public string DocumentID {
			get {
				return this.DocumentID_bfield;
			}
			set {
				this.DocumentID_bfield = value;
			}
		}
		
		/// <summary>
		/// URL to get document
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;URL to get document&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("getUrl")]
		public string GetUrl {
			get {
				return this.GetUrl_bfield;
			}
			set {
				this.GetUrl_bfield = value;
			}
		}
		
		/// <summary>
		/// Document name
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Document name&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("name")]
		public string Name {
			get {
				return this.Name_bfield;
			}
			set {
				this.Name_bfield = value;
			}
		}
		
		/// <summary>
		/// URL to upload document
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;URL to upload document&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("putUrl")]
		public string PutUrl {
			get {
				return this.PutUrl_bfield;
			}
			set {
				this.PutUrl_bfield = value;
			}
		}
		
		/// <summary>
		/// Document size (in bytes)
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Document size (in bytes)&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("size")]
		public long Size {
			get {
				return this.Size_bfield;
			}
			set {
				this.Size_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// A structure describing all information about quota informations
	/// </summary>
	public class SmsSmsSendingReport {
		
		private long[] Ids_bfield;
		
		private string[] InvalidReceivers_bfield;
		
		private double TotalCreditsRemoved_bfield;
		
		private string[] ValidReceivers_bfield;
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long[]&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("ids")]
		public long[] Ids {
			get {
				return this.Ids_bfield;
			}
			set {
				this.Ids_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string[]&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("invalidReceivers")]
		public string[] InvalidReceivers {
			get {
				return this.InvalidReceivers_bfield;
			}
			set {
				this.InvalidReceivers_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;double&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("totalCreditsRemoved")]
		public double TotalCreditsRemoved {
			get {
				return this.TotalCreditsRemoved_bfield;
			}
			set {
				this.TotalCreditsRemoved_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string[]&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("validReceivers")]
		public string[] ValidReceivers {
			get {
				return this.ValidReceivers_bfield;
			}
			set {
				this.ValidReceivers_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Operation on a SMS service
	/// </summary>
	public class SmsTask {
		
		private string Function_bfield;
		
		private string Status_bfield;
		
		private string Step_bfield;
		
		private long TaskId_bfield;
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;sms.TodoGeneralPublicFunctionsEnum&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("function")]
		public string Function {
			get {
				return this.Function_bfield;
			}
			set {
				this.Function_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;telephony.TaskStatusEnum&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("status")]
		public string Status {
			get {
				return this.Status_bfield;
			}
			set {
				this.Status_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;sms.TodoGeneralPublicStepsEnum&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("step")]
		public string Step {
			get {
				return this.Step_bfield;
			}
			set {
				this.Step_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("taskId")]
		public long TaskId {
			get {
				return this.TaskId_bfield;
			}
			set {
				this.TaskId_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Sms template for moderation (Needed to send in US country)
	/// </summary>
	public class SmsTemplateControl {
		
		private string Activity_bfield;
		
		private string Comment_bfield;
		
		private System.DateTime Datetime_bfield;
		
		private string Description_bfield;
		
		private string Message_bfield;
		
		private string Name_bfield;
		
		private string Status_bfield;
		
		/// <summary>
		/// Specify the kind of template
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;sms.TypeTemplateEnum&quot;,&quot;Description&quot;:&quot;Specify the kind of template&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("activity")]
		public string Activity {
			get {
				return this.Activity_bfield;
			}
			set {
				this.Activity_bfield = value;
			}
		}
		
		/// <summary>
		/// Message sent by the moderator
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Message sent by the moderator&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("comment")]
		public string Comment {
			get {
				return this.Comment_bfield;
			}
			set {
				this.Comment_bfield = value;
			}
		}
		
		/// <summary>
		/// Template creation datetime
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Template creation datetime&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("datetime")]
		public System.DateTime Datetime {
			get {
				return this.Datetime_bfield;
			}
			set {
				this.Datetime_bfield = value;
			}
		}
		
		/// <summary>
		/// Template description
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Template description&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("description")]
		public string Description {
			get {
				return this.Description_bfield;
			}
			set {
				this.Description_bfield = value;
			}
		}
		
		/// <summary>
		/// Message pattern to be moderated. Use &quot;#VALUE#&quot; format for dynamic text area.
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Message pattern to be moderated. Use \&quot;#VALUE#\&quot; format for dynamic text area.&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("message")]
		public string Message {
			get {
				return this.Message_bfield;
			}
			set {
				this.Message_bfield = value;
			}
		}
		
		/// <summary>
		/// Name of the template
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Name of the template&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("name")]
		public string Name {
			get {
				return this.Name_bfield;
			}
			set {
				this.Name_bfield = value;
			}
		}
		
		/// <summary>
		/// Template status
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;sms.StatusSenderEnum&quot;,&quot;Description&quot;:&quot;Template status&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("status")]
		public string Status {
			get {
				return this.Status_bfield;
			}
			set {
				this.Status_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// A structure describing all information about templates informations
	/// </summary>
	public class SmsTemplates {
		
		private bool CustomizedEmailMode_bfield;
		
		private bool CustomizedSmsMode_bfield;
		
		private string EmailBody_bfield;
		
		private string EmailFrom_bfield;
		
		private string EmailSubject_bfield;
		
		private string SmsBody_bfield;
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("customizedEmailMode")]
		public bool CustomizedEmailMode {
			get {
				return this.CustomizedEmailMode_bfield;
			}
			set {
				this.CustomizedEmailMode_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("customizedSmsMode")]
		public bool CustomizedSmsMode {
			get {
				return this.CustomizedSmsMode_bfield;
			}
			set {
				this.CustomizedSmsMode_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("emailBody")]
		public string EmailBody {
			get {
				return this.EmailBody_bfield;
			}
			set {
				this.EmailBody_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("emailFrom")]
		public string EmailFrom {
			get {
				return this.EmailFrom_bfield;
			}
			set {
				this.EmailFrom_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("emailSubject")]
		public string EmailSubject {
			get {
				return this.EmailSubject_bfield;
			}
			set {
				this.EmailSubject_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("smsBody")]
		public string SmsBody {
			get {
				return this.SmsBody_bfield;
			}
			set {
				this.SmsBody_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// SMS users
	/// </summary>
	public class SmsUser {
		
		private SmsAlertThreshold AlertThresholdInformations_bfield;
		
		private string CallBack_bfield;
		
		private string[] IpRestrictions_bfield;
		
		private string Login_bfield;
		
		private string Password_bfield;
		
		private SmsQuota QuotaInformations_bfield;
		
		private string StopCallBack_bfield;
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;sms.AlertThreshold&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("alertThresholdInformations")]
		public SmsAlertThreshold AlertThresholdInformations {
			get {
				return this.AlertThresholdInformations_bfield;
			}
			set {
				this.AlertThresholdInformations_bfield = value;
			}
		}
		
		/// <summary>
		/// URL called when state of a sent SMS changes
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;URL called when state of a sent SMS changes&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("callBack")]
		public string CallBack {
			get {
				return this.CallBack_bfield;
			}
			set {
				this.CallBack_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string[]&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("ipRestrictions")]
		public string[] IpRestrictions {
			get {
				return this.IpRestrictions_bfield;
			}
			set {
				this.IpRestrictions_bfield = value;
			}
		}
		
		/// <summary>
		/// The sms user login
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;The sms user login&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("login")]
		public string Login {
			get {
				return this.Login_bfield;
			}
			set {
				this.Login_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("password")]
		public string Password {
			get {
				return this.Password_bfield;
			}
			set {
				this.Password_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;sms.Quota&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("quotaInformations")]
		public SmsQuota QuotaInformations {
			get {
				return this.QuotaInformations_bfield;
			}
			set {
				this.QuotaInformations_bfield = value;
			}
		}
		
		/// <summary>
		/// URL called when a STOP is received after a receiver replied stop to a SMS
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;URL called when a STOP is received after a receiver replied stop to a SMS&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("stopCallBack")]
		public string StopCallBack {
			get {
				return this.StopCallBack_bfield;
			}
			set {
				this.StopCallBack_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Virtual numbers
	/// </summary>
	public class SmsVirtualNumber {
		
		private string CountryCode_bfield;
		
		private string Number_bfield;
		
		/// <summary>
		/// The ISO formated country code of the number
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;sms.VirtualNumberIsoCountryCodeEnum&quot;,&quot;Description&quot;:&quot;The ISO formated country code of the number&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("countryCode")]
		public string CountryCode {
			get {
				return this.CountryCode_bfield;
			}
			set {
				this.CountryCode_bfield = value;
			}
		}
		
		/// <summary>
		/// The virtual number
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;The virtual number&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("number")]
		public string Number {
			get {
				return this.Number_bfield;
			}
			set {
				this.Number_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Virtual numbers
	/// </summary>
	public class SmsVirtualNumberGenericService {
		
		private string CountryCode_bfield;
		
		private string Number_bfield;
		
		/// <summary>
		/// The ISO formated country code of the number
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;sms.VirtualNumberIsoCountryCodeEnum&quot;,&quot;Description&quot;:&quot;The ISO formated country code of the number&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("countryCode")]
		public string CountryCode {
			get {
				return this.CountryCode_bfield;
			}
			set {
				this.CountryCode_bfield = value;
			}
		}
		
		/// <summary>
		/// The virtual number
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;The virtual number&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("number")]
		public string Number {
			get {
				return this.Number_bfield;
			}
			set {
				this.Number_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Sms job
	/// </summary>
	public class SmsVirtualNumberJob {
		
		private System.DateTime CreationDatetime_bfield;
		
		private double Credits_bfield;
		
		private long DeliveryReceipt_bfield;
		
		private long DifferedDelivery_bfield;
		
		private long Id_bfield;
		
		private string Message_bfield;
		
		private long MessageLength_bfield;
		
		private long NumberOfSms_bfield;
		
		private long Ptt_bfield;
		
		private string Receiver_bfield;
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("creationDatetime")]
		public System.DateTime CreationDatetime {
			get {
				return this.CreationDatetime_bfield;
			}
			set {
				this.CreationDatetime_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;double&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("credits")]
		public double Credits {
			get {
				return this.Credits_bfield;
			}
			set {
				this.Credits_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("deliveryReceipt")]
		public long DeliveryReceipt {
			get {
				return this.DeliveryReceipt_bfield;
			}
			set {
				this.DeliveryReceipt_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("differedDelivery")]
		public long DifferedDelivery {
			get {
				return this.DifferedDelivery_bfield;
			}
			set {
				this.DifferedDelivery_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("id")]
		public long Id {
			get {
				return this.Id_bfield;
			}
			set {
				this.Id_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("message")]
		public string Message {
			get {
				return this.Message_bfield;
			}
			set {
				this.Message_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("messageLength")]
		public long MessageLength {
			get {
				return this.MessageLength_bfield;
			}
			set {
				this.MessageLength_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("numberOfSms")]
		public long NumberOfSms {
			get {
				return this.NumberOfSms_bfield;
			}
			set {
				this.NumberOfSms_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("ptt")]
		public long Ptt {
			get {
				return this.Ptt_bfield;
			}
			set {
				this.Ptt_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("receiver")]
		public string Receiver {
			get {
				return this.Receiver_bfield;
			}
			set {
				this.Receiver_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Telephony API related file hosted
	/// </summary>
	public class TelephonyPcsFile {
		
		private string Filename_bfield;
		
		private string Status_bfield;
		
		private string Url_bfield;
		
		private System.DateTime UrlExpirationDatetime_bfield;
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("filename")]
		public string Filename {
			get {
				return this.Filename_bfield;
			}
			set {
				this.Filename_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;telephony.PcsFileStatusEnum&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("status")]
		public string Status {
			get {
				return this.Status_bfield;
			}
			set {
				this.Status_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("url")]
		public string Url {
			get {
				return this.Url_bfield;
			}
			set {
				this.Url_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("urlExpirationDatetime")]
		public System.DateTime UrlExpirationDatetime {
			get {
				return this.UrlExpirationDatetime_bfield;
			}
			set {
				this.UrlExpirationDatetime_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Operation on a telephony service
	/// </summary>
	public class TelephonyTask {
		
		private string Action_bfield;
		
		private string Message_bfield;
		
		private string ObjectCreated_bfield;
		
		private string ServiceType_bfield;
		
		private string Status_bfield;
		
		private long TaskId_bfield;
		
		/// <summary>
		/// Action associated with the task
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Action associated with the task&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("action")]
		public string Action {
			get {
				return this.Action_bfield;
			}
			set {
				this.Action_bfield = value;
			}
		}
		
		/// <summary>
		/// Potential failure reason of the task
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Potential failure reason of the task&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("message")]
		public string Message {
			get {
				return this.Message_bfield;
			}
			set {
				this.Message_bfield = value;
			}
		}
		
		/// <summary>
		/// Object potentially created at the end of the task
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Object potentially created at the end of the task&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("objectCreated")]
		public string ObjectCreated {
			get {
				return this.ObjectCreated_bfield;
			}
			set {
				this.ObjectCreated_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("serviceType")]
		public string ServiceType {
			get {
				return this.ServiceType_bfield;
			}
			set {
				this.ServiceType_bfield = value;
			}
		}
		
		/// <summary>
		/// Status of the task
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;telephony.TaskStatusEnum&quot;,&quot;Description&quot;:&quot;Status of the task&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("status")]
		public string Status {
			get {
				return this.Status_bfield;
			}
			set {
				this.Status_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("taskId")]
		public long TaskId {
			get {
				return this.TaskId_bfield;
			}
			set {
				this.TaskId_bfield = value;
			}
		}
	}
}
