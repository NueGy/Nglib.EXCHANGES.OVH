//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Newtonsoft.Json;
using Nglib.VENDORS.OVH.SHARED;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Threading.Tasks;


// [GET] "/cdn/website"  string[]--
//[GET] "/cdn/website/{serviceName}"  cdn.website.Website--serviceName
//[GET] "/cdn/website/{serviceName}/serviceInfos"  services.Service--serviceName
//[PUT] "/cdn/website/{serviceName}/serviceInfos"  void--,serviceName
//[DELETE] "/cdn/website/{serviceName}/zone"  cdn.website.Task--serviceName
//[GET] "/cdn/website/{serviceName}/zone"  cdn.website.Zone--serviceName
//[POST] "/cdn/website/{serviceName}/zone"  cdn.website.Zone--serviceName,zone
//[GET] "/cdn/website/{serviceName}/zone/backends"  ipv4[]--serviceName
//[POST] "/cdn/website/{serviceName}/zone/backends"  cdn.website.Task--ipv4,serviceName
//[DELETE] "/cdn/website/{serviceName}/zone/backends/{ipv4}"  cdn.website.Task--ipv4,serviceName
//[GET] "/cdn/website/{serviceName}/zone/backends/{ipv4}"  cdn.website.Backend--ipv4,serviceName
//[GET] "/cdn/website/{serviceName}/zone/backends/{ipv4}/tasks"  long[]--ipv4,serviceName
//[GET] "/cdn/website/{serviceName}/zone/backends/{ipv4}/tasks/{taskId}"  cdn.website.Task--ipv4,serviceName,taskId
//[GET] "/cdn/website/{serviceName}/zone/domains"  string[]--serviceName
//[POST] "/cdn/website/{serviceName}/zone/domains"  cdn.website.Domain--domain,serviceName
//[DELETE] "/cdn/website/{serviceName}/zone/domains/{domain}"  cdn.website.Task--domain,serviceName
//[GET] "/cdn/website/{serviceName}/zone/domains/{domain}"  cdn.website.Domain--domain,serviceName
//[POST] "/cdn/website/{serviceName}/zone/domains/{domain}/flush"  cdn.website.Task--domain,serviceName
//[GET] "/cdn/website/{serviceName}/zone/domains/{domain}/statistics"  cdn.website.StatsDataType[]--domain,period,serviceName,type,value
//[GET] "/cdn/website/{serviceName}/zone/domains/{domain}/tasks"  long[]--domain,serviceName
//[GET] "/cdn/website/{serviceName}/zone/domains/{domain}/tasks/{taskId}"  cdn.website.Task--domain,serviceName,taskId
//[GET] "/cdn/website/{serviceName}/zone/tasks"  long[]--serviceName
//[GET] "/cdn/website/{serviceName}/zone/tasks/{taskId}"  cdn.website.Task--serviceName,taskId
namespace Nglib.VENDORS.OVH.CDNWEBSITE {
	
	
	/// <summary>
	/// All states a status can be in
	/// </summary>
	public enum CdnwebsiteBackendStatusEnum {
		
		[EnumMember(Value="creating")]
		Creating,
		
		[EnumMember(Value="error")]
		Error,
		
		[EnumMember(Value="on")]
		On,
		
		[EnumMember(Value="removing")]
		Removing,
	}
	
	/// <summary>
	/// All states a status can be in
	/// </summary>
	public enum CdnwebsiteDomainStatusEnum {
		
		[EnumMember(Value="error")]
		Error,
		
		[EnumMember(Value="on")]
		On,
		
		[EnumMember(Value="removing")]
		Removing,
	}
	
	/// <summary>
	/// All states a status can be in
	/// </summary>
	public enum CdnwebsiteDomainZoneStatusEnum {
		
		[EnumMember(Value="error")]
		Error,
		
		[EnumMember(Value="on")]
		On,
		
		[EnumMember(Value="removing")]
		Removing,
	}
	
	/// <summary>
	/// Period of the statistics
	/// </summary>
	public enum CdnwebsiteStatsPeriodEnum {
		
		[EnumMember(Value="day")]
		Day,
		
		[EnumMember(Value="month")]
		Month,
		
		[EnumMember(Value="week")]
		Week,
	}
	
	/// <summary>
	/// Type of statistics related to cache
	/// </summary>
	public enum CdnwebsiteStatsTypeEnum {
		
		[EnumMember(Value="backend")]
		Backend,
		
		[EnumMember(Value="cdn")]
		Cdn,
	}
	
	/// <summary>
	/// Value bandwidth or request
	/// </summary>
	public enum CdnwebsiteStatsValueEnum {
		
		[EnumMember(Value="bandwidth")]
		Bandwidth,
		
		[EnumMember(Value="request")]
		Request,
	}
	
	/// <summary>
	/// All function CDN task can be
	/// </summary>
	public enum CdnwebsiteTaskFunctionEnum {
		
		[EnumMember(Value="flushAll")]
		FlushAll,
		
		[EnumMember(Value="installBackend")]
		InstallBackend,
		
		[EnumMember(Value="removeBackend")]
		RemoveBackend,
		
		[EnumMember(Value="removeDomain")]
		RemoveDomain,
		
		[EnumMember(Value="removeZone")]
		RemoveZone,
	}
	
	/// <summary>
	/// All states a CDN task can be in
	/// </summary>
	public enum CdnwebsiteTaskStateEnum {
		
		[EnumMember(Value="cancelled")]
		Cancelled,
		
		[EnumMember(Value="doing")]
		Doing,
		
		[EnumMember(Value="done")]
		Done,
		
		[EnumMember(Value="error")]
		Error,
		
		[EnumMember(Value="todo")]
		Todo,
	}
	
	/// <summary>
	/// Detailed renewal type of a service
	/// </summary>
	public enum ServiceRenewalTypeEnum {
		
		[EnumMember(Value="automaticForcedProduct")]
		AutomaticForcedProduct,
		
		[EnumMember(Value="automaticV2012")]
		AutomaticV2012,
		
		[EnumMember(Value="automaticV2014")]
		AutomaticV2014,
		
		[EnumMember(Value="automaticV2016")]
		AutomaticV2016,
		
		[EnumMember(Value="manual")]
		Manual,
		
		[EnumMember(Value="oneShot")]
		OneShot,
		
		[EnumMember(Value="option")]
		Option,
	}
	
	public enum ServiceStateEnum {
		
		[EnumMember(Value="expired")]
		Expired,
		
		[EnumMember(Value="inCreation")]
		InCreation,
		
		[EnumMember(Value="ok")]
		Ok,
		
		[EnumMember(Value="pendingDebt")]
		PendingDebt,
		
		[EnumMember(Value="unPaid")]
		UnPaid,
	}
	
	/// <summary>
	/// Backend on zone
	/// </summary>
	public class CdnwebsiteBackend {
		
		private string Ipv4_bfield;
		
		private string Status_bfield;
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;ipv4&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("ipv4")]
		public string Ipv4 {
			get {
				return this.Ipv4_bfield;
			}
			set {
				this.Ipv4_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;cdn.website.BackendStatusEnum&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("status")]
		public string Status {
			get {
				return this.Status_bfield;
			}
			set {
				this.Status_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Domain on CDN
	/// </summary>
	public class CdnwebsiteDomain {
		
		private string Domain_bfield;
		
		private string Status_bfield;
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("domain")]
		public string Domain {
			get {
				return this.Domain_bfield;
			}
			set {
				this.Domain_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;cdn.website.DomainStatusEnum&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("status")]
		public string Status {
			get {
				return this.Status_bfield;
			}
			set {
				this.Status_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// A structure describing type of a stats hash
	/// </summary>
	public class CdnwebsiteStatsDataType {
		
		private System.DateTime Date_bfield;
		
		private long Value_bfield;
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("date")]
		public System.DateTime Date {
			get {
				return this.Date_bfield;
			}
			set {
				this.Date_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("value")]
		public long Value {
			get {
				return this.Value_bfield;
			}
			set {
				this.Value_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Task on CDN
	/// </summary>
	public class CdnwebsiteTask {
		
		private string Comment_bfield;
		
		private string Function_bfield;
		
		private string Status_bfield;
		
		private long TaskId_bfield;
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("comment")]
		public string Comment {
			get {
				return this.Comment_bfield;
			}
			set {
				this.Comment_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;cdn.website.TaskFunctionEnum&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("function")]
		public string Function {
			get {
				return this.Function_bfield;
			}
			set {
				this.Function_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;cdn.website.TaskStateEnum&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("status")]
		public string Status {
			get {
				return this.Status_bfield;
			}
			set {
				this.Status_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("taskId")]
		public long TaskId {
			get {
				return this.TaskId_bfield;
			}
			set {
				this.TaskId_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Website CDN
	/// </summary>
	public class CdnwebsiteWebsite {
		
		private string Anycast_bfield;
		
		private string Offer_bfield;
		
		private string Service_bfield;
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;ipv4&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("anycast")]
		public string Anycast {
			get {
				return this.Anycast_bfield;
			}
			set {
				this.Anycast_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("offer")]
		public string Offer {
			get {
				return this.Offer_bfield;
			}
			set {
				this.Offer_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("service")]
		public string Service {
			get {
				return this.Service_bfield;
			}
			set {
				this.Service_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Zone on CDN
	/// </summary>
	public class CdnwebsiteZone {
		
		private string Status_bfield;
		
		private string Zone_bfield;
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;cdn.website.DomainZoneStatusEnum&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("status")]
		public string Status {
			get {
				return this.Status_bfield;
			}
			set {
				this.Status_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("zone")]
		public string Zone {
			get {
				return this.Zone_bfield;
			}
			set {
				this.Zone_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Map a possible renew for a specific service
	/// </summary>
	public class ServiceRenewType {
		
		private bool Automatic_bfield;
		
		private bool DeleteAtExpiration_bfield;
		
		private bool Forced_bfield;
		
		private System.Nullable<bool> ManualPayment_bfield;
		
		private System.Nullable<long> Period_bfield;
		
		/// <summary>
		/// The service is automatically renewed
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;The service is automatically renewed&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("automatic")]
		public bool Automatic {
			get {
				return this.Automatic_bfield;
			}
			set {
				this.Automatic_bfield = value;
			}
		}
		
		/// <summary>
		/// The service will be deleted at expiration
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;The service will be deleted at expiration&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("deleteAtExpiration")]
		public bool DeleteAtExpiration {
			get {
				return this.DeleteAtExpiration_bfield;
			}
			set {
				this.DeleteAtExpiration_bfield = value;
			}
		}
		
		/// <summary>
		/// The service forced to be renewed
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;The service forced to be renewed&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("forced")]
		public bool Forced {
			get {
				return this.Forced_bfield;
			}
			set {
				this.Forced_bfield = value;
			}
		}
		
		/// <summary>
		/// The service needs to be manually renewed and paid
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;The service needs to be manually renewed and paid&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("manualPayment")]
		public System.Nullable<bool> ManualPayment {
			get {
				return this.ManualPayment_bfield;
			}
			set {
				this.ManualPayment_bfield = value;
			}
		}
		
		/// <summary>
		/// period of renew in month
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;period of renew in month&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("period")]
		public System.Nullable<long> Period {
			get {
				return this.Period_bfield;
			}
			set {
				this.Period_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Details about a Service
	/// </summary>
	public class ServicesService {
		
		private bool CanDeleteAtExpiration_bfield;
		
		private string ContactAdmin_bfield;
		
		private string ContactBilling_bfield;
		
		private string ContactTech_bfield;
		
		private string Creation_bfield;
		
		private string Domain_bfield;
		
		private string EngagedUpTo_bfield;
		
		private string Expiration_bfield;
		
		private long[] PossibleRenewPeriod_bfield;
		
		private ServiceRenewType Renew_bfield;
		
		private string RenewalType_bfield;
		
		private long ServiceId_bfield;
		
		private string Status_bfield;
		
		/// <summary>
		/// Indicates that the service can be set up to be deleted at expiration
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Indicates that the service can be set up to be deleted at expiration&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("canDeleteAtExpiration")]
		public bool CanDeleteAtExpiration {
			get {
				return this.CanDeleteAtExpiration_bfield;
			}
			set {
				this.CanDeleteAtExpiration_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("contactAdmin")]
		public string ContactAdmin {
			get {
				return this.ContactAdmin_bfield;
			}
			set {
				this.ContactAdmin_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("contactBilling")]
		public string ContactBilling {
			get {
				return this.ContactBilling_bfield;
			}
			set {
				this.ContactBilling_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("contactTech")]
		public string ContactTech {
			get {
				return this.ContactTech_bfield;
			}
			set {
				this.ContactTech_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;date&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("creation")]
		public string Creation {
			get {
				return this.Creation_bfield;
			}
			set {
				this.Creation_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("domain")]
		public string Domain {
			get {
				return this.Domain_bfield;
			}
			set {
				this.Domain_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;date&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("engagedUpTo")]
		public string EngagedUpTo {
			get {
				return this.EngagedUpTo_bfield;
			}
			set {
				this.EngagedUpTo_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;date&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("expiration")]
		public string Expiration {
			get {
				return this.Expiration_bfield;
			}
			set {
				this.Expiration_bfield = value;
			}
		}
		
		/// <summary>
		/// All the possible renew period of your service in month
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long[]&quot;,&quot;Description&quot;:&quot;All the possible renew period of your service in month&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("possibleRenewPeriod")]
		public long[] PossibleRenewPeriod {
			get {
				return this.PossibleRenewPeriod_bfield;
			}
			set {
				this.PossibleRenewPeriod_bfield = value;
			}
		}
		
		/// <summary>
		/// Way of handling the renew
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;service.RenewType&quot;,&quot;Description&quot;:&quot;Way of handling the renew&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("renew")]
		public ServiceRenewType Renew {
			get {
				return this.Renew_bfield;
			}
			set {
				this.Renew_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;service.RenewalTypeEnum&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("renewalType")]
		public string RenewalType {
			get {
				return this.RenewalType_bfield;
			}
			set {
				this.RenewalType_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("serviceId")]
		public long ServiceId {
			get {
				return this.ServiceId_bfield;
			}
			set {
				this.ServiceId_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;service.StateEnum&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("status")]
		public string Status {
			get {
				return this.Status_bfield;
			}
			set {
				this.Status_bfield = value;
			}
		}
	}
}
