//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Newtonsoft.Json;
using Nglib.VENDORS.OVH.SHARED;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Threading.Tasks;


// [GET] "/horizonView"  string[]--
//[GET] "/horizonView/{serviceName}"  horizonView.Datacenter--serviceName
//[GET] "/horizonView/{serviceName}/accessPoint"  long[]--serviceName
//[POST] "/horizonView/{serviceName}/accessPoint"  horizonView.Task[]--poolType,privateBlock,privateVlan,serviceName,vrouterPoolPublicIp
//[DELETE] "/horizonView/{serviceName}/accessPoint/{accessPointId}"  horizonView.Task[]--accessPointId,serviceName
//[GET] "/horizonView/{serviceName}/accessPoint/{accessPointId}"  horizonView.Pool--accessPointId,serviceName
//[POST] "/horizonView/{serviceName}/accessPoint/{accessPointId}/changeSessionTimeout"  horizonView.Task--accessPointId,expiration,onSingleAP,serviceName
//[GET] "/horizonView/{serviceName}/accessPoint/{accessPointId}/customerNetwork"  long[]--accessPointId,serviceName
//[POST] "/horizonView/{serviceName}/accessPoint/{accessPointId}/customerNetwork"  horizonView.Task[]--accessPointId,network,serviceName
//[DELETE] "/horizonView/{serviceName}/accessPoint/{accessPointId}/customerNetwork/{customerNetworkId}"  horizonView.Task[]--accessPointId,customerNetworkId,serviceName
//[GET] "/horizonView/{serviceName}/accessPoint/{accessPointId}/customerNetwork/{customerNetworkId}"  horizonView.CustomerNetworkPool--accessPointId,customerNetworkId,serviceName
//[POST] "/horizonView/{serviceName}/accessPoint/{accessPointId}/disableTwoFA"  horizonView.Task--accessPointId,serviceName
//[POST] "/horizonView/{serviceName}/accessPoint/{accessPointId}/disableWindowsUsernameOption"  horizonView.Task--accessPointId,onSingleAP,serviceName
//[POST] "/horizonView/{serviceName}/accessPoint/{accessPointId}/enableTwoFA"  horizonView.Task--accessPointId,onSingleAP,radiusIp,secret,serviceName
//[POST] "/horizonView/{serviceName}/accessPoint/{accessPointId}/enableWindowsUsernameOption"  horizonView.Task--accessPointId,onSingleAP,serviceName
//[POST] "/horizonView/{serviceName}/confirmTermination"  string--commentary,futureUse,reason,serviceName,token
//[GET] "/horizonView/{serviceName}/customerNetwork"  long[]--serviceName
//[POST] "/horizonView/{serviceName}/customerNetwork"  horizonView.Task[]--name,network,serviceName
//[DELETE] "/horizonView/{serviceName}/customerNetwork/{customerNetworkId}"  horizonView.Task[]--customerNetworkId,serviceName
//[GET] "/horizonView/{serviceName}/customerNetwork/{customerNetworkId}"  horizonView.CustomerNetwork--customerNetworkId,serviceName
//[GET] "/horizonView/{serviceName}/dedicatedHorizon"  horizonView.DedicatedHorizon--serviceName
//[GET] "/horizonView/{serviceName}/dedicatedHorizon/customerUser"  string[]--serviceName
//[POST] "/horizonView/{serviceName}/dedicatedHorizon/customerUser"  horizonView.Task[]--email,password,serviceName,username
//[DELETE] "/horizonView/{serviceName}/dedicatedHorizon/customerUser/{username}"  horizonView.Task[]--serviceName,username
//[GET] "/horizonView/{serviceName}/dedicatedHorizon/customerUser/{username}"  horizonView.CustomerUser--serviceName,username
//[POST] "/horizonView/{serviceName}/dedicatedHorizon/customerUser/{username}/changePassword"  horizonView.Task--password,serviceName,username
//[POST] "/horizonView/{serviceName}/dedicatedHorizon/disableStorageAccelerator"  horizonView.Task--serviceName
//[POST] "/horizonView/{serviceName}/dedicatedHorizon/enableStorageAccelerator"  horizonView.Task--serviceName
//[GET] "/horizonView/{serviceName}/dedicatedHorizon/task"  long[]--serviceName,state
//[GET] "/horizonView/{serviceName}/dedicatedHorizon/task/{taskId}"  horizonView.Task--serviceName,taskId
//[GET] "/horizonView/{serviceName}/dedicatedHorizon/user"  horizonView.User--serviceName
//[POST] "/horizonView/{serviceName}/dedicatedHorizon/user/changePassword"  horizonView.Task--password,serviceName
//[POST] "/horizonView/{serviceName}/dedicatedHorizon/user/changeProperties"  horizonView.Task--email,serviceName
//[GET] "/horizonView/{serviceName}/domainTrust"  long[]--serviceName
//[POST] "/horizonView/{serviceName}/domainTrust"  horizonView.Task[]--activeDirectoryIP,dns1,dns2,domain,serviceName
//[GET] "/horizonView/{serviceName}/domainTrust/{domainTrustId}"  horizonView.DomainTrust--domainTrustId,serviceName
//[POST] "/horizonView/{serviceName}/domainTrust/{domainTrustId}/addChildDomain"  horizonView.Task--activeDirectoryIP,domain,domainTrustId,passphrase,serviceAccountPassword,serviceName
//[POST] "/horizonView/{serviceName}/domainTrust/{domainTrustId}/addDomainController"  horizonView.Task--domain,domainControllerIp,domainTrustId,serviceName
//[POST] "/horizonView/{serviceName}/domainTrust/{domainTrustId}/addDomainUserOnComposer"  horizonView.Task--domain,domainTrustId,password,serviceName,username
//[POST] "/horizonView/{serviceName}/domainTrust/{domainTrustId}/createTrust"  horizonView.Task--domainTrustId,passphrase,serviceAccountPassword,serviceName
//[GET] "/horizonView/{serviceName}/serviceInfos"  services.Service--serviceName
//[PUT] "/horizonView/{serviceName}/serviceInfos"  void--,serviceName
//[POST] "/horizonView/{serviceName}/terminate"  string--serviceName
namespace Nglib.VENDORS.OVH.HORIZONVIEW {
	
	
	/// <summary>
	/// Access Point type the customer can deploy
	/// </summary>
	public enum HorizonViewAccessPointTypeEnum {
		
		[EnumMember(Value="privateAccessPoint")]
		PrivateAccessPoint,
		
		[EnumMember(Value="publicAccessPoint")]
		PublicAccessPoint,
	}
	
	/// <summary>
	/// All states a dedicated horizon  can be in
	/// </summary>
	public enum HorizonViewStateEnum {
		
		[EnumMember(Value="available")]
		Available,
		
		[EnumMember(Value="creating")]
		Creating,
		
		[EnumMember(Value="delivered")]
		Delivered,
		
		[EnumMember(Value="disabled")]
		Disabled,
		
		[EnumMember(Value="error")]
		Error,
		
		[EnumMember(Value="reserved")]
		Reserved,
	}
	
	/// <summary>
	/// All states a Horizon View  Task can be in
	/// </summary>
	public enum HorizonViewTaskStateEnum {
		
		[EnumMember(Value="canceled")]
		Canceled,
		
		[EnumMember(Value="doing")]
		Doing,
		
		[EnumMember(Value="done")]
		Done,
		
		[EnumMember(Value="error")]
		Error,
		
		[EnumMember(Value="fixing")]
		Fixing,
		
		[EnumMember(Value="toCancel")]
		ToCancel,
		
		[EnumMember(Value="toCreate")]
		ToCreate,
		
		[EnumMember(Value="todo")]
		Todo,
		
		[EnumMember(Value="unknown")]
		Unknown,
		
		[EnumMember(Value="waitingForChilds")]
		WaitingForChilds,
		
		[EnumMember(Value="waitingTodo")]
		WaitingTodo,
	}
	
	/// <summary>
	/// Detailed renewal type of a service
	/// </summary>
	public enum ServiceRenewalTypeEnum {
		
		[EnumMember(Value="automaticForcedProduct")]
		AutomaticForcedProduct,
		
		[EnumMember(Value="automaticV2012")]
		AutomaticV2012,
		
		[EnumMember(Value="automaticV2014")]
		AutomaticV2014,
		
		[EnumMember(Value="automaticV2016")]
		AutomaticV2016,
		
		[EnumMember(Value="manual")]
		Manual,
		
		[EnumMember(Value="oneShot")]
		OneShot,
		
		[EnumMember(Value="option")]
		Option,
	}
	
	public enum ServiceStateEnum {
		
		[EnumMember(Value="expired")]
		Expired,
		
		[EnumMember(Value="inCreation")]
		InCreation,
		
		[EnumMember(Value="ok")]
		Ok,
		
		[EnumMember(Value="pendingDebt")]
		PendingDebt,
		
		[EnumMember(Value="unPaid")]
		UnPaid,
	}
	
	/// <summary>
	/// All future uses you can provide for a service termination
	/// </summary>
	public enum ServiceTerminationFutureUseEnum {
		
		[EnumMember(Value="NOT_REPLACING_SERVICE")]
		NOT_REPLACING_SERVICE,
		
		[EnumMember(Value="OTHER")]
		OTHER,
		
		[EnumMember(Value="SUBSCRIBE_AN_OTHER_SERVICE")]
		SUBSCRIBE_AN_OTHER_SERVICE,
		
		[EnumMember(Value="SUBSCRIBE_OTHER_KIND_OF_SERVICE_WITH_COMPETITOR")]
		SUBSCRIBE_OTHER_KIND_OF_SERVICE_WITH_COMPETITOR,
		
		[EnumMember(Value="SUBSCRIBE_SIMILAR_SERVICE_WITH_COMPETITOR")]
		SUBSCRIBE_SIMILAR_SERVICE_WITH_COMPETITOR,
	}
	
	/// <summary>
	/// All reasons you can provide for a service termination
	/// </summary>
	public enum ServiceTerminationReasonEnum {
		
		[EnumMember(Value="FEATURES_DONT_SUIT_ME")]
		FEATURES_DONT_SUIT_ME,
		
		[EnumMember(Value="LACK_OF_PERFORMANCES")]
		LACK_OF_PERFORMANCES,
		
		[EnumMember(Value="MIGRATED_TO_ANOTHER_OVH_PRODUCT")]
		MIGRATED_TO_ANOTHER_OVH_PRODUCT,
		
		[EnumMember(Value="MIGRATED_TO_COMPETITOR")]
		MIGRATED_TO_COMPETITOR,
		
		[EnumMember(Value="NOT_ENOUGH_RECOGNITION")]
		NOT_ENOUGH_RECOGNITION,
		
		[EnumMember(Value="NOT_NEEDED_ANYMORE")]
		NOT_NEEDED_ANYMORE,
		
		[EnumMember(Value="NOT_RELIABLE")]
		NOT_RELIABLE,
		
		[EnumMember(Value="NO_ANSWER")]
		NO_ANSWER,
		
		[EnumMember(Value="OTHER")]
		OTHER,
		
		[EnumMember(Value="PRODUCT_DIMENSION_DONT_SUIT_ME")]
		PRODUCT_DIMENSION_DONT_SUIT_ME,
		
		[EnumMember(Value="PRODUCT_TOOLS_DONT_SUIT_ME")]
		PRODUCT_TOOLS_DONT_SUIT_ME,
		
		[EnumMember(Value="TOO_EXPENSIVE")]
		TOO_EXPENSIVE,
		
		[EnumMember(Value="TOO_HARD_TO_USE")]
		TOO_HARD_TO_USE,
		
		[EnumMember(Value="UNSATIFIED_BY_CUSTOMER_SUPPORT")]
		UNSATIFIED_BY_CUSTOMER_SUPPORT,
	}
	
	/// <summary>
	/// You can reach from your virtual desktops, your customer network 
	/// </summary>
	public class HorizonViewCustomerNetwork {
		
		private long CustomerNetworkId_bfield;
		
		private string Name_bfield;
		
		private string Network_bfield;
		
		/// <summary>
		/// Customer Network id
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Customer Network id&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("customerNetworkId")]
		public long CustomerNetworkId {
			get {
				return this.CustomerNetworkId_bfield;
			}
			set {
				this.CustomerNetworkId_bfield = value;
			}
		}
		
		/// <summary>
		/// Name of your network
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Name of your network&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("name")]
		public string Name {
			get {
				return this.Name_bfield;
			}
			set {
				this.Name_bfield = value;
			}
		}
		
		/// <summary>
		/// Customer network
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Customer network&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("network")]
		public string Network {
			get {
				return this.Network_bfield;
			}
			set {
				this.Network_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// You can reach from your virtual desktops, your customer network 
	/// </summary>
	public class HorizonViewCustomerNetworkPool {
		
		private long CustomerNetworkId_bfield;
		
		private string Name_bfield;
		
		private string Network_bfield;
		
		/// <summary>
		/// Customer Network id
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Customer Network id&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("customerNetworkId")]
		public long CustomerNetworkId {
			get {
				return this.CustomerNetworkId_bfield;
			}
			set {
				this.CustomerNetworkId_bfield = value;
			}
		}
		
		/// <summary>
		/// Name of your network
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Name of your network&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("name")]
		public string Name {
			get {
				return this.Name_bfield;
			}
			set {
				this.Name_bfield = value;
			}
		}
		
		/// <summary>
		/// Customer network
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Customer network&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("network")]
		public string Network {
			get {
				return this.Network_bfield;
			}
			set {
				this.Network_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Horizon As A Service Customer  User
	/// </summary>
	public class HorizonViewCustomerUser {
		
		private string Email_bfield;
		
		private long Id_bfield;
		
		private string Username_bfield;
		
		/// <summary>
		/// Email of your HaaS User
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Email of your HaaS User&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("email")]
		public string Email {
			get {
				return this.Email_bfield;
			}
			set {
				this.Email_bfield = value;
			}
		}
		
		/// <summary>
		/// Customer id
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Customer id&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("id")]
		public long Id {
			get {
				return this.Id_bfield;
			}
			set {
				this.Id_bfield = value;
			}
		}
		
		/// <summary>
		/// Customer username of your HaaS User
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Customer username of your HaaS User&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("username")]
		public string Username {
			get {
				return this.Username_bfield;
			}
			set {
				this.Username_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Cloud Desktop Infrastructure Datacenter
	/// </summary>
	public class HorizonViewDatacenter {
		
		private string ActiveDirectoryIP_bfield;
		
		private string AdminDomain_bfield;
		
		private string AdminNetworkNextHop_bfield;
		
		private string AdminPrivateNetwork_bfield;
		
		private string CustomerIntercoIP_bfield;
		
		private string CustomerIntercoMask_bfield;
		
		private long CustomerIntercoVlanId_bfield;
		
		private long DatacenterId_bfield;
		
		private string Name_bfield;
		
		private string ServiceName_bfield;
		
		/// <summary>
		/// IP of the VDI Active Directory
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;ip&quot;,&quot;Description&quot;:&quot;IP of the VDI Active Directory&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("activeDirectoryIP")]
		public string ActiveDirectoryIP {
			get {
				return this.ActiveDirectoryIP_bfield;
			}
			set {
				this.ActiveDirectoryIP_bfield = value;
			}
		}
		
		/// <summary>
		/// Domain of the admin infrastructure
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Domain of the admin infrastructure&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("adminDomain")]
		public string AdminDomain {
			get {
				return this.AdminDomain_bfield;
			}
			set {
				this.AdminDomain_bfield = value;
			}
		}
		
		/// <summary>
		/// Next hop to contact the private admin network
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Next hop to contact the private admin network&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("adminNetworkNextHop")]
		public string AdminNetworkNextHop {
			get {
				return this.AdminNetworkNextHop_bfield;
			}
			set {
				this.AdminNetworkNextHop_bfield = value;
			}
		}
		
		/// <summary>
		/// Private network of the admin infrastructure
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;ipBlock&quot;,&quot;Description&quot;:&quot;Private network of the admin infrastructure&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("adminPrivateNetwork")]
		public string AdminPrivateNetwork {
			get {
				return this.AdminPrivateNetwork_bfield;
			}
			set {
				this.AdminPrivateNetwork_bfield = value;
			}
		}
		
		/// <summary>
		/// Customer interco IP allows you to communicate between your private infrastructure and your CDI infrastructure throw the vrack.
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;ip&quot;,&quot;Description&quot;:&quot;Customer interco IP allows you to communicate between your private infrastructure and your CDI infrastructure throw the vrack.&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("customerIntercoIP")]
		public string CustomerIntercoIP {
			get {
				return this.CustomerIntercoIP_bfield;
			}
			set {
				this.CustomerIntercoIP_bfield = value;
			}
		}
		
		/// <summary>
		/// Customer interco netmask allows you to communicate between your private infrastructure and your CDI infrastructure throw the vrack.
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;ip&quot;,&quot;Description&quot;:&quot;Customer interco netmask allows you to communicate between your private infrastructure and your CDI infrastructure throw the vrack.&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("customerIntercoMask")]
		public string CustomerIntercoMask {
			get {
				return this.CustomerIntercoMask_bfield;
			}
			set {
				this.CustomerIntercoMask_bfield = value;
			}
		}
		
		/// <summary>
		/// Customer interco vlan allows you to communicate between your private infrastructure and your CDI infrastructure throw the vrack.
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Customer interco vlan allows you to communicate between your private infrastructure and your CDI infrastructure throw the vrack.&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("customerIntercoVlanId")]
		public long CustomerIntercoVlanId {
			get {
				return this.CustomerIntercoVlanId_bfield;
			}
			set {
				this.CustomerIntercoVlanId_bfield = value;
			}
		}
		
		/// <summary>
		/// Datacenter ids
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Datacenter ids&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("datacenterId")]
		public long DatacenterId {
			get {
				return this.DatacenterId_bfield;
			}
			set {
				this.DatacenterId_bfield = value;
			}
		}
		
		/// <summary>
		/// Name of the datacenter
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Name of the datacenter&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("name")]
		public string Name {
			get {
				return this.Name_bfield;
			}
			set {
				this.Name_bfield = value;
			}
		}
		
		/// <summary>
		/// Domain of your Horizon
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Domain of your Horizon&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("serviceName")]
		public string ServiceName {
			get {
				return this.ServiceName_bfield;
			}
			set {
				this.ServiceName_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Horizon View as a Service
	/// </summary>
	public class HorizonViewDedicatedHorizon {
		
		private HorizonViewZone MasterZone_bfield;
		
		private string PrivateCloudName_bfield;
		
		private HorizonViewZone PrivateCloudZone_bfield;
		
		private string PublicUrl_bfield;
		
		private string State_bfield;
		
		private bool StorageAccelerator_bfield;
		
		private string Version_bfield;
		
		/// <summary>
		/// The location of your administration servers in our datacenter
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;horizonView.Zone&quot;,&quot;Description&quot;:&quot;The location of your administration servers in our datacenter&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("masterZone")]
		public HorizonViewZone MasterZone {
			get {
				return this.MasterZone_bfield;
			}
			set {
				this.MasterZone_bfield = value;
			}
		}
		
		/// <summary>
		/// Your Horizon Dedicated Cloud 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Your Horizon Dedicated Cloud &quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("privateCloudName")]
		public string PrivateCloudName {
			get {
				return this.PrivateCloudName_bfield;
			}
			set {
				this.PrivateCloudName_bfield = value;
			}
		}
		
		/// <summary>
		/// The location of your datacenter
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;horizonView.Zone&quot;,&quot;Description&quot;:&quot;The location of your datacenter&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("privateCloudZone")]
		public HorizonViewZone PrivateCloudZone {
			get {
				return this.PrivateCloudZone_bfield;
			}
			set {
				this.PrivateCloudZone_bfield = value;
			}
		}
		
		/// <summary>
		/// Url of your Dedicated Horizon
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Url of your Dedicated Horizon&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("publicUrl")]
		public string PublicUrl {
			get {
				return this.PublicUrl_bfield;
			}
			set {
				this.PublicUrl_bfield = value;
			}
		}
		
		/// <summary>
		/// Current state of your Dedicated Horizon
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;horizonView.StateEnum&quot;,&quot;Description&quot;:&quot;Current state of your Dedicated Horizon&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("state")]
		public string State {
			get {
				return this.State_bfield;
			}
			set {
				this.State_bfield = value;
			}
		}
		
		/// <summary>
		/// View Storage Accelerator for Vcenter
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;View Storage Accelerator for Vcenter&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("storageAccelerator")]
		public bool StorageAccelerator {
			get {
				return this.StorageAccelerator_bfield;
			}
			set {
				this.StorageAccelerator_bfield = value;
			}
		}
		
		/// <summary>
		/// Version of your Dedicated Horizon
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Version of your Dedicated Horizon&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("version")]
		public string Version {
			get {
				return this.Version_bfield;
			}
			set {
				this.Version_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// List all Active Directories linked to your CDI Active Directory
	/// </summary>
	public class HorizonViewDomainTrust {
		
		private string ActiveDirectoryIP_bfield;
		
		private string Dns1_bfield;
		
		private string Dns2_bfield;
		
		private string Domain_bfield;
		
		private long DomainTrustId_bfield;
		
		/// <summary>
		/// IP of your Active Directory
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;ip&quot;,&quot;Description&quot;:&quot;IP of your Active Directory&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("activeDirectoryIP")]
		public string ActiveDirectoryIP {
			get {
				return this.ActiveDirectoryIP_bfield;
			}
			set {
				this.ActiveDirectoryIP_bfield = value;
			}
		}
		
		/// <summary>
		/// IP of your first DNS
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;ip&quot;,&quot;Description&quot;:&quot;IP of your first DNS&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("dns1")]
		public string Dns1 {
			get {
				return this.Dns1_bfield;
			}
			set {
				this.Dns1_bfield = value;
			}
		}
		
		/// <summary>
		/// IP of your second DNS
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;ip&quot;,&quot;Description&quot;:&quot;IP of your second DNS&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("dns2")]
		public string Dns2 {
			get {
				return this.Dns2_bfield;
			}
			set {
				this.Dns2_bfield = value;
			}
		}
		
		/// <summary>
		/// Name of your private domain
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Name of your private domain&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("domain")]
		public string Domain {
			get {
				return this.Domain_bfield;
			}
			set {
				this.Domain_bfield = value;
			}
		}
		
		/// <summary>
		/// Domain trust id
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Domain trust id&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("domainTrustId")]
		public long DomainTrustId {
			get {
				return this.DomainTrustId_bfield;
			}
			set {
				this.DomainTrustId_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// All informations about access point
	/// </summary>
	public class HorizonViewPool {
		
		private long AccessPointId_bfield;
		
		private string DhcpNetmask_bfield;
		
		private string DhcpNetwork_bfield;
		
		private string ExternalUrl_bfield;
		
		private string IntercoNextHop_bfield;
		
		private string IntercoPrivateNextHop_bfield;
		
		private string PortGroupId_bfield;
		
		private string State_bfield;
		
		private bool TwoFA_bfield;
		
		private HorizonViewPoolType Type_bfield;
		
		/// <summary>
		/// Pool id
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Pool id&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("accessPointId")]
		public long AccessPointId {
			get {
				return this.AccessPointId_bfield;
			}
			set {
				this.AccessPointId_bfield = value;
			}
		}
		
		/// <summary>
		/// DHCP netmask in this port group
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;ip&quot;,&quot;Description&quot;:&quot;DHCP netmask in this port group&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("dhcpNetmask")]
		public string DhcpNetmask {
			get {
				return this.DhcpNetmask_bfield;
			}
			set {
				this.DhcpNetmask_bfield = value;
			}
		}
		
		/// <summary>
		/// DHCP network in this port group
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;ip&quot;,&quot;Description&quot;:&quot;DHCP network in this port group&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("dhcpNetwork")]
		public string DhcpNetwork {
			get {
				return this.DhcpNetwork_bfield;
			}
			set {
				this.DhcpNetwork_bfield = value;
			}
		}
		
		/// <summary>
		/// External url of your access point
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;External url of your access point&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("externalUrl")]
		public string ExternalUrl {
			get {
				return this.ExternalUrl_bfield;
			}
			set {
				this.ExternalUrl_bfield = value;
			}
		}
		
		/// <summary>
		/// Next hop IP to reach virtual desktops network for public Access Point
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;ip&quot;,&quot;Description&quot;:&quot;Next hop IP to reach virtual desktops network for public Access Point&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("intercoNextHop")]
		public string IntercoNextHop {
			get {
				return this.IntercoNextHop_bfield;
			}
			set {
				this.IntercoNextHop_bfield = value;
			}
		}
		
		/// <summary>
		/// Next hop IP to reach virtual desktops network for private Access Point
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;ip&quot;,&quot;Description&quot;:&quot;Next hop IP to reach virtual desktops network for private Access Point&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("intercoPrivateNextHop")]
		public string IntercoPrivateNextHop {
			get {
				return this.IntercoPrivateNextHop_bfield;
			}
			set {
				this.IntercoPrivateNextHop_bfield = value;
			}
		}
		
		/// <summary>
		/// Port group id
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Port group id&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("portGroupId")]
		public string PortGroupId {
			get {
				return this.PortGroupId_bfield;
			}
			set {
				this.PortGroupId_bfield = value;
			}
		}
		
		/// <summary>
		/// Network state
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;horizonView.StateEnum&quot;,&quot;Description&quot;:&quot;Network state&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("state")]
		public string State {
			get {
				return this.State_bfield;
			}
			set {
				this.State_bfield = value;
			}
		}
		
		/// <summary>
		/// Two factor authentication
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Two factor authentication&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("twoFA")]
		public bool TwoFA {
			get {
				return this.TwoFA_bfield;
			}
			set {
				this.TwoFA_bfield = value;
			}
		}
		
		/// <summary>
		/// Pool type
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;horizonView.PoolType&quot;,&quot;Description&quot;:&quot;Pool type&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("type")]
		public HorizonViewPoolType Type {
			get {
				return this.Type_bfield;
			}
			set {
				this.Type_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Pool type the customer can deploy
	/// </summary>
	public class HorizonViewPoolType {
	}
	
	/// <summary>
	/// Operation on a Horizon View component
	/// </summary>
	public class HorizonViewTask {
		
		private string Description_bfield;
		
		private System.Nullable<System.DateTime> LastModificationDate_bfield;
		
		private string Name_bfield;
		
		private long Progress_bfield;
		
		private string State_bfield;
		
		private long TaskId_bfield;
		
		/// <summary>
		/// Current progress description
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Current progress description&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("description")]
		public string Description {
			get {
				return this.Description_bfield;
			}
			set {
				this.Description_bfield = value;
			}
		}
		
		/// <summary>
		/// Task last modification date
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Task last modification date&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("lastModificationDate")]
		public System.Nullable<System.DateTime> LastModificationDate {
			get {
				return this.LastModificationDate_bfield;
			}
			set {
				this.LastModificationDate_bfield = value;
			}
		}
		
		/// <summary>
		/// Task name
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Task name&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("name")]
		public string Name {
			get {
				return this.Name_bfield;
			}
			set {
				this.Name_bfield = value;
			}
		}
		
		/// <summary>
		/// Current progress
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Current progress&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("progress")]
		public long Progress {
			get {
				return this.Progress_bfield;
			}
			set {
				this.Progress_bfield = value;
			}
		}
		
		/// <summary>
		/// Current Task state
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;horizonView.TaskStateEnum&quot;,&quot;Description&quot;:&quot;Current Task state&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("state")]
		public string State {
			get {
				return this.State_bfield;
			}
			set {
				this.State_bfield = value;
			}
		}
		
		/// <summary>
		/// Task id
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Task id&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("taskId")]
		public long TaskId {
			get {
				return this.TaskId_bfield;
			}
			set {
				this.TaskId_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Horizon As A Service User
	/// </summary>
	public class HorizonViewUser {
		
		private string Username_bfield;
		
		/// <summary>
		/// Username of your HaaS User
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Username of your HaaS User&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("username")]
		public string Username {
			get {
				return this.Username_bfield;
			}
			set {
				this.Username_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// All zones a Cloud Desktop Infrastructure can be in
	/// </summary>
	public class HorizonViewZone {
	}
	
	/// <summary>
	/// Map a possible renew for a specific service
	/// </summary>
	public class ServiceRenewType {
		
		private bool Automatic_bfield;
		
		private bool DeleteAtExpiration_bfield;
		
		private bool Forced_bfield;
		
		private System.Nullable<bool> ManualPayment_bfield;
		
		private System.Nullable<long> Period_bfield;
		
		/// <summary>
		/// The service is automatically renewed
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;The service is automatically renewed&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("automatic")]
		public bool Automatic {
			get {
				return this.Automatic_bfield;
			}
			set {
				this.Automatic_bfield = value;
			}
		}
		
		/// <summary>
		/// The service will be deleted at expiration
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;The service will be deleted at expiration&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("deleteAtExpiration")]
		public bool DeleteAtExpiration {
			get {
				return this.DeleteAtExpiration_bfield;
			}
			set {
				this.DeleteAtExpiration_bfield = value;
			}
		}
		
		/// <summary>
		/// The service forced to be renewed
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;The service forced to be renewed&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("forced")]
		public bool Forced {
			get {
				return this.Forced_bfield;
			}
			set {
				this.Forced_bfield = value;
			}
		}
		
		/// <summary>
		/// The service needs to be manually renewed and paid
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;The service needs to be manually renewed and paid&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("manualPayment")]
		public System.Nullable<bool> ManualPayment {
			get {
				return this.ManualPayment_bfield;
			}
			set {
				this.ManualPayment_bfield = value;
			}
		}
		
		/// <summary>
		/// period of renew in month
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;period of renew in month&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("period")]
		public System.Nullable<long> Period {
			get {
				return this.Period_bfield;
			}
			set {
				this.Period_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Details about a Service
	/// </summary>
	public class ServicesService {
		
		private bool CanDeleteAtExpiration_bfield;
		
		private string ContactAdmin_bfield;
		
		private string ContactBilling_bfield;
		
		private string ContactTech_bfield;
		
		private string Creation_bfield;
		
		private string Domain_bfield;
		
		private string EngagedUpTo_bfield;
		
		private string Expiration_bfield;
		
		private long[] PossibleRenewPeriod_bfield;
		
		private ServiceRenewType Renew_bfield;
		
		private string RenewalType_bfield;
		
		private long ServiceId_bfield;
		
		private string Status_bfield;
		
		/// <summary>
		/// Indicates that the service can be set up to be deleted at expiration
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Indicates that the service can be set up to be deleted at expiration&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("canDeleteAtExpiration")]
		public bool CanDeleteAtExpiration {
			get {
				return this.CanDeleteAtExpiration_bfield;
			}
			set {
				this.CanDeleteAtExpiration_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("contactAdmin")]
		public string ContactAdmin {
			get {
				return this.ContactAdmin_bfield;
			}
			set {
				this.ContactAdmin_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("contactBilling")]
		public string ContactBilling {
			get {
				return this.ContactBilling_bfield;
			}
			set {
				this.ContactBilling_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("contactTech")]
		public string ContactTech {
			get {
				return this.ContactTech_bfield;
			}
			set {
				this.ContactTech_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;date&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("creation")]
		public string Creation {
			get {
				return this.Creation_bfield;
			}
			set {
				this.Creation_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("domain")]
		public string Domain {
			get {
				return this.Domain_bfield;
			}
			set {
				this.Domain_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;date&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("engagedUpTo")]
		public string EngagedUpTo {
			get {
				return this.EngagedUpTo_bfield;
			}
			set {
				this.EngagedUpTo_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;date&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("expiration")]
		public string Expiration {
			get {
				return this.Expiration_bfield;
			}
			set {
				this.Expiration_bfield = value;
			}
		}
		
		/// <summary>
		/// All the possible renew period of your service in month
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long[]&quot;,&quot;Description&quot;:&quot;All the possible renew period of your service in month&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("possibleRenewPeriod")]
		public long[] PossibleRenewPeriod {
			get {
				return this.PossibleRenewPeriod_bfield;
			}
			set {
				this.PossibleRenewPeriod_bfield = value;
			}
		}
		
		/// <summary>
		/// Way of handling the renew
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;service.RenewType&quot;,&quot;Description&quot;:&quot;Way of handling the renew&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("renew")]
		public ServiceRenewType Renew {
			get {
				return this.Renew_bfield;
			}
			set {
				this.Renew_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;service.RenewalTypeEnum&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("renewalType")]
		public string RenewalType {
			get {
				return this.RenewalType_bfield;
			}
			set {
				this.RenewalType_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("serviceId")]
		public long ServiceId {
			get {
				return this.ServiceId_bfield;
			}
			set {
				this.ServiceId_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;service.StateEnum&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("status")]
		public string Status {
			get {
				return this.Status_bfield;
			}
			set {
				this.Status_bfield = value;
			}
		}
	}
}
