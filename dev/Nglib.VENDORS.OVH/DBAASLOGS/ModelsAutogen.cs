//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Newtonsoft.Json;
using Nglib.VENDORS.OVH.SHARED;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Threading.Tasks;


// [GET] "/dbaas/logs"  string[]--
//[GET] "/dbaas/logs/input/engine"  uuid[]--
//[GET] "/dbaas/logs/input/engine/{engineId}"  dbaas.logs.Engine--engineId
//[GET] "/dbaas/logs/input/engine/{engineId}/helper"  uuid[]--engineId
//[GET] "/dbaas/logs/input/engine/{engineId}/helper/{helperId}"  dbaas.logs.Helper--engineId,helperId
//[GET] "/dbaas/logs/{serviceName}"  dbaas.logs.Service--serviceName
//[PUT] "/dbaas/logs/{serviceName}"  dbaas.logs.Operation--,serviceName
//[POST] "/dbaas/logs/{serviceName}/changeContact"  long[]--contactAdmin,contactBilling,contactTech,serviceName
//[GET] "/dbaas/logs/{serviceName}/cluster"  uuid[]--serviceName
//[GET] "/dbaas/logs/{serviceName}/cluster/{clusterId}"  dbaas.logs.Cluster--clusterId,serviceName
//[PUT] "/dbaas/logs/{serviceName}/cluster/{clusterId}"  dbaas.logs.Operation--,clusterId,serviceName
//[GET] "/dbaas/logs/{serviceName}/cluster/{clusterId}/retention"  uuid[]--clusterId,serviceName
//[GET] "/dbaas/logs/{serviceName}/cluster/{clusterId}/retention/{retentionId}"  dbaas.logs.ClusterRetention--clusterId,retentionId,serviceName
//[GET] "/dbaas/logs/{serviceName}/input"  uuid[]--serviceName
//[POST] "/dbaas/logs/{serviceName}/input"  dbaas.logs.Operation--,serviceName
//[DELETE] "/dbaas/logs/{serviceName}/input/{inputId}"  dbaas.logs.Operation--inputId,serviceName
//[GET] "/dbaas/logs/{serviceName}/input/{inputId}"  dbaas.logs.Input--inputId,serviceName
//[PUT] "/dbaas/logs/{serviceName}/input/{inputId}"  dbaas.logs.Operation--,inputId,serviceName
//[GET] "/dbaas/logs/{serviceName}/input/{inputId}/action"  dbaas.logs.InputAction[]--inputId,serviceName
//[POST] "/dbaas/logs/{serviceName}/input/{inputId}/configtest"  dbaas.logs.Operation--inputId,serviceName
//[GET] "/dbaas/logs/{serviceName}/input/{inputId}/configtest/result"  dbaas.logs.TestResult--inputId,serviceName
//[GET] "/dbaas/logs/{serviceName}/input/{inputId}/configuration/flowgger"  dbaas.logs.FlowggerConfiguration--inputId,serviceName
//[PUT] "/dbaas/logs/{serviceName}/input/{inputId}/configuration/flowgger"  dbaas.logs.Operation--,inputId,serviceName
//[GET] "/dbaas/logs/{serviceName}/input/{inputId}/configuration/logstash"  dbaas.logs.LogstashConfiguration--inputId,serviceName
//[PUT] "/dbaas/logs/{serviceName}/input/{inputId}/configuration/logstash"  dbaas.logs.Operation--,inputId,serviceName
//[POST] "/dbaas/logs/{serviceName}/input/{inputId}/end"  dbaas.logs.Operation--inputId,serviceName
//[POST] "/dbaas/logs/{serviceName}/input/{inputId}/logs/url"  dbaas.logs.TemporaryLogsLink--inputId,serviceName
//[POST] "/dbaas/logs/{serviceName}/input/{inputId}/restart"  dbaas.logs.Operation--inputId,serviceName
//[POST] "/dbaas/logs/{serviceName}/input/{inputId}/start"  dbaas.logs.Operation--inputId,serviceName
//[GET] "/dbaas/logs/{serviceName}/input/{inputId}/url"  dbaas.logs.Url[]--inputId,serviceName
//[GET] "/dbaas/logs/{serviceName}/metrics"  dbaas.logs.ServiceMetric--serviceName
//[GET] "/dbaas/logs/{serviceName}/operation"  uuid[]--serviceName
//[GET] "/dbaas/logs/{serviceName}/operation/{operationId}"  dbaas.logs.Operation--operationId,serviceName
//[GET] "/dbaas/logs/{serviceName}/output/elasticsearch/alias"  uuid[]--serviceName
//[POST] "/dbaas/logs/{serviceName}/output/elasticsearch/alias"  dbaas.logs.Operation--,serviceName
//[DELETE] "/dbaas/logs/{serviceName}/output/elasticsearch/alias/{aliasId}"  dbaas.logs.Operation--aliasId,serviceName
//[GET] "/dbaas/logs/{serviceName}/output/elasticsearch/alias/{aliasId}"  dbaas.logs.Alias--aliasId,serviceName
//[PUT] "/dbaas/logs/{serviceName}/output/elasticsearch/alias/{aliasId}"  dbaas.logs.Operation--,aliasId,serviceName
//[GET] "/dbaas/logs/{serviceName}/output/elasticsearch/alias/{aliasId}/index"  uuid[]--aliasId,serviceName
//[POST] "/dbaas/logs/{serviceName}/output/elasticsearch/alias/{aliasId}/index"  dbaas.logs.Operation--,aliasId,serviceName
//[DELETE] "/dbaas/logs/{serviceName}/output/elasticsearch/alias/{aliasId}/index/{indexId}"  dbaas.logs.Operation--aliasId,indexId,serviceName
//[GET] "/dbaas/logs/{serviceName}/output/elasticsearch/alias/{aliasId}/stream"  uuid[]--aliasId,serviceName
//[POST] "/dbaas/logs/{serviceName}/output/elasticsearch/alias/{aliasId}/stream"  dbaas.logs.Operation--,aliasId,serviceName
//[DELETE] "/dbaas/logs/{serviceName}/output/elasticsearch/alias/{aliasId}/stream/{streamId}"  dbaas.logs.Operation--aliasId,serviceName,streamId
//[GET] "/dbaas/logs/{serviceName}/output/elasticsearch/alias/{aliasId}/url"  dbaas.logs.Url[]--aliasId,serviceName
//[GET] "/dbaas/logs/{serviceName}/output/elasticsearch/index"  uuid[]--serviceName
//[POST] "/dbaas/logs/{serviceName}/output/elasticsearch/index"  dbaas.logs.Operation--,serviceName
//[DELETE] "/dbaas/logs/{serviceName}/output/elasticsearch/index/{indexId}"  dbaas.logs.Operation--indexId,serviceName
//[GET] "/dbaas/logs/{serviceName}/output/elasticsearch/index/{indexId}"  dbaas.logs.Index--indexId,serviceName
//[PUT] "/dbaas/logs/{serviceName}/output/elasticsearch/index/{indexId}"  dbaas.logs.Operation--,indexId,serviceName
//[GET] "/dbaas/logs/{serviceName}/output/elasticsearch/index/{indexId}/url"  dbaas.logs.Url[]--indexId,serviceName
//[GET] "/dbaas/logs/{serviceName}/output/elasticsearch/kibana"  uuid[]--serviceName
//[POST] "/dbaas/logs/{serviceName}/output/elasticsearch/kibana"  dbaas.logs.Operation--,serviceName
//[DELETE] "/dbaas/logs/{serviceName}/output/elasticsearch/kibana/{kibanaId}"  dbaas.logs.Operation--kibanaId,serviceName
//[GET] "/dbaas/logs/{serviceName}/output/elasticsearch/kibana/{kibanaId}"  dbaas.logs.Kibana--kibanaId,serviceName
//[PUT] "/dbaas/logs/{serviceName}/output/elasticsearch/kibana/{kibanaId}"  dbaas.logs.Operation--,kibanaId,serviceName
//[GET] "/dbaas/logs/{serviceName}/output/elasticsearch/kibana/{kibanaId}/url"  dbaas.logs.Url[]--kibanaId,serviceName
//[GET] "/dbaas/logs/{serviceName}/output/graylog/dashboard"  uuid[]--serviceName
//[POST] "/dbaas/logs/{serviceName}/output/graylog/dashboard"  dbaas.logs.Operation--,serviceName
//[DELETE] "/dbaas/logs/{serviceName}/output/graylog/dashboard/{dashboardId}"  dbaas.logs.Operation--dashboardId,serviceName
//[GET] "/dbaas/logs/{serviceName}/output/graylog/dashboard/{dashboardId}"  dbaas.logs.Dashboard--dashboardId,serviceName
//[PUT] "/dbaas/logs/{serviceName}/output/graylog/dashboard/{dashboardId}"  dbaas.logs.Operation--,dashboardId,serviceName
//[POST] "/dbaas/logs/{serviceName}/output/graylog/dashboard/{dashboardId}/duplicate"  dbaas.logs.Operation--,dashboardId,serviceName
//[GET] "/dbaas/logs/{serviceName}/output/graylog/dashboard/{dashboardId}/url"  dbaas.logs.Url[]--dashboardId,serviceName
//[GET] "/dbaas/logs/{serviceName}/output/graylog/stream"  uuid[]--serviceName
//[POST] "/dbaas/logs/{serviceName}/output/graylog/stream"  dbaas.logs.Operation--,serviceName
//[DELETE] "/dbaas/logs/{serviceName}/output/graylog/stream/{streamId}"  dbaas.logs.Operation--serviceName,streamId
//[GET] "/dbaas/logs/{serviceName}/output/graylog/stream/{streamId}"  dbaas.logs.Stream--serviceName,streamId
//[PUT] "/dbaas/logs/{serviceName}/output/graylog/stream/{streamId}"  dbaas.logs.Operation--,serviceName,streamId
//[GET] "/dbaas/logs/{serviceName}/output/graylog/stream/{streamId}/alert"  uuid[]--serviceName,streamId
//[POST] "/dbaas/logs/{serviceName}/output/graylog/stream/{streamId}/alert"  dbaas.logs.Operation--,serviceName,streamId
//[DELETE] "/dbaas/logs/{serviceName}/output/graylog/stream/{streamId}/alert/{alertId}"  dbaas.logs.Operation--alertId,serviceName,streamId
//[GET] "/dbaas/logs/{serviceName}/output/graylog/stream/{streamId}/alert/{alertId}"  dbaas.logs.StreamAlertCondition--alertId,serviceName,streamId
//[PUT] "/dbaas/logs/{serviceName}/output/graylog/stream/{streamId}/alert/{alertId}"  dbaas.logs.Operation--,alertId,serviceName,streamId
//[GET] "/dbaas/logs/{serviceName}/output/graylog/stream/{streamId}/archive"  uuid[]--serviceName,streamId
//[GET] "/dbaas/logs/{serviceName}/output/graylog/stream/{streamId}/archive/{archiveId}"  dbaas.logs.Archive--archiveId,serviceName,streamId
//[POST] "/dbaas/logs/{serviceName}/output/graylog/stream/{streamId}/archive/{archiveId}/url"  dbaas.logs.ArchiveUrl--archiveId,serviceName,streamId
//[GET] "/dbaas/logs/{serviceName}/output/graylog/stream/{streamId}/rule"  uuid[]--serviceName,streamId
//[POST] "/dbaas/logs/{serviceName}/output/graylog/stream/{streamId}/rule"  dbaas.logs.Operation--,serviceName,streamId
//[DELETE] "/dbaas/logs/{serviceName}/output/graylog/stream/{streamId}/rule/{ruleId}"  dbaas.logs.Operation--ruleId,serviceName,streamId
//[GET] "/dbaas/logs/{serviceName}/output/graylog/stream/{streamId}/rule/{ruleId}"  dbaas.logs.StreamRule--ruleId,serviceName,streamId
//[GET] "/dbaas/logs/{serviceName}/output/graylog/stream/{streamId}/url"  dbaas.logs.Url[]--serviceName,streamId
//[GET] "/dbaas/logs/{serviceName}/role"  uuid[]--serviceName
//[POST] "/dbaas/logs/{serviceName}/role"  dbaas.logs.Operation--,serviceName
//[DELETE] "/dbaas/logs/{serviceName}/role/{roleId}"  dbaas.logs.Operation--roleId,serviceName
//[GET] "/dbaas/logs/{serviceName}/role/{roleId}"  dbaas.logs.Role--roleId,serviceName
//[PUT] "/dbaas/logs/{serviceName}/role/{roleId}"  dbaas.logs.Operation--,roleId,serviceName
//[GET] "/dbaas/logs/{serviceName}/role/{roleId}/member"  string[]--roleId,serviceName
//[POST] "/dbaas/logs/{serviceName}/role/{roleId}/member"  dbaas.logs.Operation--,roleId,serviceName
//[DELETE] "/dbaas/logs/{serviceName}/role/{roleId}/member/{username}"  dbaas.logs.Operation--roleId,serviceName,username
//[GET] "/dbaas/logs/{serviceName}/role/{roleId}/member/{username}"  dbaas.logs.Member--roleId,serviceName,username
//[PUT] "/dbaas/logs/{serviceName}/role/{roleId}/member/{username}"  dbaas.logs.Operation--,roleId,serviceName,username
//[GET] "/dbaas/logs/{serviceName}/role/{roleId}/permission"  uuid[]--roleId,serviceName
//[POST] "/dbaas/logs/{serviceName}/role/{roleId}/permission/alias"  dbaas.logs.Operation--,roleId,serviceName
//[POST] "/dbaas/logs/{serviceName}/role/{roleId}/permission/dashboard"  dbaas.logs.Operation--,roleId,serviceName
//[POST] "/dbaas/logs/{serviceName}/role/{roleId}/permission/index"  dbaas.logs.Operation--,roleId,serviceName
//[POST] "/dbaas/logs/{serviceName}/role/{roleId}/permission/kibana"  dbaas.logs.Operation--,roleId,serviceName
//[POST] "/dbaas/logs/{serviceName}/role/{roleId}/permission/stream"  dbaas.logs.Operation--,roleId,serviceName
//[DELETE] "/dbaas/logs/{serviceName}/role/{roleId}/permission/{permissionId}"  dbaas.logs.Operation--permissionId,roleId,serviceName
//[GET] "/dbaas/logs/{serviceName}/role/{roleId}/permission/{permissionId}"  dbaas.logs.Permission--permissionId,roleId,serviceName
//[GET] "/dbaas/logs/{serviceName}/serviceInfos"  services.Service--serviceName
//[PUT] "/dbaas/logs/{serviceName}/serviceInfos"  void--,serviceName
//[GET] "/dbaas/logs/{serviceName}/token"  uuid[]--serviceName
//[POST] "/dbaas/logs/{serviceName}/token"  dbaas.logs.Operation--,serviceName
//[DELETE] "/dbaas/logs/{serviceName}/token/{tokenId}"  dbaas.logs.Operation--serviceName,tokenId
//[GET] "/dbaas/logs/{serviceName}/token/{tokenId}"  dbaas.logs.Token--serviceName,tokenId
//[GET] "/dbaas/logs/{serviceName}/url"  dbaas.logs.Url[]--serviceName
//[POST] "/dbaas/logs/{serviceName}/user/changePassword"  dbaas.logs.Operation--,serviceName
namespace Nglib.VENDORS.OVH.DBAASLOGS {
	
	
	/// <summary>
	/// Possible values for ArchiveRetrievalStateEnum
	/// </summary>
	public enum DbaaslogsArchiveRetrievalStateEnum {
		
		[EnumMember(Value="sealed")]
		Sealed,
		
		[EnumMember(Value="unsealing")]
		Unsealing,
		
		[EnumMember(Value="unsealed")]
		Unsealed,
	}
	
	/// <summary>
	/// Possible values for ClusterClusterTypeEnum
	/// </summary>
	public enum DbaaslogsClusterClusterTypeEnum {
		
		[EnumMember(Value="TRIAL")]
		TRIAL,
		
		[EnumMember(Value="PRO")]
		PRO,
		
		[EnumMember(Value="DEDICATED")]
		DEDICATED,
	}
	
	/// <summary>
	/// Possible values for ClusterRegionEnum
	/// </summary>
	public enum DbaaslogsClusterRegionEnum {
		
		[EnumMember(Value="GRA")]
		GRA,
		
		[EnumMember(Value="RBX")]
		RBX,
		
		[EnumMember(Value="BHS")]
		BHS,
		
		[EnumMember(Value="SBG")]
		SBG,
		
		[EnumMember(Value="P-19")]
		P_19,
	}
	
	/// <summary>
	/// Possible values for DeliveryStatusEnum
	/// </summary>
	public enum DbaaslogsDeliveryStatusEnum {
		
		[EnumMember(Value="DELIVERING")]
		DELIVERING,
		
		[EnumMember(Value="READY")]
		READY,
		
		[EnumMember(Value="DELETING")]
		DELETING,
	}
	
	/// <summary>
	/// Possible values for EngineNameEnum
	/// </summary>
	public enum DbaaslogsEngineNameEnum {
		
		[EnumMember(Value="FLOWGGER")]
		FLOWGGER,
		
		[EnumMember(Value="LOGSTASH")]
		LOGSTASH,
		
		[EnumMember(Value="TEST")]
		TEST,
	}
	
	/// <summary>
	/// Possible values for FlowggerConfigurationLogFormatEnum
	/// </summary>
	public enum DbaaslogsFlowggerConfigurationLogFormatEnum {
		
		[EnumMember(Value="RFC5424")]
		RFC5424,
		
		[EnumMember(Value="LTSV")]
		LTSV,
		
		[EnumMember(Value="GELF")]
		GELF,
		
		[EnumMember(Value="CAPNP")]
		CAPNP,
	}
	
	/// <summary>
	/// Possible values for FlowggerConfigurationLogFramingEnum
	/// </summary>
	public enum DbaaslogsFlowggerConfigurationLogFramingEnum {
		
		[EnumMember(Value="LINE")]
		LINE,
		
		[EnumMember(Value="NUL")]
		NUL,
		
		[EnumMember(Value="SYSLEN")]
		SYSLEN,
		
		[EnumMember(Value="CAPNP")]
		CAPNP,
	}
	
	/// <summary>
	/// Possible values for HelperSectionName
	/// </summary>
	public enum DbaaslogsHelperSectionNameEnum {
		
		[EnumMember(Value="LOGSTASH_INPUT")]
		LOGSTASH_INPUT,
		
		[EnumMember(Value="LOGSTASH_FILTER")]
		LOGSTASH_FILTER,
		
		[EnumMember(Value="LOGSTASH_PATTERN")]
		LOGSTASH_PATTERN,
	}
	
	/// <summary>
	/// Possible values for InputActionTypeEnum
	/// </summary>
	public enum DbaaslogsInputActionTypeEnum {
		
		[EnumMember(Value="END")]
		END,
		
		[EnumMember(Value="LOG")]
		LOG,
		
		[EnumMember(Value="START")]
		START,
		
		[EnumMember(Value="TEST")]
		TEST,
		
		[EnumMember(Value="DESTROY")]
		DESTROY,
		
		[EnumMember(Value="RESTART")]
		RESTART,
	}
	
	/// <summary>
	/// Possible values for InputStatusEnum
	/// </summary>
	public enum DbaaslogsInputStatusEnum {
		
		[EnumMember(Value="INIT")]
		INIT,
		
		[EnumMember(Value="PENDING")]
		PENDING,
		
		[EnumMember(Value="RUNNING")]
		RUNNING,
		
		[EnumMember(Value="PROCESSING")]
		PROCESSING,
	}
	
	/// <summary>
	/// Possible values for OperationStateEnum
	/// </summary>
	public enum DbaaslogsOperationStateEnum {
		
		[EnumMember(Value="PENDING")]
		PENDING,
		
		[EnumMember(Value="RECEIVED")]
		RECEIVED,
		
		[EnumMember(Value="STARTED")]
		STARTED,
		
		[EnumMember(Value="SUCCESS")]
		SUCCESS,
		
		[EnumMember(Value="FAILURE")]
		FAILURE,
		
		[EnumMember(Value="REVOKED")]
		REVOKED,
		
		[EnumMember(Value="RETRY")]
		RETRY,
		
		[EnumMember(Value="RUNNING")]
		RUNNING,
	}
	
	/// <summary>
	/// Possible values for PermissionTypeEnum
	/// </summary>
	public enum DbaaslogsPermissionTypeEnum {
		
		[EnumMember(Value="READ_ONLY")]
		READ_ONLY,
		
		[EnumMember(Value="READ_WRITE")]
		READ_WRITE,
	}
	
	/// <summary>
	/// Possible values for ServicePlanEnum
	/// </summary>
	public enum DbaaslogsServicePlanEnum {
		
		[EnumMember(Value="STANDARD")]
		STANDARD,
		
		[EnumMember(Value="ENTERPRISE")]
		ENTERPRISE,
	}
	
	/// <summary>
	/// Possible values for ServiceStateEnum
	/// </summary>
	public enum DbaaslogsServiceStateEnum {
		
		[EnumMember(Value="INIT")]
		INIT,
		
		[EnumMember(Value="TO_CONFIG")]
		TO_CONFIG,
		
		[EnumMember(Value="ENABLED")]
		ENABLED,
		
		[EnumMember(Value="DISABLED")]
		DISABLED,
	}
	
	/// <summary>
	/// Possible values for StreamAlertConditionConditionTypeEnum
	/// </summary>
	public enum DbaaslogsStreamAlertConditionConditionTypeEnum {
		
		[EnumMember(Value="MESSAGE_COUNT")]
		MESSAGE_COUNT,
		
		[EnumMember(Value="FIELD_VALUE")]
		FIELD_VALUE,
		
		[EnumMember(Value="FIELD_CONTENT_VALUE")]
		FIELD_CONTENT_VALUE,
	}
	
	/// <summary>
	/// Possible values for StreamAlertConditionConstraintTypeEnum
	/// </summary>
	public enum DbaaslogsStreamAlertConditionConstraintTypeEnum {
		
		[EnumMember(Value="MEAN")]
		MEAN,
		
		[EnumMember(Value="MIN")]
		MIN,
		
		[EnumMember(Value="MAX")]
		MAX,
		
		[EnumMember(Value="SUM")]
		SUM,
		
		[EnumMember(Value="STDDEV")]
		STDDEV,
	}
	
	/// <summary>
	/// Possible values for StreamAlertConditionThresholdTypeEnum
	/// </summary>
	public enum DbaaslogsStreamAlertConditionThresholdTypeEnum {
		
		[EnumMember(Value="MORE")]
		MORE,
		
		[EnumMember(Value="LESS")]
		LESS,
		
		[EnumMember(Value="LOWER")]
		LOWER,
		
		[EnumMember(Value="HIGHER")]
		HIGHER,
	}
	
	/// <summary>
	/// Possible values for StreamColdStorageCompressionEnum
	/// </summary>
	public enum DbaaslogsStreamColdStorageCompressionEnum {
		
		[EnumMember(Value="LZMA")]
		LZMA,
		
		[EnumMember(Value="GZIP")]
		GZIP,
		
		[EnumMember(Value="DEFLATED")]
		DEFLATED,
		
		[EnumMember(Value="ZSTD")]
		ZSTD,
	}
	
	/// <summary>
	/// Possible values for StreamColdStorageContentEnum
	/// </summary>
	public enum DbaaslogsStreamColdStorageContentEnum {
		
		[EnumMember(Value="ALL")]
		ALL,
		
		[EnumMember(Value="GELF")]
		GELF,
		
		[EnumMember(Value="PLAIN")]
		PLAIN,
	}
	
	/// <summary>
	/// Possible values for StreamColdStorageTargetEnum
	/// </summary>
	public enum DbaaslogsStreamColdStorageTargetEnum {
		
		[EnumMember(Value="PCA")]
		PCA,
		
		[EnumMember(Value="PCS")]
		PCS,
	}
	
	/// <summary>
	/// Possible values for StreamRuleOperatorEnum
	/// </summary>
	public enum DbaaslogsStreamRuleOperatorEnum {
		
		[EnumMember(Value="MATCH_EXACTLY")]
		MATCH_EXACTLY,
		
		[EnumMember(Value="GREATER_THAN")]
		GREATER_THAN,
		
		[EnumMember(Value="SMALLER_THAN")]
		SMALLER_THAN,
		
		[EnumMember(Value="FIELD_PRESENCE")]
		FIELD_PRESENCE,
	}
	
	/// <summary>
	/// Possible values for UrlTypeEnum
	/// </summary>
	public enum DbaaslogsUrlTypeEnum {
		
		[EnumMember(Value="GRAYLOG_WEBUI")]
		GRAYLOG_WEBUI,
		
		[EnumMember(Value="GRAYLOG_API")]
		GRAYLOG_API,
		
		[EnumMember(Value="ELASTICSEARCH_API")]
		ELASTICSEARCH_API,
		
		[EnumMember(Value="KIBANA_WEBUI")]
		KIBANA_WEBUI,
		
		[EnumMember(Value="CONSOLE")]
		CONSOLE,
		
		[EnumMember(Value="WEB_SOCKET")]
		WEB_SOCKET,
		
		[EnumMember(Value="SERVICE_DOMAIN")]
		SERVICE_DOMAIN,
		
		[EnumMember(Value="TCP_TLS_GELF")]
		TCP_TLS_GELF,
		
		[EnumMember(Value="TCP_GELF")]
		TCP_GELF,
		
		[EnumMember(Value="UDP_GELF")]
		UDP_GELF,
		
		[EnumMember(Value="TCP_TLS_RFC5424")]
		TCP_TLS_RFC5424,
		
		[EnumMember(Value="TCP_RFC5424")]
		TCP_RFC5424,
		
		[EnumMember(Value="UDP_RFC5424")]
		UDP_RFC5424,
		
		[EnumMember(Value="TCP_TLS_LTSV_LINE")]
		TCP_TLS_LTSV_LINE,
		
		[EnumMember(Value="TCP_TLS_LTSV_NUL")]
		TCP_TLS_LTSV_NUL,
		
		[EnumMember(Value="TCP_LTSV_LINE")]
		TCP_LTSV_LINE,
		
		[EnumMember(Value="TCP_LTSV_NUL")]
		TCP_LTSV_NUL,
		
		[EnumMember(Value="TCP_TLS_CAP_N_PROTO")]
		TCP_TLS_CAP_N_PROTO,
		
		[EnumMember(Value="TCP_CAP_N_PROTO")]
		TCP_CAP_N_PROTO,
		
		[EnumMember(Value="UDP_LTSV_NUL")]
		UDP_LTSV_NUL,
		
		[EnumMember(Value="UDP_LTSV_LINE")]
		UDP_LTSV_LINE,
		
		[EnumMember(Value="UDP_CAP_N_PROTO")]
		UDP_CAP_N_PROTO,
		
		[EnumMember(Value="HTTP_GELF")]
		HTTP_GELF,
		
		[EnumMember(Value="HTTP_TLS_GELF")]
		HTTP_TLS_GELF,
		
		[EnumMember(Value="TCP_BEATS")]
		TCP_BEATS,
		
		[EnumMember(Value="TCP_TLS_BEATS")]
		TCP_TLS_BEATS,
	}
	
	/// <summary>
	/// Detailed renewal type of a service
	/// </summary>
	public enum ServiceRenewalTypeEnum {
		
		[EnumMember(Value="automaticForcedProduct")]
		AutomaticForcedProduct,
		
		[EnumMember(Value="automaticV2012")]
		AutomaticV2012,
		
		[EnumMember(Value="automaticV2014")]
		AutomaticV2014,
		
		[EnumMember(Value="automaticV2016")]
		AutomaticV2016,
		
		[EnumMember(Value="manual")]
		Manual,
		
		[EnumMember(Value="oneShot")]
		OneShot,
		
		[EnumMember(Value="option")]
		Option,
	}
	
	public enum ServiceStateEnum {
		
		[EnumMember(Value="expired")]
		Expired,
		
		[EnumMember(Value="inCreation")]
		InCreation,
		
		[EnumMember(Value="ok")]
		Ok,
		
		[EnumMember(Value="pendingDebt")]
		PendingDebt,
		
		[EnumMember(Value="unPaid")]
		UnPaid,
	}
	
	/// <summary>
	/// Elasticsearch alias
	/// </summary>
	public class DbaaslogsAlias {
		
		private string AliasId_bfield;
		
		private System.DateTime CreatedAt_bfield;
		
		private string Description_bfield;
		
		private bool IsEditable_bfield;
		
		private bool IsShareable_bfield;
		
		private string Name_bfield;
		
		private System.Nullable<System.DateTime> UpdatedAt_bfield;
		
		/// <summary>
		/// Alias ID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Alias ID&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("aliasId")]
		public string AliasId {
			get {
				return this.AliasId_bfield;
			}
			set {
				this.AliasId_bfield = value;
			}
		}
		
		/// <summary>
		/// Input creation
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Input creation&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("createdAt")]
		public System.DateTime CreatedAt {
			get {
				return this.CreatedAt_bfield;
			}
			set {
				this.CreatedAt_bfield = value;
			}
		}
		
		/// <summary>
		/// Alias description
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Alias description&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("description")]
		public string Description {
			get {
				return this.Description_bfield;
			}
			set {
				this.Description_bfield = value;
			}
		}
		
		/// <summary>
		/// Indicates if you are allowed to edit entry
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Indicates if you are allowed to edit entry&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("isEditable")]
		public bool IsEditable {
			get {
				return this.IsEditable_bfield;
			}
			set {
				this.IsEditable_bfield = value;
			}
		}
		
		/// <summary>
		/// Indicates if you are allowed to share entry
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Indicates if you are allowed to share entry&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("isShareable")]
		public bool IsShareable {
			get {
				return this.IsShareable_bfield;
			}
			set {
				this.IsShareable_bfield = value;
			}
		}
		
		/// <summary>
		/// Alias name
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Alias name&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("name")]
		public string Name {
			get {
				return this.Name_bfield;
			}
			set {
				this.Name_bfield = value;
			}
		}
		
		/// <summary>
		/// Input last update
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Input last update&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("updatedAt")]
		public System.Nullable<System.DateTime> UpdatedAt {
			get {
				return this.UpdatedAt_bfield;
			}
			set {
				this.UpdatedAt_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Stream archive
	/// </summary>
	public class DbaaslogsArchive {
		
		private string ArchiveId_bfield;
		
		private System.Nullable<System.DateTime> CreatedAt_bfield;
		
		private string Filename_bfield;
		
		private string Md5_bfield;
		
		private long RetrievalDelay_bfield;
		
		private string RetrievalState_bfield;
		
		private string Sha256_bfield;
		
		private long Size_bfield;
		
		/// <summary>
		/// Archive ID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Archive ID&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("archiveId")]
		public string ArchiveId {
			get {
				return this.ArchiveId_bfield;
			}
			set {
				this.ArchiveId_bfield = value;
			}
		}
		
		/// <summary>
		/// Create date
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Create date&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("createdAt")]
		public System.Nullable<System.DateTime> CreatedAt {
			get {
				return this.CreatedAt_bfield;
			}
			set {
				this.CreatedAt_bfield = value;
			}
		}
		
		/// <summary>
		/// Filename
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Filename&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("filename")]
		public string Filename {
			get {
				return this.Filename_bfield;
			}
			set {
				this.Filename_bfield = value;
			}
		}
		
		/// <summary>
		/// MD5 checksum
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;MD5 checksum&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("md5")]
		public string Md5 {
			get {
				return this.Md5_bfield;
			}
			set {
				this.Md5_bfield = value;
			}
		}
		
		/// <summary>
		/// Retrieval delay
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Retrieval delay&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("retrievalDelay")]
		public long RetrievalDelay {
			get {
				return this.RetrievalDelay_bfield;
			}
			set {
				this.RetrievalDelay_bfield = value;
			}
		}
		
		/// <summary>
		/// Retrieval state
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;dbaas.logs.ArchiveRetrievalStateEnum&quot;,&quot;Description&quot;:&quot;Retrieval state&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("retrievalState")]
		public string RetrievalState {
			get {
				return this.RetrievalState_bfield;
			}
			set {
				this.RetrievalState_bfield = value;
			}
		}
		
		/// <summary>
		/// sha256 checksum
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;sha256 checksum&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("sha256")]
		public string Sha256 {
			get {
				return this.Sha256_bfield;
			}
			set {
				this.Sha256_bfield = value;
			}
		}
		
		/// <summary>
		/// File size in bytes
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;File size in bytes&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("size")]
		public long Size {
			get {
				return this.Size_bfield;
			}
			set {
				this.Size_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Stream archive url
	/// </summary>
	public class DbaaslogsArchiveUrl {
		
		private System.DateTime ExpirationDate_bfield;
		
		private string Url_bfield;
		
		/// <summary>
		/// Temporary URL expiration date
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Temporary URL expiration date&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("expirationDate")]
		public System.DateTime ExpirationDate {
			get {
				return this.ExpirationDate_bfield;
			}
			set {
				this.ExpirationDate_bfield = value;
			}
		}
		
		/// <summary>
		/// Temporary URL to get archive
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Temporary URL to get archive&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("url")]
		public string Url {
			get {
				return this.Url_bfield;
			}
			set {
				this.Url_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Cluster
	/// </summary>
	public class DbaaslogsCluster {
		
		private string ClusterId_bfield;
		
		private string ClusterType_bfield;
		
		private string DedicatedInputPEM_bfield;
		
		private string DefaultRetentionId_bfield;
		
		private string[] DirectInputAllowedNetworks_bfield;
		
		private string DirectInputPEM_bfield;
		
		private string Hostname_bfield;
		
		private bool IsDefault_bfield;
		
		private bool IsUnlocked_bfield;
		
		private string[] QueryAllowedNetworks_bfield;
		
		private string Region_bfield;
		
		/// <summary>
		/// Cluster ID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Cluster ID&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("clusterId")]
		public string ClusterId {
			get {
				return this.ClusterId_bfield;
			}
			set {
				this.ClusterId_bfield = value;
			}
		}
		
		/// <summary>
		/// Cluster type
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;dbaas.logs.ClusterClusterTypeEnum&quot;,&quot;Description&quot;:&quot;Cluster type&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("clusterType")]
		public string ClusterType {
			get {
				return this.ClusterType_bfield;
			}
			set {
				this.ClusterType_bfield = value;
			}
		}
		
		/// <summary>
		/// PEM for dedicated inputs
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;PEM for dedicated inputs&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("dedicatedInputPEM")]
		public string DedicatedInputPEM {
			get {
				return this.DedicatedInputPEM_bfield;
			}
			set {
				this.DedicatedInputPEM_bfield = value;
			}
		}
		
		/// <summary>
		/// Retention ID used by default when none is given on new stream
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Retention ID used by default when none is given on new stream&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("defaultRetentionId")]
		public string DefaultRetentionId {
			get {
				return this.DefaultRetentionId_bfield;
			}
			set {
				this.DefaultRetentionId_bfield = value;
			}
		}
		
		/// <summary>
		/// Allowed networks for DIRECT_INPUT flow type
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;ipBlock[]&quot;,&quot;Description&quot;:&quot;Allowed networks for DIRECT_INPUT flow type&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("directInputAllowedNetworks")]
		public string[] DirectInputAllowedNetworks {
			get {
				return this.DirectInputAllowedNetworks_bfield;
			}
			set {
				this.DirectInputAllowedNetworks_bfield = value;
			}
		}
		
		/// <summary>
		/// PEM for direct inputs
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;PEM for direct inputs&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("directInputPEM")]
		public string DirectInputPEM {
			get {
				return this.DirectInputPEM_bfield;
			}
			set {
				this.DirectInputPEM_bfield = value;
			}
		}
		
		/// <summary>
		/// Hostname
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Hostname&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("hostname")]
		public string Hostname {
			get {
				return this.Hostname_bfield;
			}
			set {
				this.Hostname_bfield = value;
			}
		}
		
		/// <summary>
		/// All content generated by given service will be placed on this cluster
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;All content generated by given service will be placed on this cluster&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("isDefault")]
		public bool IsDefault {
			get {
				return this.IsDefault_bfield;
			}
			set {
				this.IsDefault_bfield = value;
			}
		}
		
		/// <summary>
		/// Allow given service to perform advanced operations on cluster
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Allow given service to perform advanced operations on cluster&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("isUnlocked")]
		public bool IsUnlocked {
			get {
				return this.IsUnlocked_bfield;
			}
			set {
				this.IsUnlocked_bfield = value;
			}
		}
		
		/// <summary>
		/// Allowed networks for QUERY flow type
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;ipBlock[]&quot;,&quot;Description&quot;:&quot;Allowed networks for QUERY flow type&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("queryAllowedNetworks")]
		public string[] QueryAllowedNetworks {
			get {
				return this.QueryAllowedNetworks_bfield;
			}
			set {
				this.QueryAllowedNetworks_bfield = value;
			}
		}
		
		/// <summary>
		/// Data center localization
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;dbaas.logs.ClusterRegionEnum&quot;,&quot;Description&quot;:&quot;Data center localization&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("region")]
		public string Region {
			get {
				return this.Region_bfield;
			}
			set {
				this.Region_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Cluster retention
	/// </summary>
	public class DbaaslogsClusterRetention {
		
		private string Duration_bfield;
		
		private bool IsSupported_bfield;
		
		private string RetentionId_bfield;
		
		/// <summary>
		/// Indexed duration expressed in ISO-8601 format
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;duration&quot;,&quot;Description&quot;:&quot;Indexed duration expressed in ISO-8601 format&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("duration")]
		public string Duration {
			get {
				return this.Duration_bfield;
			}
			set {
				this.Duration_bfield = value;
			}
		}
		
		/// <summary>
		/// Indicates if a new stream can use it
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Indicates if a new stream can use it&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("isSupported")]
		public bool IsSupported {
			get {
				return this.IsSupported_bfield;
			}
			set {
				this.IsSupported_bfield = value;
			}
		}
		
		/// <summary>
		/// Retention ID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Retention ID&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("retentionId")]
		public string RetentionId {
			get {
				return this.RetentionId_bfield;
			}
			set {
				this.RetentionId_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Missing description
	/// </summary>
	public class DbaaslogsClusterUpdate {
		
		private string[] DirectInputAllowedNetworks_bfield;
		
		private string[] QueryAllowedNetworks_bfield;
		
		/// <summary>
		/// Allowed networks for DIRECT_INPUT flow type
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;ipBlock[]&quot;,&quot;Description&quot;:&quot;Allowed networks for DIRECT_INPUT flow type&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("directInputAllowedNetworks")]
		public string[] DirectInputAllowedNetworks {
			get {
				return this.DirectInputAllowedNetworks_bfield;
			}
			set {
				this.DirectInputAllowedNetworks_bfield = value;
			}
		}
		
		/// <summary>
		/// Allowed networks for QUERY flow type
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;ipBlock[]&quot;,&quot;Description&quot;:&quot;Allowed networks for QUERY flow type&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("queryAllowedNetworks")]
		public string[] QueryAllowedNetworks {
			get {
				return this.QueryAllowedNetworks_bfield;
			}
			set {
				this.QueryAllowedNetworks_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Graylog dashboard
	/// </summary>
	public class DbaaslogsDashboard {
		
		private System.DateTime CreatedAt_bfield;
		
		private string DashboardId_bfield;
		
		private string Description_bfield;
		
		private bool IsEditable_bfield;
		
		private bool IsShareable_bfield;
		
		private string Title_bfield;
		
		private System.Nullable<System.DateTime> UpdatedAt_bfield;
		
		/// <summary>
		/// Dashboard creation
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Dashboard creation&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("createdAt")]
		public System.DateTime CreatedAt {
			get {
				return this.CreatedAt_bfield;
			}
			set {
				this.CreatedAt_bfield = value;
			}
		}
		
		/// <summary>
		/// Dashboard ID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Dashboard ID&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("dashboardId")]
		public string DashboardId {
			get {
				return this.DashboardId_bfield;
			}
			set {
				this.DashboardId_bfield = value;
			}
		}
		
		/// <summary>
		/// Dashboard description
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Dashboard description&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("description")]
		public string Description {
			get {
				return this.Description_bfield;
			}
			set {
				this.Description_bfield = value;
			}
		}
		
		/// <summary>
		/// Indicates if you are allowed to edit entry
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Indicates if you are allowed to edit entry&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("isEditable")]
		public bool IsEditable {
			get {
				return this.IsEditable_bfield;
			}
			set {
				this.IsEditable_bfield = value;
			}
		}
		
		/// <summary>
		/// Indicates if you are allowed to share entry
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Indicates if you are allowed to share entry&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("isShareable")]
		public bool IsShareable {
			get {
				return this.IsShareable_bfield;
			}
			set {
				this.IsShareable_bfield = value;
			}
		}
		
		/// <summary>
		/// Dashboard description
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Dashboard description&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("title")]
		public string Title {
			get {
				return this.Title_bfield;
			}
			set {
				this.Title_bfield = value;
			}
		}
		
		/// <summary>
		/// Dashboard last update
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Dashboard last update&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("updatedAt")]
		public System.Nullable<System.DateTime> UpdatedAt {
			get {
				return this.UpdatedAt_bfield;
			}
			set {
				this.UpdatedAt_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Input engine
	/// </summary>
	public class DbaaslogsEngine {
		
		private string EngineId_bfield;
		
		private bool IsDeprecated_bfield;
		
		private string Name_bfield;
		
		private string Version_bfield;
		
		/// <summary>
		/// Input engine ID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Input engine ID&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("engineId")]
		public string EngineId {
			get {
				return this.EngineId_bfield;
			}
			set {
				this.EngineId_bfield = value;
			}
		}
		
		/// <summary>
		/// Indicates if engine will soon not be supported
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Indicates if engine will soon not be supported&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("isDeprecated")]
		public bool IsDeprecated {
			get {
				return this.IsDeprecated_bfield;
			}
			set {
				this.IsDeprecated_bfield = value;
			}
		}
		
		/// <summary>
		/// Software name
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;dbaas.logs.EngineNameEnum&quot;,&quot;Description&quot;:&quot;Software name&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("name")]
		public string Name {
			get {
				return this.Name_bfield;
			}
			set {
				this.Name_bfield = value;
			}
		}
		
		/// <summary>
		/// Software version
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Software version&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("version")]
		public string Version {
			get {
				return this.Version_bfield;
			}
			set {
				this.Version_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Flowgger configuration
	/// </summary>
	public class DbaaslogsFlowggerConfiguration {
		
		private string LogFormat_bfield;
		
		private string LogFraming_bfield;
		
		/// <summary>
		/// Type of format to decode
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;dbaas.logs.FlowggerConfigurationLogFormatEnum&quot;,&quot;Description&quot;:&quot;Type of format to decode&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("logFormat")]
		public string LogFormat {
			get {
				return this.LogFormat_bfield;
			}
			set {
				this.LogFormat_bfield = value;
			}
		}
		
		/// <summary>
		/// Indicates how messages are delimited
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;dbaas.logs.FlowggerConfigurationLogFramingEnum&quot;,&quot;Description&quot;:&quot;Indicates how messages are delimited&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("logFraming")]
		public string LogFraming {
			get {
				return this.LogFraming_bfield;
			}
			set {
				this.LogFraming_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Helper
	/// </summary>
	public class DbaaslogsHelper {
		
		private string Description_bfield;
		
		private string EngineId_bfield;
		
		private string HelperId_bfield;
		
		private string[] Sections_bfield;
		
		private string Title_bfield;
		
		/// <summary>
		/// Helper description
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Helper description&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("description")]
		public string Description {
			get {
				return this.Description_bfield;
			}
			set {
				this.Description_bfield = value;
			}
		}
		
		/// <summary>
		/// Input engine UUID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Input engine UUID&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("engineId")]
		public string EngineId {
			get {
				return this.EngineId_bfield;
			}
			set {
				this.EngineId_bfield = value;
			}
		}
		
		/// <summary>
		/// Helper UUID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Helper UUID&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("helperId")]
		public string HelperId {
			get {
				return this.HelperId_bfield;
			}
			set {
				this.HelperId_bfield = value;
			}
		}
		
		/// <summary>
		/// Helper sections
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;dbaas.logs.HelperSection[]&quot;,&quot;Description&quot;:&quot;Helper sections&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("sections")]
		public string[] Sections {
			get {
				return this.Sections_bfield;
			}
			set {
				this.Sections_bfield = value;
			}
		}
		
		/// <summary>
		/// Helper title
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Helper title&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("title")]
		public string Title {
			get {
				return this.Title_bfield;
			}
			set {
				this.Title_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Helper section
	/// </summary>
	public class DbaaslogsHelperSection {
		
		private string Content_bfield;
		
		private string Name_bfield;
		
		/// <summary>
		/// Section content
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Section content&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("content")]
		public string Content {
			get {
				return this.Content_bfield;
			}
			set {
				this.Content_bfield = value;
			}
		}
		
		/// <summary>
		/// Section name
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;dbaas.logs.HelperSectionNameEnum&quot;,&quot;Description&quot;:&quot;Section name&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("name")]
		public string Name {
			get {
				return this.Name_bfield;
			}
			set {
				this.Name_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Elasticsearch index
	/// </summary>
	public class DbaaslogsIndex {
		
		private System.Nullable<bool> AlertNotifyEnabled_bfield;
		
		private System.DateTime CreatedAt_bfield;
		
		private string Description_bfield;
		
		private string IndexId_bfield;
		
		private bool IsEditable_bfield;
		
		private bool IsShareable_bfield;
		
		private long MaxSize_bfield;
		
		private string Name_bfield;
		
		private System.Nullable<long> NbShard_bfield;
		
		private System.Nullable<System.DateTime> UpdatedAt_bfield;
		
		/// <summary>
		/// If set, notify when size is near 80, 90 or 100 % of its maximum capacity
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;If set, notify when size is near 80, 90 or 100 % of its maximum capacity&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("alertNotifyEnabled")]
		public System.Nullable<bool> AlertNotifyEnabled {
			get {
				return this.AlertNotifyEnabled_bfield;
			}
			set {
				this.AlertNotifyEnabled_bfield = value;
			}
		}
		
		/// <summary>
		/// Index creation
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Index creation&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("createdAt")]
		public System.DateTime CreatedAt {
			get {
				return this.CreatedAt_bfield;
			}
			set {
				this.CreatedAt_bfield = value;
			}
		}
		
		/// <summary>
		/// Index description
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Index description&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("description")]
		public string Description {
			get {
				return this.Description_bfield;
			}
			set {
				this.Description_bfield = value;
			}
		}
		
		/// <summary>
		/// Index ID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Index ID&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("indexId")]
		public string IndexId {
			get {
				return this.IndexId_bfield;
			}
			set {
				this.IndexId_bfield = value;
			}
		}
		
		/// <summary>
		/// Indicates if you are allowed to edit entry
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Indicates if you are allowed to edit entry&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("isEditable")]
		public bool IsEditable {
			get {
				return this.IsEditable_bfield;
			}
			set {
				this.IsEditable_bfield = value;
			}
		}
		
		/// <summary>
		/// Indicates if you are allowed to share entry
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Indicates if you are allowed to share entry&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("isShareable")]
		public bool IsShareable {
			get {
				return this.IsShareable_bfield;
			}
			set {
				this.IsShareable_bfield = value;
			}
		}
		
		/// <summary>
		/// Maximum index size (in bytes)
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Maximum index size (in bytes)&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("maxSize")]
		public long MaxSize {
			get {
				return this.MaxSize_bfield;
			}
			set {
				this.MaxSize_bfield = value;
			}
		}
		
		/// <summary>
		/// Index name
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Index name&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("name")]
		public string Name {
			get {
				return this.Name_bfield;
			}
			set {
				this.Name_bfield = value;
			}
		}
		
		/// <summary>
		/// Number of shard
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Number of shard&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("nbShard")]
		public System.Nullable<long> NbShard {
			get {
				return this.NbShard_bfield;
			}
			set {
				this.NbShard_bfield = value;
			}
		}
		
		/// <summary>
		/// Index last update
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Index last update&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("updatedAt")]
		public System.Nullable<System.DateTime> UpdatedAt {
			get {
				return this.UpdatedAt_bfield;
			}
			set {
				this.UpdatedAt_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Input
	/// </summary>
	public class DbaaslogsInput {
		
		private string[] AllowedNetworks_bfield;
		
		private System.DateTime CreatedAt_bfield;
		
		private string Description_bfield;
		
		private string EngineId_bfield;
		
		private string ExposedPort_bfield;
		
		private string Hostname_bfield;
		
		private string InputId_bfield;
		
		private bool IsRestartRequired_bfield;
		
		private System.Nullable<long> NbInstance_bfield;
		
		private string PublicAddress_bfield;
		
		private string SslCertificate_bfield;
		
		private string Status_bfield;
		
		private string StreamId_bfield;
		
		private string Title_bfield;
		
		private System.Nullable<System.DateTime> UpdatedAt_bfield;
		
		/// <summary>
		/// IP blocks
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;ipBlock[]&quot;,&quot;Description&quot;:&quot;IP blocks&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("allowedNetworks")]
		public string[] AllowedNetworks {
			get {
				return this.AllowedNetworks_bfield;
			}
			set {
				this.AllowedNetworks_bfield = value;
			}
		}
		
		/// <summary>
		/// Input creation
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Input creation&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("createdAt")]
		public System.DateTime CreatedAt {
			get {
				return this.CreatedAt_bfield;
			}
			set {
				this.CreatedAt_bfield = value;
			}
		}
		
		/// <summary>
		/// Input description
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Input description&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("description")]
		public string Description {
			get {
				return this.Description_bfield;
			}
			set {
				this.Description_bfield = value;
			}
		}
		
		/// <summary>
		/// Input engine ID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Input engine ID&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("engineId")]
		public string EngineId {
			get {
				return this.EngineId_bfield;
			}
			set {
				this.EngineId_bfield = value;
			}
		}
		
		/// <summary>
		/// Port
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Port&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("exposedPort")]
		public string ExposedPort {
			get {
				return this.ExposedPort_bfield;
			}
			set {
				this.ExposedPort_bfield = value;
			}
		}
		
		/// <summary>
		/// Hostname
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Hostname&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("hostname")]
		public string Hostname {
			get {
				return this.Hostname_bfield;
			}
			set {
				this.Hostname_bfield = value;
			}
		}
		
		/// <summary>
		/// Input ID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Input ID&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("inputId")]
		public string InputId {
			get {
				return this.InputId_bfield;
			}
			set {
				this.InputId_bfield = value;
			}
		}
		
		/// <summary>
		/// Indicate if input need to be restarted
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Indicate if input need to be restarted&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("isRestartRequired")]
		public bool IsRestartRequired {
			get {
				return this.IsRestartRequired_bfield;
			}
			set {
				this.IsRestartRequired_bfield = value;
			}
		}
		
		/// <summary>
		/// Number of instance running
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Number of instance running&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("nbInstance")]
		public System.Nullable<long> NbInstance {
			get {
				return this.NbInstance_bfield;
			}
			set {
				this.NbInstance_bfield = value;
			}
		}
		
		/// <summary>
		/// Input IP address
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Input IP address&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("publicAddress")]
		public string PublicAddress {
			get {
				return this.PublicAddress_bfield;
			}
			set {
				this.PublicAddress_bfield = value;
			}
		}
		
		/// <summary>
		/// Input SSL certificate
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Input SSL certificate&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("sslCertificate")]
		public string SslCertificate {
			get {
				return this.SslCertificate_bfield;
			}
			set {
				this.SslCertificate_bfield = value;
			}
		}
		
		/// <summary>
		/// init: configuration required, pending: ready to start, running: available
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;dbaas.logs.InputStatusEnum&quot;,&quot;Description&quot;:&quot;init: configuration required, pending: ready to start, running: available&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("status")]
		public string Status {
			get {
				return this.Status_bfield;
			}
			set {
				this.Status_bfield = value;
			}
		}
		
		/// <summary>
		/// Associated Graylog stream
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Associated Graylog stream&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("streamId")]
		public string StreamId {
			get {
				return this.StreamId_bfield;
			}
			set {
				this.StreamId_bfield = value;
			}
		}
		
		/// <summary>
		/// Input title
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Input title&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("title")]
		public string Title {
			get {
				return this.Title_bfield;
			}
			set {
				this.Title_bfield = value;
			}
		}
		
		/// <summary>
		/// Input last update
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Input last update&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("updatedAt")]
		public System.Nullable<System.DateTime> UpdatedAt {
			get {
				return this.UpdatedAt_bfield;
			}
			set {
				this.UpdatedAt_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Action on input
	/// </summary>
	public class DbaaslogsInputAction {
		
		private bool IsAllowed_bfield;
		
		private string Type_bfield;
		
		/// <summary>
		/// Indicates if action is allowed
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Indicates if action is allowed&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("isAllowed")]
		public bool IsAllowed {
			get {
				return this.IsAllowed_bfield;
			}
			set {
				this.IsAllowed_bfield = value;
			}
		}
		
		/// <summary>
		/// Action type
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;dbaas.logs.InputActionTypeEnum&quot;,&quot;Description&quot;:&quot;Action type&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("type")]
		public string Type {
			get {
				return this.Type_bfield;
			}
			set {
				this.Type_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Missing description
	/// </summary>
	public class DbaaslogsInputConfigurationFlowggerUpdate {
		
		private string LogFormat_bfield;
		
		private string LogFraming_bfield;
		
		/// <summary>
		/// configuration log format
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;dbaas.logs.FlowggerConfigurationLogFormatEnum&quot;,&quot;Description&quot;:&quot;configuration log format&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("logFormat")]
		public string LogFormat {
			get {
				return this.LogFormat_bfield;
			}
			set {
				this.LogFormat_bfield = value;
			}
		}
		
		/// <summary>
		/// Log framing
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;dbaas.logs.FlowggerConfigurationLogFramingEnum&quot;,&quot;Description&quot;:&quot;Log framing&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("logFraming")]
		public string LogFraming {
			get {
				return this.LogFraming_bfield;
			}
			set {
				this.LogFraming_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Missing description
	/// </summary>
	public class DbaaslogsInputConfigurationLogstashUpdate {
		
		private string FilterSection_bfield;
		
		private string InputSection_bfield;
		
		private string PatternSection_bfield;
		
		/// <summary>
		/// Filter section
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Filter section&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("filterSection")]
		public string FilterSection {
			get {
				return this.FilterSection_bfield;
			}
			set {
				this.FilterSection_bfield = value;
			}
		}
		
		/// <summary>
		/// Input section
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Input section&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("inputSection")]
		public string InputSection {
			get {
				return this.InputSection_bfield;
			}
			set {
				this.InputSection_bfield = value;
			}
		}
		
		/// <summary>
		/// Pattern section
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Pattern section&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("patternSection")]
		public string PatternSection {
			get {
				return this.PatternSection_bfield;
			}
			set {
				this.PatternSection_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Missing description
	/// </summary>
	public class DbaaslogsInputCreation {
		
		private string[] AllowedNetworks_bfield;
		
		private string Description_bfield;
		
		private string EngineId_bfield;
		
		private string ExposedPort_bfield;
		
		private System.Nullable<long> NbInstance_bfield;
		
		private string StreamId_bfield;
		
		private string Title_bfield;
		
		/// <summary>
		/// IP blocks
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;ipBlock[]&quot;,&quot;Description&quot;:&quot;IP blocks&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("allowedNetworks")]
		public string[] AllowedNetworks {
			get {
				return this.AllowedNetworks_bfield;
			}
			set {
				this.AllowedNetworks_bfield = value;
			}
		}
		
		/// <summary>
		/// Description
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Description&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("description")]
		public string Description {
			get {
				return this.Description_bfield;
			}
			set {
				this.Description_bfield = value;
			}
		}
		
		/// <summary>
		/// Engine ID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Engine ID&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("engineId")]
		public string EngineId {
			get {
				return this.EngineId_bfield;
			}
			set {
				this.EngineId_bfield = value;
			}
		}
		
		/// <summary>
		/// Exposed port
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Exposed port&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("exposedPort")]
		public string ExposedPort {
			get {
				return this.ExposedPort_bfield;
			}
			set {
				this.ExposedPort_bfield = value;
			}
		}
		
		/// <summary>
		/// Number of instance running
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Number of instance running&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("nbInstance")]
		public System.Nullable<long> NbInstance {
			get {
				return this.NbInstance_bfield;
			}
			set {
				this.NbInstance_bfield = value;
			}
		}
		
		/// <summary>
		/// Stream ID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Stream ID&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("streamId")]
		public string StreamId {
			get {
				return this.StreamId_bfield;
			}
			set {
				this.StreamId_bfield = value;
			}
		}
		
		/// <summary>
		/// Title
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Title&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("title")]
		public string Title {
			get {
				return this.Title_bfield;
			}
			set {
				this.Title_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Missing description
	/// </summary>
	public class DbaaslogsInputUpdate {
		
		private string[] AllowedNetworks_bfield;
		
		private string Description_bfield;
		
		private string EngineId_bfield;
		
		private string ExposedPort_bfield;
		
		private System.Nullable<long> NbInstance_bfield;
		
		private string StreamId_bfield;
		
		private string Title_bfield;
		
		/// <summary>
		/// IP blocks
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;ipBlock[]&quot;,&quot;Description&quot;:&quot;IP blocks&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("allowedNetworks")]
		public string[] AllowedNetworks {
			get {
				return this.AllowedNetworks_bfield;
			}
			set {
				this.AllowedNetworks_bfield = value;
			}
		}
		
		/// <summary>
		/// Description
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Description&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("description")]
		public string Description {
			get {
				return this.Description_bfield;
			}
			set {
				this.Description_bfield = value;
			}
		}
		
		/// <summary>
		/// Engine ID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Engine ID&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("engineId")]
		public string EngineId {
			get {
				return this.EngineId_bfield;
			}
			set {
				this.EngineId_bfield = value;
			}
		}
		
		/// <summary>
		/// Exposed port
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Exposed port&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("exposedPort")]
		public string ExposedPort {
			get {
				return this.ExposedPort_bfield;
			}
			set {
				this.ExposedPort_bfield = value;
			}
		}
		
		/// <summary>
		/// Number of instance running
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Number of instance running&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("nbInstance")]
		public System.Nullable<long> NbInstance {
			get {
				return this.NbInstance_bfield;
			}
			set {
				this.NbInstance_bfield = value;
			}
		}
		
		/// <summary>
		/// Stream ID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Stream ID&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("streamId")]
		public string StreamId {
			get {
				return this.StreamId_bfield;
			}
			set {
				this.StreamId_bfield = value;
			}
		}
		
		/// <summary>
		/// Title
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Title&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("title")]
		public string Title {
			get {
				return this.Title_bfield;
			}
			set {
				this.Title_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Kibana instance
	/// </summary>
	public class DbaaslogsKibana {
		
		private System.DateTime CreatedAt_bfield;
		
		private string DeliveryStatus_bfield;
		
		private string Description_bfield;
		
		private bool IsEditable_bfield;
		
		private string KibanaId_bfield;
		
		private string Name_bfield;
		
		private System.Nullable<System.DateTime> UpdatedAt_bfield;
		
		/// <summary>
		/// Kibana creation
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Kibana creation&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("createdAt")]
		public System.DateTime CreatedAt {
			get {
				return this.CreatedAt_bfield;
			}
			set {
				this.CreatedAt_bfield = value;
			}
		}
		
		/// <summary>
		/// Status of the delivering process
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;dbaas.logs.DeliveryStatusEnum&quot;,&quot;Description&quot;:&quot;Status of the delivering process&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("deliveryStatus")]
		public string DeliveryStatus {
			get {
				return this.DeliveryStatus_bfield;
			}
			set {
				this.DeliveryStatus_bfield = value;
			}
		}
		
		/// <summary>
		/// Kibana description
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Kibana description&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("description")]
		public string Description {
			get {
				return this.Description_bfield;
			}
			set {
				this.Description_bfield = value;
			}
		}
		
		/// <summary>
		/// Indicates if you are allowed to edit entry
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Indicates if you are allowed to edit entry&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("isEditable")]
		public bool IsEditable {
			get {
				return this.IsEditable_bfield;
			}
			set {
				this.IsEditable_bfield = value;
			}
		}
		
		/// <summary>
		/// Kibana ID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Kibana ID&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("kibanaId")]
		public string KibanaId {
			get {
				return this.KibanaId_bfield;
			}
			set {
				this.KibanaId_bfield = value;
			}
		}
		
		/// <summary>
		/// Kibana name
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Kibana name&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("name")]
		public string Name {
			get {
				return this.Name_bfield;
			}
			set {
				this.Name_bfield = value;
			}
		}
		
		/// <summary>
		/// Kibana last update
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Kibana last update&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("updatedAt")]
		public System.Nullable<System.DateTime> UpdatedAt {
			get {
				return this.UpdatedAt_bfield;
			}
			set {
				this.UpdatedAt_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Missing description
	/// </summary>
	public class DbaaslogsKibanaCreation {
		
		private string Description_bfield;
		
		/// <summary>
		/// Description
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Description&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("description")]
		public string Description {
			get {
				return this.Description_bfield;
			}
			set {
				this.Description_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Missing description
	/// </summary>
	public class DbaaslogsKibanaUpdate {
		
		private string Description_bfield;
		
		/// <summary>
		/// Description
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Description&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("description")]
		public string Description {
			get {
				return this.Description_bfield;
			}
			set {
				this.Description_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Logstash configuration
	/// </summary>
	public class DbaaslogsLogstashConfiguration {
		
		private string FilterSection_bfield;
		
		private string InputSection_bfield;
		
		private string PatternSection_bfield;
		
		/// <summary>
		/// The filter section of logstash.conf
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;The filter section of logstash.conf&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("filterSection")]
		public string FilterSection {
			get {
				return this.FilterSection_bfield;
			}
			set {
				this.FilterSection_bfield = value;
			}
		}
		
		/// <summary>
		/// The filter section of logstash.conf
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;The filter section of logstash.conf&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("inputSection")]
		public string InputSection {
			get {
				return this.InputSection_bfield;
			}
			set {
				this.InputSection_bfield = value;
			}
		}
		
		/// <summary>
		/// The list of customs Grok patterns
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;The list of customs Grok patterns&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("patternSection")]
		public string PatternSection {
			get {
				return this.PatternSection_bfield;
			}
			set {
				this.PatternSection_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Member
	/// </summary>
	public class DbaaslogsMember {
		
		private System.DateTime CreatedAt_bfield;
		
		private string Note_bfield;
		
		private string Username_bfield;
		
		/// <summary>
		/// Membership creation
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Membership creation&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("createdAt")]
		public System.DateTime CreatedAt {
			get {
				return this.CreatedAt_bfield;
			}
			set {
				this.CreatedAt_bfield = value;
			}
		}
		
		/// <summary>
		/// Custom note
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Custom note&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("note")]
		public string Note {
			get {
				return this.Note_bfield;
			}
			set {
				this.Note_bfield = value;
			}
		}
		
		/// <summary>
		/// Username on DBaaS Logs
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Username on DBaaS Logs&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("username")]
		public string Username {
			get {
				return this.Username_bfield;
			}
			set {
				this.Username_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Asynchronous operation
	/// </summary>
	public class DbaaslogsOperation {
		
		private string AliasId_bfield;
		
		private System.DateTime CreatedAt_bfield;
		
		private string DashboardId_bfield;
		
		private string IndexId_bfield;
		
		private string InputId_bfield;
		
		private string KibanaId_bfield;
		
		private string OperationId_bfield;
		
		private string RoleId_bfield;
		
		private string State_bfield;
		
		private string StreamId_bfield;
		
		private System.Nullable<System.DateTime> UpdatedAt_bfield;
		
		/// <summary>
		/// Alias used
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Alias used&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("aliasId")]
		public string AliasId {
			get {
				return this.AliasId_bfield;
			}
			set {
				this.AliasId_bfield = value;
			}
		}
		
		/// <summary>
		/// Operation creation
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Operation creation&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("createdAt")]
		public System.DateTime CreatedAt {
			get {
				return this.CreatedAt_bfield;
			}
			set {
				this.CreatedAt_bfield = value;
			}
		}
		
		/// <summary>
		/// Dashboard used
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Dashboard used&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("dashboardId")]
		public string DashboardId {
			get {
				return this.DashboardId_bfield;
			}
			set {
				this.DashboardId_bfield = value;
			}
		}
		
		/// <summary>
		/// Index used
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Index used&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("indexId")]
		public string IndexId {
			get {
				return this.IndexId_bfield;
			}
			set {
				this.IndexId_bfield = value;
			}
		}
		
		/// <summary>
		/// Input used
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Input used&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("inputId")]
		public string InputId {
			get {
				return this.InputId_bfield;
			}
			set {
				this.InputId_bfield = value;
			}
		}
		
		/// <summary>
		/// Kibana used
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Kibana used&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("kibanaId")]
		public string KibanaId {
			get {
				return this.KibanaId_bfield;
			}
			set {
				this.KibanaId_bfield = value;
			}
		}
		
		/// <summary>
		/// Operation ID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Operation ID&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("operationId")]
		public string OperationId {
			get {
				return this.OperationId_bfield;
			}
			set {
				this.OperationId_bfield = value;
			}
		}
		
		/// <summary>
		/// Role used
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Role used&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("roleId")]
		public string RoleId {
			get {
				return this.RoleId_bfield;
			}
			set {
				this.RoleId_bfield = value;
			}
		}
		
		/// <summary>
		/// Operation status
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;dbaas.logs.OperationStateEnum&quot;,&quot;Description&quot;:&quot;Operation status&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("state")]
		public string State {
			get {
				return this.State_bfield;
			}
			set {
				this.State_bfield = value;
			}
		}
		
		/// <summary>
		/// Stream used
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Stream used&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("streamId")]
		public string StreamId {
			get {
				return this.StreamId_bfield;
			}
			set {
				this.StreamId_bfield = value;
			}
		}
		
		/// <summary>
		/// Operation last update
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Operation last update&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("updatedAt")]
		public System.Nullable<System.DateTime> UpdatedAt {
			get {
				return this.UpdatedAt_bfield;
			}
			set {
				this.UpdatedAt_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Missing description
	/// </summary>
	public class DbaaslogsOutputElasticsearchAliasCreation {
		
		private string Description_bfield;
		
		private string Suffix_bfield;
		
		/// <summary>
		/// Description
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Description&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("description")]
		public string Description {
			get {
				return this.Description_bfield;
			}
			set {
				this.Description_bfield = value;
			}
		}
		
		/// <summary>
		/// Suffix
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Suffix&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("suffix")]
		public string Suffix {
			get {
				return this.Suffix_bfield;
			}
			set {
				this.Suffix_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Missing description
	/// </summary>
	public class DbaaslogsOutputElasticsearchAliasIndexCreation {
		
		private string IndexId_bfield;
		
		/// <summary>
		/// Index ID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Index ID&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("indexId")]
		public string IndexId {
			get {
				return this.IndexId_bfield;
			}
			set {
				this.IndexId_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Missing description
	/// </summary>
	public class DbaaslogsOutputElasticsearchAliasStreamCreation {
		
		private string StreamId_bfield;
		
		/// <summary>
		/// Stream ID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Stream ID&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("streamId")]
		public string StreamId {
			get {
				return this.StreamId_bfield;
			}
			set {
				this.StreamId_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Missing description
	/// </summary>
	public class DbaaslogsOutputElasticsearchAliasUpdate {
		
		private string Description_bfield;
		
		/// <summary>
		/// Description
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Description&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("description")]
		public string Description {
			get {
				return this.Description_bfield;
			}
			set {
				this.Description_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Missing description
	/// </summary>
	public class DbaaslogsOutputElasticsearchIndexCreation {
		
		private System.Nullable<bool> AlertNotifyEnabled_bfield;
		
		private string Description_bfield;
		
		private System.Nullable<long> NbShard_bfield;
		
		private string Suffix_bfield;
		
		/// <summary>
		/// If set, notify when size is near 80, 90 or 100 % of its maximum capacity
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;If set, notify when size is near 80, 90 or 100 % of its maximum capacity&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("alertNotifyEnabled")]
		public System.Nullable<bool> AlertNotifyEnabled {
			get {
				return this.AlertNotifyEnabled_bfield;
			}
			set {
				this.AlertNotifyEnabled_bfield = value;
			}
		}
		
		/// <summary>
		/// Description
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Description&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("description")]
		public string Description {
			get {
				return this.Description_bfield;
			}
			set {
				this.Description_bfield = value;
			}
		}
		
		/// <summary>
		/// Number of shard
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Number of shard&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("nbShard")]
		public System.Nullable<long> NbShard {
			get {
				return this.NbShard_bfield;
			}
			set {
				this.NbShard_bfield = value;
			}
		}
		
		/// <summary>
		/// Suffix
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Suffix&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("suffix")]
		public string Suffix {
			get {
				return this.Suffix_bfield;
			}
			set {
				this.Suffix_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Missing description
	/// </summary>
	public class DbaaslogsOutputElasticsearchIndexUpdate {
		
		private System.Nullable<bool> AlertNotifyEnabled_bfield;
		
		private string Description_bfield;
		
		/// <summary>
		/// If set, notify when size is near 80, 90 or 100 % of its maximum capacity
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;If set, notify when size is near 80, 90 or 100 % of its maximum capacity&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("alertNotifyEnabled")]
		public System.Nullable<bool> AlertNotifyEnabled {
			get {
				return this.AlertNotifyEnabled_bfield;
			}
			set {
				this.AlertNotifyEnabled_bfield = value;
			}
		}
		
		/// <summary>
		/// Description
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Description&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("description")]
		public string Description {
			get {
				return this.Description_bfield;
			}
			set {
				this.Description_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Missing description
	/// </summary>
	public class DbaaslogsOutputGraylogDashboardCreation {
		
		private string Description_bfield;
		
		private string Title_bfield;
		
		/// <summary>
		/// Description
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Description&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("description")]
		public string Description {
			get {
				return this.Description_bfield;
			}
			set {
				this.Description_bfield = value;
			}
		}
		
		/// <summary>
		/// Title
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Title&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("title")]
		public string Title {
			get {
				return this.Title_bfield;
			}
			set {
				this.Title_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Missing description
	/// </summary>
	public class DbaaslogsOutputGraylogDashboardDuplicateCreation {
		
		private string Description_bfield;
		
		private string StreamId_bfield;
		
		private string Title_bfield;
		
		/// <summary>
		/// Description
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Description&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("description")]
		public string Description {
			get {
				return this.Description_bfield;
			}
			set {
				this.Description_bfield = value;
			}
		}
		
		/// <summary>
		/// Stream ID
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Stream ID&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("streamId")]
		public string StreamId {
			get {
				return this.StreamId_bfield;
			}
			set {
				this.StreamId_bfield = value;
			}
		}
		
		/// <summary>
		/// Title
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Title&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("title")]
		public string Title {
			get {
				return this.Title_bfield;
			}
			set {
				this.Title_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Missing description
	/// </summary>
	public class DbaaslogsOutputGraylogDashboardUpdate {
		
		private string Description_bfield;
		
		private string Title_bfield;
		
		/// <summary>
		/// Description
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Description&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("description")]
		public string Description {
			get {
				return this.Description_bfield;
			}
			set {
				this.Description_bfield = value;
			}
		}
		
		/// <summary>
		/// Title
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Title&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("title")]
		public string Title {
			get {
				return this.Title_bfield;
			}
			set {
				this.Title_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Missing description
	/// </summary>
	public class DbaaslogsOutputGraylogStreamAlertCreation {
		
		private long Backlog_bfield;
		
		private string ConditionType_bfield;
		
		private string ConstraintType_bfield;
		
		private string Field_bfield;
		
		private long Grace_bfield;
		
		private string QueryFilter_bfield;
		
		private System.Nullable<bool> RepeatNotificationsEnabled_bfield;
		
		private System.Nullable<long> Threshold_bfield;
		
		private string ThresholdType_bfield;
		
		private System.Nullable<long> Time_bfield;
		
		private string Title_bfield;
		
		private string Value_bfield;
		
		/// <summary>
		/// Backlog
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Backlog&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("backlog")]
		public long Backlog {
			get {
				return this.Backlog_bfield;
			}
			set {
				this.Backlog_bfield = value;
			}
		}
		
		/// <summary>
		/// Condition type
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;dbaas.logs.StreamAlertConditionConditionTypeEnum&quot;,&quot;Description&quot;:&quot;Condition type&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("conditionType")]
		public string ConditionType {
			get {
				return this.ConditionType_bfield;
			}
			set {
				this.ConditionType_bfield = value;
			}
		}
		
		/// <summary>
		/// Constraint type
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;dbaas.logs.StreamAlertConditionConstraintTypeEnum&quot;,&quot;Description&quot;:&quot;Constraint type&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("constraintType")]
		public string ConstraintType {
			get {
				return this.ConstraintType_bfield;
			}
			set {
				this.ConstraintType_bfield = value;
			}
		}
		
		/// <summary>
		/// Field
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Field&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("field")]
		public string Field {
			get {
				return this.Field_bfield;
			}
			set {
				this.Field_bfield = value;
			}
		}
		
		/// <summary>
		/// Grace period
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Grace period&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("grace")]
		public long Grace {
			get {
				return this.Grace_bfield;
			}
			set {
				this.Grace_bfield = value;
			}
		}
		
		/// <summary>
		/// Query filter
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Query filter&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("queryFilter")]
		public string QueryFilter {
			get {
				return this.QueryFilter_bfield;
			}
			set {
				this.QueryFilter_bfield = value;
			}
		}
		
		/// <summary>
		/// Repeat notifications enabled
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Repeat notifications enabled&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("repeatNotificationsEnabled")]
		public System.Nullable<bool> RepeatNotificationsEnabled {
			get {
				return this.RepeatNotificationsEnabled_bfield;
			}
			set {
				this.RepeatNotificationsEnabled_bfield = value;
			}
		}
		
		/// <summary>
		/// Threshold
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Threshold&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("threshold")]
		public System.Nullable<long> Threshold {
			get {
				return this.Threshold_bfield;
			}
			set {
				this.Threshold_bfield = value;
			}
		}
		
		/// <summary>
		/// Threshold type
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;dbaas.logs.StreamAlertConditionThresholdTypeEnum&quot;,&quot;Description&quot;:&quot;Threshold type&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("thresholdType")]
		public string ThresholdType {
			get {
				return this.ThresholdType_bfield;
			}
			set {
				this.ThresholdType_bfield = value;
			}
		}
		
		/// <summary>
		/// Time
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Time&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("time")]
		public System.Nullable<long> Time {
			get {
				return this.Time_bfield;
			}
			set {
				this.Time_bfield = value;
			}
		}
		
		/// <summary>
		/// Title
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Title&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("title")]
		public string Title {
			get {
				return this.Title_bfield;
			}
			set {
				this.Title_bfield = value;
			}
		}
		
		/// <summary>
		/// Value
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Value&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("value")]
		public string Value {
			get {
				return this.Value_bfield;
			}
			set {
				this.Value_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Missing description
	/// </summary>
	public class DbaaslogsOutputGraylogStreamAlertUpdate {
		
		private long Backlog_bfield;
		
		private string ConditionType_bfield;
		
		private string ConstraintType_bfield;
		
		private string Field_bfield;
		
		private long Grace_bfield;
		
		private string QueryFilter_bfield;
		
		private System.Nullable<bool> RepeatNotificationsEnabled_bfield;
		
		private System.Nullable<long> Threshold_bfield;
		
		private string ThresholdType_bfield;
		
		private System.Nullable<long> Time_bfield;
		
		private string Title_bfield;
		
		private string Value_bfield;
		
		/// <summary>
		/// Backlog
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Backlog&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("backlog")]
		public long Backlog {
			get {
				return this.Backlog_bfield;
			}
			set {
				this.Backlog_bfield = value;
			}
		}
		
		/// <summary>
		/// Condition type
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;dbaas.logs.StreamAlertConditionConditionTypeEnum&quot;,&quot;Description&quot;:&quot;Condition type&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("conditionType")]
		public string ConditionType {
			get {
				return this.ConditionType_bfield;
			}
			set {
				this.ConditionType_bfield = value;
			}
		}
		
		/// <summary>
		/// Constraint type
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;dbaas.logs.StreamAlertConditionConstraintTypeEnum&quot;,&quot;Description&quot;:&quot;Constraint type&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("constraintType")]
		public string ConstraintType {
			get {
				return this.ConstraintType_bfield;
			}
			set {
				this.ConstraintType_bfield = value;
			}
		}
		
		/// <summary>
		/// Field
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Field&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("field")]
		public string Field {
			get {
				return this.Field_bfield;
			}
			set {
				this.Field_bfield = value;
			}
		}
		
		/// <summary>
		/// Grace period
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Grace period&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("grace")]
		public long Grace {
			get {
				return this.Grace_bfield;
			}
			set {
				this.Grace_bfield = value;
			}
		}
		
		/// <summary>
		/// Query filter
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Query filter&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("queryFilter")]
		public string QueryFilter {
			get {
				return this.QueryFilter_bfield;
			}
			set {
				this.QueryFilter_bfield = value;
			}
		}
		
		/// <summary>
		/// Repeat notifications enabled
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Repeat notifications enabled&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("repeatNotificationsEnabled")]
		public System.Nullable<bool> RepeatNotificationsEnabled {
			get {
				return this.RepeatNotificationsEnabled_bfield;
			}
			set {
				this.RepeatNotificationsEnabled_bfield = value;
			}
		}
		
		/// <summary>
		/// Threshold
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Threshold&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("threshold")]
		public System.Nullable<long> Threshold {
			get {
				return this.Threshold_bfield;
			}
			set {
				this.Threshold_bfield = value;
			}
		}
		
		/// <summary>
		/// Threshold type
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;dbaas.logs.StreamAlertConditionThresholdTypeEnum&quot;,&quot;Description&quot;:&quot;Threshold type&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("thresholdType")]
		public string ThresholdType {
			get {
				return this.ThresholdType_bfield;
			}
			set {
				this.ThresholdType_bfield = value;
			}
		}
		
		/// <summary>
		/// Time
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Time&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("time")]
		public System.Nullable<long> Time {
			get {
				return this.Time_bfield;
			}
			set {
				this.Time_bfield = value;
			}
		}
		
		/// <summary>
		/// Title
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Title&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("title")]
		public string Title {
			get {
				return this.Title_bfield;
			}
			set {
				this.Title_bfield = value;
			}
		}
		
		/// <summary>
		/// Value
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Value&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("value")]
		public string Value {
			get {
				return this.Value_bfield;
			}
			set {
				this.Value_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Missing description
	/// </summary>
	public class DbaaslogsOutputGraylogStreamCreation {
		
		private string ColdStorageCompression_bfield;
		
		private string ColdStorageContent_bfield;
		
		private System.Nullable<bool> ColdStorageEnabled_bfield;
		
		private System.Nullable<bool> ColdStorageNotifyEnabled_bfield;
		
		private System.Nullable<long> ColdStorageRetention_bfield;
		
		private string ColdStorageTarget_bfield;
		
		private string Description_bfield;
		
		private System.Nullable<bool> IndexingEnabled_bfield;
		
		private System.Nullable<long> IndexingMaxSize_bfield;
		
		private System.Nullable<bool> IndexingNotifyEnabled_bfield;
		
		private string ParentStreamId_bfield;
		
		private System.Nullable<bool> PauseIndexingOnMaxSize_bfield;
		
		private string RetentionId_bfield;
		
		private string Title_bfield;
		
		private System.Nullable<bool> WebSocketEnabled_bfield;
		
		/// <summary>
		/// Cold storage compression
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;dbaas.logs.StreamColdStorageCompressionEnum&quot;,&quot;Description&quot;:&quot;Cold storage compression&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("coldStorageCompression")]
		public string ColdStorageCompression {
			get {
				return this.ColdStorageCompression_bfield;
			}
			set {
				this.ColdStorageCompression_bfield = value;
			}
		}
		
		/// <summary>
		/// Cold storage archive content
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;dbaas.logs.StreamColdStorageContentEnum&quot;,&quot;Description&quot;:&quot;Cold storage archive content&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("coldStorageContent")]
		public string ColdStorageContent {
			get {
				return this.ColdStorageContent_bfield;
			}
			set {
				this.ColdStorageContent_bfield = value;
			}
		}
		
		/// <summary>
		/// Cold storage enabled
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Cold storage enabled&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("coldStorageEnabled")]
		public System.Nullable<bool> ColdStorageEnabled {
			get {
				return this.ColdStorageEnabled_bfield;
			}
			set {
				this.ColdStorageEnabled_bfield = value;
			}
		}
		
		/// <summary>
		/// Cold storage notify enabled
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Cold storage notify enabled&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("coldStorageNotifyEnabled")]
		public System.Nullable<bool> ColdStorageNotifyEnabled {
			get {
				return this.ColdStorageNotifyEnabled_bfield;
			}
			set {
				this.ColdStorageNotifyEnabled_bfield = value;
			}
		}
		
		/// <summary>
		/// Cold storage retention time
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Cold storage retention time&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("coldStorageRetention")]
		public System.Nullable<long> ColdStorageRetention {
			get {
				return this.ColdStorageRetention_bfield;
			}
			set {
				this.ColdStorageRetention_bfield = value;
			}
		}
		
		/// <summary>
		/// Cold storage destination
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;dbaas.logs.StreamColdStorageTargetEnum&quot;,&quot;Description&quot;:&quot;Cold storage destination&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("coldStorageTarget")]
		public string ColdStorageTarget {
			get {
				return this.ColdStorageTarget_bfield;
			}
			set {
				this.ColdStorageTarget_bfield = value;
			}
		}
		
		/// <summary>
		/// Description
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Description&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("description")]
		public string Description {
			get {
				return this.Description_bfield;
			}
			set {
				this.Description_bfield = value;
			}
		}
		
		/// <summary>
		/// ES indexing enabled
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;ES indexing enabled&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("indexingEnabled")]
		public System.Nullable<bool> IndexingEnabled {
			get {
				return this.IndexingEnabled_bfield;
			}
			set {
				this.IndexingEnabled_bfield = value;
			}
		}
		
		/// <summary>
		/// Maximum indexing size (in GB)
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Maximum indexing size (in GB)&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("indexingMaxSize")]
		public System.Nullable<long> IndexingMaxSize {
			get {
				return this.IndexingMaxSize_bfield;
			}
			set {
				this.IndexingMaxSize_bfield = value;
			}
		}
		
		/// <summary>
		/// If set, notify when size is near 80, 90 or 100 % of the maximum configured setting
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;If set, notify when size is near 80, 90 or 100 % of the maximum configured setting&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("indexingNotifyEnabled")]
		public System.Nullable<bool> IndexingNotifyEnabled {
			get {
				return this.IndexingNotifyEnabled_bfield;
			}
			set {
				this.IndexingNotifyEnabled_bfield = value;
			}
		}
		
		/// <summary>
		/// Parent stream ID
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Parent stream ID&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("parentStreamId")]
		public string ParentStreamId {
			get {
				return this.ParentStreamId_bfield;
			}
			set {
				this.ParentStreamId_bfield = value;
			}
		}
		
		/// <summary>
		/// If set, pause indexing when maximum size is reach
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;If set, pause indexing when maximum size is reach&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("pauseIndexingOnMaxSize")]
		public System.Nullable<bool> PauseIndexingOnMaxSize {
			get {
				return this.PauseIndexingOnMaxSize_bfield;
			}
			set {
				this.PauseIndexingOnMaxSize_bfield = value;
			}
		}
		
		/// <summary>
		/// Retention ID
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Retention ID&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("retentionId")]
		public string RetentionId {
			get {
				return this.RetentionId_bfield;
			}
			set {
				this.RetentionId_bfield = value;
			}
		}
		
		/// <summary>
		/// Title
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Title&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("title")]
		public string Title {
			get {
				return this.Title_bfield;
			}
			set {
				this.Title_bfield = value;
			}
		}
		
		/// <summary>
		/// Web Socket enabled
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Web Socket enabled&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("webSocketEnabled")]
		public System.Nullable<bool> WebSocketEnabled {
			get {
				return this.WebSocketEnabled_bfield;
			}
			set {
				this.WebSocketEnabled_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Missing description
	/// </summary>
	public class DbaaslogsOutputGraylogStreamRuleCreation {
		
		private string Field_bfield;
		
		private System.Nullable<bool> IsInverted_bfield;
		
		private string Operator_bfield;
		
		private string Value_bfield;
		
		/// <summary>
		/// Field name
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Field name&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("field")]
		public string Field {
			get {
				return this.Field_bfield;
			}
			set {
				this.Field_bfield = value;
			}
		}
		
		/// <summary>
		/// Invert condition
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Invert condition&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("isInverted")]
		public System.Nullable<bool> IsInverted {
			get {
				return this.IsInverted_bfield;
			}
			set {
				this.IsInverted_bfield = value;
			}
		}
		
		/// <summary>
		/// Field operator
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;dbaas.logs.StreamRuleOperatorEnum&quot;,&quot;Description&quot;:&quot;Field operator&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("operator")]
		public string Operator {
			get {
				return this.Operator_bfield;
			}
			set {
				this.Operator_bfield = value;
			}
		}
		
		/// <summary>
		/// Field value
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Field value&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("value")]
		public string Value {
			get {
				return this.Value_bfield;
			}
			set {
				this.Value_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Missing description
	/// </summary>
	public class DbaaslogsOutputGraylogStreamUpdate {
		
		private string ColdStorageCompression_bfield;
		
		private string ColdStorageContent_bfield;
		
		private System.Nullable<bool> ColdStorageEnabled_bfield;
		
		private System.Nullable<bool> ColdStorageNotifyEnabled_bfield;
		
		private System.Nullable<long> ColdStorageRetention_bfield;
		
		private string ColdStorageTarget_bfield;
		
		private string Description_bfield;
		
		private System.Nullable<bool> IndexingEnabled_bfield;
		
		private System.Nullable<long> IndexingMaxSize_bfield;
		
		private System.Nullable<bool> IndexingNotifyEnabled_bfield;
		
		private System.Nullable<bool> PauseIndexingOnMaxSize_bfield;
		
		private string Title_bfield;
		
		private System.Nullable<bool> WebSocketEnabled_bfield;
		
		/// <summary>
		/// Cold storage compression
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;dbaas.logs.StreamColdStorageCompressionEnum&quot;,&quot;Description&quot;:&quot;Cold storage compression&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("coldStorageCompression")]
		public string ColdStorageCompression {
			get {
				return this.ColdStorageCompression_bfield;
			}
			set {
				this.ColdStorageCompression_bfield = value;
			}
		}
		
		/// <summary>
		/// Cold storage content
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;dbaas.logs.StreamColdStorageContentEnum&quot;,&quot;Description&quot;:&quot;Cold storage content&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("coldStorageContent")]
		public string ColdStorageContent {
			get {
				return this.ColdStorageContent_bfield;
			}
			set {
				this.ColdStorageContent_bfield = value;
			}
		}
		
		/// <summary>
		/// Cold storage enabled
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Cold storage enabled&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("coldStorageEnabled")]
		public System.Nullable<bool> ColdStorageEnabled {
			get {
				return this.ColdStorageEnabled_bfield;
			}
			set {
				this.ColdStorageEnabled_bfield = value;
			}
		}
		
		/// <summary>
		/// Cold storage notify enabled
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Cold storage notify enabled&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("coldStorageNotifyEnabled")]
		public System.Nullable<bool> ColdStorageNotifyEnabled {
			get {
				return this.ColdStorageNotifyEnabled_bfield;
			}
			set {
				this.ColdStorageNotifyEnabled_bfield = value;
			}
		}
		
		/// <summary>
		/// Cold storage retention time
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Cold storage retention time&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("coldStorageRetention")]
		public System.Nullable<long> ColdStorageRetention {
			get {
				return this.ColdStorageRetention_bfield;
			}
			set {
				this.ColdStorageRetention_bfield = value;
			}
		}
		
		/// <summary>
		/// Cold storage destination
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;dbaas.logs.StreamColdStorageTargetEnum&quot;,&quot;Description&quot;:&quot;Cold storage destination&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("coldStorageTarget")]
		public string ColdStorageTarget {
			get {
				return this.ColdStorageTarget_bfield;
			}
			set {
				this.ColdStorageTarget_bfield = value;
			}
		}
		
		/// <summary>
		/// Description
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Description&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("description")]
		public string Description {
			get {
				return this.Description_bfield;
			}
			set {
				this.Description_bfield = value;
			}
		}
		
		/// <summary>
		/// ES indexing enabled
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;ES indexing enabled&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("indexingEnabled")]
		public System.Nullable<bool> IndexingEnabled {
			get {
				return this.IndexingEnabled_bfield;
			}
			set {
				this.IndexingEnabled_bfield = value;
			}
		}
		
		/// <summary>
		/// Maximum indexing size (in GB)
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Maximum indexing size (in GB)&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("indexingMaxSize")]
		public System.Nullable<long> IndexingMaxSize {
			get {
				return this.IndexingMaxSize_bfield;
			}
			set {
				this.IndexingMaxSize_bfield = value;
			}
		}
		
		/// <summary>
		/// If set, notify when size is near 80, 90 or 100 % of the maximum configured setting
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;If set, notify when size is near 80, 90 or 100 % of the maximum configured setting&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("indexingNotifyEnabled")]
		public System.Nullable<bool> IndexingNotifyEnabled {
			get {
				return this.IndexingNotifyEnabled_bfield;
			}
			set {
				this.IndexingNotifyEnabled_bfield = value;
			}
		}
		
		/// <summary>
		/// If set, pause indexing when maximum size is reach
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;If set, pause indexing when maximum size is reach&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("pauseIndexingOnMaxSize")]
		public System.Nullable<bool> PauseIndexingOnMaxSize {
			get {
				return this.PauseIndexingOnMaxSize_bfield;
			}
			set {
				this.PauseIndexingOnMaxSize_bfield = value;
			}
		}
		
		/// <summary>
		/// Title
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Title&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("title")]
		public string Title {
			get {
				return this.Title_bfield;
			}
			set {
				this.Title_bfield = value;
			}
		}
		
		/// <summary>
		/// Web socket enabled
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Web socket enabled&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("webSocketEnabled")]
		public System.Nullable<bool> WebSocketEnabled {
			get {
				return this.WebSocketEnabled_bfield;
			}
			set {
				this.WebSocketEnabled_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Role permission
	/// </summary>
	public class DbaaslogsPermission {
		
		private string AliasId_bfield;
		
		private string DashboardId_bfield;
		
		private string IndexId_bfield;
		
		private string KibanaId_bfield;
		
		private string PermissionId_bfield;
		
		private string PermissionType_bfield;
		
		private string StreamId_bfield;
		
		/// <summary>
		/// Associated Elasticsearch alias
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Associated Elasticsearch alias&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("aliasId")]
		public string AliasId {
			get {
				return this.AliasId_bfield;
			}
			set {
				this.AliasId_bfield = value;
			}
		}
		
		/// <summary>
		/// Associated Graylog dashboard
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Associated Graylog dashboard&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("dashboardId")]
		public string DashboardId {
			get {
				return this.DashboardId_bfield;
			}
			set {
				this.DashboardId_bfield = value;
			}
		}
		
		/// <summary>
		/// Associated Elasticsearch index
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Associated Elasticsearch index&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("indexId")]
		public string IndexId {
			get {
				return this.IndexId_bfield;
			}
			set {
				this.IndexId_bfield = value;
			}
		}
		
		/// <summary>
		/// Associated Kibana instance
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Associated Kibana instance&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("kibanaId")]
		public string KibanaId {
			get {
				return this.KibanaId_bfield;
			}
			set {
				this.KibanaId_bfield = value;
			}
		}
		
		/// <summary>
		/// Permission ID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Permission ID&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("permissionId")]
		public string PermissionId {
			get {
				return this.PermissionId_bfield;
			}
			set {
				this.PermissionId_bfield = value;
			}
		}
		
		/// <summary>
		/// Permission type
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;dbaas.logs.PermissionTypeEnum&quot;,&quot;Description&quot;:&quot;Permission type&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("permissionType")]
		public string PermissionType {
			get {
				return this.PermissionType_bfield;
			}
			set {
				this.PermissionType_bfield = value;
			}
		}
		
		/// <summary>
		/// Associated Graylog stream
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Associated Graylog stream&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("streamId")]
		public string StreamId {
			get {
				return this.StreamId_bfield;
			}
			set {
				this.StreamId_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Role
	/// </summary>
	public class DbaaslogsRole {
		
		private System.DateTime CreatedAt_bfield;
		
		private string Description_bfield;
		
		private string Name_bfield;
		
		private string RoleId_bfield;
		
		private System.Nullable<System.DateTime> UpdatedAt_bfield;
		
		/// <summary>
		/// Role creation
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Role creation&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("createdAt")]
		public System.DateTime CreatedAt {
			get {
				return this.CreatedAt_bfield;
			}
			set {
				this.CreatedAt_bfield = value;
			}
		}
		
		/// <summary>
		/// Role description
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Role description&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("description")]
		public string Description {
			get {
				return this.Description_bfield;
			}
			set {
				this.Description_bfield = value;
			}
		}
		
		/// <summary>
		/// Role name
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Role name&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("name")]
		public string Name {
			get {
				return this.Name_bfield;
			}
			set {
				this.Name_bfield = value;
			}
		}
		
		/// <summary>
		/// Role ID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Role ID&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("roleId")]
		public string RoleId {
			get {
				return this.RoleId_bfield;
			}
			set {
				this.RoleId_bfield = value;
			}
		}
		
		/// <summary>
		/// Role last update
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Role last update&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("updatedAt")]
		public System.Nullable<System.DateTime> UpdatedAt {
			get {
				return this.UpdatedAt_bfield;
			}
			set {
				this.UpdatedAt_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Missing description
	/// </summary>
	public class DbaaslogsRoleCreation {
		
		private string Description_bfield;
		
		private string Name_bfield;
		
		/// <summary>
		/// Description
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Description&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("description")]
		public string Description {
			get {
				return this.Description_bfield;
			}
			set {
				this.Description_bfield = value;
			}
		}
		
		/// <summary>
		/// Name
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Name&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("name")]
		public string Name {
			get {
				return this.Name_bfield;
			}
			set {
				this.Name_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Missing description
	/// </summary>
	public class DbaaslogsRoleMemberCreation {
		
		private string Note_bfield;
		
		private string Username_bfield;
		
		/// <summary>
		/// Custom note
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Custom note&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("note")]
		public string Note {
			get {
				return this.Note_bfield;
			}
			set {
				this.Note_bfield = value;
			}
		}
		
		/// <summary>
		/// Username
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Username&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("username")]
		public string Username {
			get {
				return this.Username_bfield;
			}
			set {
				this.Username_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Missing description
	/// </summary>
	public class DbaaslogsRoleMemberUpdate {
		
		private string Note_bfield;
		
		/// <summary>
		/// Custom note
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Custom note&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("note")]
		public string Note {
			get {
				return this.Note_bfield;
			}
			set {
				this.Note_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Missing description
	/// </summary>
	public class DbaaslogsRolePermissionAliasCreation {
		
		private string AliasId_bfield;
		
		/// <summary>
		/// Alias ID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Alias ID&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("aliasId")]
		public string AliasId {
			get {
				return this.AliasId_bfield;
			}
			set {
				this.AliasId_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Missing description
	/// </summary>
	public class DbaaslogsRolePermissionDashboardCreation {
		
		private string DashboardId_bfield;
		
		private string PermissionType_bfield;
		
		/// <summary>
		/// Dashboard ID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Dashboard ID&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("dashboardId")]
		public string DashboardId {
			get {
				return this.DashboardId_bfield;
			}
			set {
				this.DashboardId_bfield = value;
			}
		}
		
		/// <summary>
		/// Permission type
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;dbaas.logs.PermissionTypeEnum&quot;,&quot;Description&quot;:&quot;Permission type&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("permissionType")]
		public string PermissionType {
			get {
				return this.PermissionType_bfield;
			}
			set {
				this.PermissionType_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Missing description
	/// </summary>
	public class DbaaslogsRolePermissionIndexCreation {
		
		private string IndexId_bfield;
		
		private string PermissionType_bfield;
		
		/// <summary>
		/// Index ID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Index ID&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("indexId")]
		public string IndexId {
			get {
				return this.IndexId_bfield;
			}
			set {
				this.IndexId_bfield = value;
			}
		}
		
		/// <summary>
		/// Permission type
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;dbaas.logs.PermissionTypeEnum&quot;,&quot;Description&quot;:&quot;Permission type&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("permissionType")]
		public string PermissionType {
			get {
				return this.PermissionType_bfield;
			}
			set {
				this.PermissionType_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Missing description
	/// </summary>
	public class DbaaslogsRolePermissionKibanaCreation {
		
		private string KibanaId_bfield;
		
		private string PermissionType_bfield;
		
		/// <summary>
		/// Kibana ID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Kibana ID&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("kibanaId")]
		public string KibanaId {
			get {
				return this.KibanaId_bfield;
			}
			set {
				this.KibanaId_bfield = value;
			}
		}
		
		/// <summary>
		/// Permission type
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;dbaas.logs.PermissionTypeEnum&quot;,&quot;Description&quot;:&quot;Permission type&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("permissionType")]
		public string PermissionType {
			get {
				return this.PermissionType_bfield;
			}
			set {
				this.PermissionType_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Missing description
	/// </summary>
	public class DbaaslogsRolePermissionStreamCreation {
		
		private string StreamId_bfield;
		
		/// <summary>
		/// Stream ID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Stream ID&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("streamId")]
		public string StreamId {
			get {
				return this.StreamId_bfield;
			}
			set {
				this.StreamId_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Missing description
	/// </summary>
	public class DbaaslogsRoleUpdate {
		
		private string Description_bfield;
		
		private string Name_bfield;
		
		/// <summary>
		/// Description
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Description&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("description")]
		public string Description {
			get {
				return this.Description_bfield;
			}
			set {
				this.Description_bfield = value;
			}
		}
		
		/// <summary>
		/// Name
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Name&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("name")]
		public string Name {
			get {
				return this.Name_bfield;
			}
			set {
				this.Name_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Service
	/// </summary>
	public class DbaaslogsService {
		
		private System.DateTime CreatedAt_bfield;
		
		private string DisplayName_bfield;
		
		private bool IsClusterOwner_bfield;
		
		private string Plan_bfield;
		
		private string ServiceName_bfield;
		
		private string State_bfield;
		
		private System.Nullable<System.DateTime> UpdatedAt_bfield;
		
		private string Username_bfield;
		
		/// <summary>
		/// Service creation
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Service creation&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("createdAt")]
		public System.DateTime CreatedAt {
			get {
				return this.CreatedAt_bfield;
			}
			set {
				this.CreatedAt_bfield = value;
			}
		}
		
		/// <summary>
		/// Service custom name
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Service custom name&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("displayName")]
		public string DisplayName {
			get {
				return this.DisplayName_bfield;
			}
			set {
				this.DisplayName_bfield = value;
			}
		}
		
		/// <summary>
		/// If set, can perform extra action on cluster
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;If set, can perform extra action on cluster&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("isClusterOwner")]
		public bool IsClusterOwner {
			get {
				return this.IsClusterOwner_bfield;
			}
			set {
				this.IsClusterOwner_bfield = value;
			}
		}
		
		/// <summary>
		/// Service plan
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;dbaas.logs.ServicePlanEnum&quot;,&quot;Description&quot;:&quot;Service plan&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("plan")]
		public string Plan {
			get {
				return this.Plan_bfield;
			}
			set {
				this.Plan_bfield = value;
			}
		}
		
		/// <summary>
		/// Service name
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Service name&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("serviceName")]
		public string ServiceName {
			get {
				return this.ServiceName_bfield;
			}
			set {
				this.ServiceName_bfield = value;
			}
		}
		
		/// <summary>
		/// Service state
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;dbaas.logs.ServiceStateEnum&quot;,&quot;Description&quot;:&quot;Service state&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("state")]
		public string State {
			get {
				return this.State_bfield;
			}
			set {
				this.State_bfield = value;
			}
		}
		
		/// <summary>
		/// Service last update
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Service last update&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("updatedAt")]
		public System.Nullable<System.DateTime> UpdatedAt {
			get {
				return this.UpdatedAt_bfield;
			}
			set {
				this.UpdatedAt_bfield = value;
			}
		}
		
		/// <summary>
		/// Username on DBaaS Logs
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Username on DBaaS Logs&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("username")]
		public string Username {
			get {
				return this.Username_bfield;
			}
			set {
				this.Username_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Metrics access
	/// </summary>
	public class DbaaslogsServiceMetric {
		
		private string Host_bfield;
		
		private string Token_bfield;
		
		/// <summary>
		/// Metrics server url
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Metrics server url&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("host")]
		public string Host {
			get {
				return this.Host_bfield;
			}
			set {
				this.Host_bfield = value;
			}
		}
		
		/// <summary>
		/// Metrics credentials
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Metrics credentials&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("token")]
		public string Token {
			get {
				return this.Token_bfield;
			}
			set {
				this.Token_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Graylog stream
	/// </summary>
	public class DbaaslogsStream {
		
		private bool CanAlert_bfield;
		
		private string ColdStorageCompression_bfield;
		
		private string ColdStorageContent_bfield;
		
		private System.Nullable<bool> ColdStorageEnabled_bfield;
		
		private System.Nullable<bool> ColdStorageNotifyEnabled_bfield;
		
		private System.Nullable<long> ColdStorageRetention_bfield;
		
		private string ColdStorageTarget_bfield;
		
		private System.DateTime CreatedAt_bfield;
		
		private string Description_bfield;
		
		private System.Nullable<bool> IndexingEnabled_bfield;
		
		private System.Nullable<long> IndexingMaxSize_bfield;
		
		private System.Nullable<bool> IndexingNotifyEnabled_bfield;
		
		private bool IsEditable_bfield;
		
		private bool IsShareable_bfield;
		
		private long NbAlertCondition_bfield;
		
		private long NbArchive_bfield;
		
		private string ParentStreamId_bfield;
		
		private System.Nullable<bool> PauseIndexingOnMaxSize_bfield;
		
		private string RetentionId_bfield;
		
		private string StreamId_bfield;
		
		private string Title_bfield;
		
		private System.Nullable<System.DateTime> UpdatedAt_bfield;
		
		private System.Nullable<bool> WebSocketEnabled_bfield;
		
		/// <summary>
		/// Indicates if the current user can create alert on the stream
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Indicates if the current user can create alert on the stream&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("canAlert")]
		public bool CanAlert {
			get {
				return this.CanAlert_bfield;
			}
			set {
				this.CanAlert_bfield = value;
			}
		}
		
		/// <summary>
		/// Cold storage compression method
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;dbaas.logs.StreamColdStorageCompressionEnum&quot;,&quot;Description&quot;:&quot;Cold storage compression method&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("coldStorageCompression")]
		public string ColdStorageCompression {
			get {
				return this.ColdStorageCompression_bfield;
			}
			set {
				this.ColdStorageCompression_bfield = value;
			}
		}
		
		/// <summary>
		/// ColdStorage content
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;dbaas.logs.StreamColdStorageContentEnum&quot;,&quot;Description&quot;:&quot;ColdStorage content&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("coldStorageContent")]
		public string ColdStorageContent {
			get {
				return this.ColdStorageContent_bfield;
			}
			set {
				this.ColdStorageContent_bfield = value;
			}
		}
		
		/// <summary>
		/// Is Cold storage enabled?
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Is Cold storage enabled?&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("coldStorageEnabled")]
		public System.Nullable<bool> ColdStorageEnabled {
			get {
				return this.ColdStorageEnabled_bfield;
			}
			set {
				this.ColdStorageEnabled_bfield = value;
			}
		}
		
		/// <summary>
		/// Notify on new Cold storage archive
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Notify on new Cold storage archive&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("coldStorageNotifyEnabled")]
		public System.Nullable<bool> ColdStorageNotifyEnabled {
			get {
				return this.ColdStorageNotifyEnabled_bfield;
			}
			set {
				this.ColdStorageNotifyEnabled_bfield = value;
			}
		}
		
		/// <summary>
		/// Cold storage retention in year
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Cold storage retention in year&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("coldStorageRetention")]
		public System.Nullable<long> ColdStorageRetention {
			get {
				return this.ColdStorageRetention_bfield;
			}
			set {
				this.ColdStorageRetention_bfield = value;
			}
		}
		
		/// <summary>
		/// ColdStorage destination
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;dbaas.logs.StreamColdStorageTargetEnum&quot;,&quot;Description&quot;:&quot;ColdStorage destination&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("coldStorageTarget")]
		public string ColdStorageTarget {
			get {
				return this.ColdStorageTarget_bfield;
			}
			set {
				this.ColdStorageTarget_bfield = value;
			}
		}
		
		/// <summary>
		/// Stream creation
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Stream creation&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("createdAt")]
		public System.DateTime CreatedAt {
			get {
				return this.CreatedAt_bfield;
			}
			set {
				this.CreatedAt_bfield = value;
			}
		}
		
		/// <summary>
		/// Stream description
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Stream description&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("description")]
		public string Description {
			get {
				return this.Description_bfield;
			}
			set {
				this.Description_bfield = value;
			}
		}
		
		/// <summary>
		/// Enable ES indexing
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Enable ES indexing&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("indexingEnabled")]
		public System.Nullable<bool> IndexingEnabled {
			get {
				return this.IndexingEnabled_bfield;
			}
			set {
				this.IndexingEnabled_bfield = value;
			}
		}
		
		/// <summary>
		/// Maximum indexing size (in GB)
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Maximum indexing size (in GB)&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("indexingMaxSize")]
		public System.Nullable<long> IndexingMaxSize {
			get {
				return this.IndexingMaxSize_bfield;
			}
			set {
				this.IndexingMaxSize_bfield = value;
			}
		}
		
		/// <summary>
		/// If set, notify when size is near 80, 90 or 100 % of the maximum configured setting
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;If set, notify when size is near 80, 90 or 100 % of the maximum configured setting&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("indexingNotifyEnabled")]
		public System.Nullable<bool> IndexingNotifyEnabled {
			get {
				return this.IndexingNotifyEnabled_bfield;
			}
			set {
				this.IndexingNotifyEnabled_bfield = value;
			}
		}
		
		/// <summary>
		/// Indicates if you are allowed to edit entry
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Indicates if you are allowed to edit entry&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("isEditable")]
		public bool IsEditable {
			get {
				return this.IsEditable_bfield;
			}
			set {
				this.IsEditable_bfield = value;
			}
		}
		
		/// <summary>
		/// Indicates if you are allowed to share entry
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Indicates if you are allowed to share entry&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("isShareable")]
		public bool IsShareable {
			get {
				return this.IsShareable_bfield;
			}
			set {
				this.IsShareable_bfield = value;
			}
		}
		
		/// <summary>
		/// Number of alert condition
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Number of alert condition&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("nbAlertCondition")]
		public long NbAlertCondition {
			get {
				return this.NbAlertCondition_bfield;
			}
			set {
				this.NbAlertCondition_bfield = value;
			}
		}
		
		/// <summary>
		/// Number of coldstored archives
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Number of coldstored archives&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("nbArchive")]
		public long NbArchive {
			get {
				return this.NbArchive_bfield;
			}
			set {
				this.NbArchive_bfield = value;
			}
		}
		
		/// <summary>
		/// Parent stream ID
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Parent stream ID&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("parentStreamId")]
		public string ParentStreamId {
			get {
				return this.ParentStreamId_bfield;
			}
			set {
				this.ParentStreamId_bfield = value;
			}
		}
		
		/// <summary>
		/// If set, pause indexing when maximum size is reach
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;If set, pause indexing when maximum size is reach&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("pauseIndexingOnMaxSize")]
		public System.Nullable<bool> PauseIndexingOnMaxSize {
			get {
				return this.PauseIndexingOnMaxSize_bfield;
			}
			set {
				this.PauseIndexingOnMaxSize_bfield = value;
			}
		}
		
		/// <summary>
		/// Retention ID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Retention ID&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("retentionId")]
		public string RetentionId {
			get {
				return this.RetentionId_bfield;
			}
			set {
				this.RetentionId_bfield = value;
			}
		}
		
		/// <summary>
		/// Stream ID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Stream ID&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("streamId")]
		public string StreamId {
			get {
				return this.StreamId_bfield;
			}
			set {
				this.StreamId_bfield = value;
			}
		}
		
		/// <summary>
		/// Stream description
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Stream description&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("title")]
		public string Title {
			get {
				return this.Title_bfield;
			}
			set {
				this.Title_bfield = value;
			}
		}
		
		/// <summary>
		/// Stream last update
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Stream last update&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("updatedAt")]
		public System.Nullable<System.DateTime> UpdatedAt {
			get {
				return this.UpdatedAt_bfield;
			}
			set {
				this.UpdatedAt_bfield = value;
			}
		}
		
		/// <summary>
		/// Enable Websocket
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Enable Websocket&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("webSocketEnabled")]
		public System.Nullable<bool> WebSocketEnabled {
			get {
				return this.WebSocketEnabled_bfield;
			}
			set {
				this.WebSocketEnabled_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Alert condition
	/// </summary>
	public class DbaaslogsStreamAlertCondition {
		
		private string AlertId_bfield;
		
		private long Backlog_bfield;
		
		private string ConditionType_bfield;
		
		private string ConstraintType_bfield;
		
		private string Field_bfield;
		
		private long Grace_bfield;
		
		private string QueryFilter_bfield;
		
		private System.Nullable<bool> RepeatNotificationsEnabled_bfield;
		
		private System.Nullable<long> Threshold_bfield;
		
		private string ThresholdType_bfield;
		
		private System.Nullable<long> Time_bfield;
		
		private string Title_bfield;
		
		private string Value_bfield;
		
		/// <summary>
		/// Stream alert condition ID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Stream alert condition ID&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("alertId")]
		public string AlertId {
			get {
				return this.AlertId_bfield;
			}
			set {
				this.AlertId_bfield = value;
			}
		}
		
		/// <summary>
		/// Backlog size
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Backlog size&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("backlog")]
		public long Backlog {
			get {
				return this.Backlog_bfield;
			}
			set {
				this.Backlog_bfield = value;
			}
		}
		
		/// <summary>
		/// Alert condition type
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;dbaas.logs.StreamAlertConditionConditionTypeEnum&quot;,&quot;Description&quot;:&quot;Alert condition type&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("conditionType")]
		public string ConditionType {
			get {
				return this.ConditionType_bfield;
			}
			set {
				this.ConditionType_bfield = value;
			}
		}
		
		/// <summary>
		/// Constraint type
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;dbaas.logs.StreamAlertConditionConstraintTypeEnum&quot;,&quot;Description&quot;:&quot;Constraint type&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("constraintType")]
		public string ConstraintType {
			get {
				return this.ConstraintType_bfield;
			}
			set {
				this.ConstraintType_bfield = value;
			}
		}
		
		/// <summary>
		/// Field name
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Field name&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("field")]
		public string Field {
			get {
				return this.Field_bfield;
			}
			set {
				this.Field_bfield = value;
			}
		}
		
		/// <summary>
		/// Grace period in minutes
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Grace period in minutes&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("grace")]
		public long Grace {
			get {
				return this.Grace_bfield;
			}
			set {
				this.Grace_bfield = value;
			}
		}
		
		/// <summary>
		/// Query filter
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Query filter&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("queryFilter")]
		public string QueryFilter {
			get {
				return this.QueryFilter_bfield;
			}
			set {
				this.QueryFilter_bfield = value;
			}
		}
		
		/// <summary>
		/// Repeat notifications
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Repeat notifications&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("repeatNotificationsEnabled")]
		public System.Nullable<bool> RepeatNotificationsEnabled {
			get {
				return this.RepeatNotificationsEnabled_bfield;
			}
			set {
				this.RepeatNotificationsEnabled_bfield = value;
			}
		}
		
		/// <summary>
		/// Threshold
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Threshold&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("threshold")]
		public System.Nullable<long> Threshold {
			get {
				return this.Threshold_bfield;
			}
			set {
				this.Threshold_bfield = value;
			}
		}
		
		/// <summary>
		/// Threshold condition
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;dbaas.logs.StreamAlertConditionThresholdTypeEnum&quot;,&quot;Description&quot;:&quot;Threshold condition&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("thresholdType")]
		public string ThresholdType {
			get {
				return this.ThresholdType_bfield;
			}
			set {
				this.ThresholdType_bfield = value;
			}
		}
		
		/// <summary>
		/// Time lapse in minutes
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Time lapse in minutes&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("time")]
		public System.Nullable<long> Time {
			get {
				return this.Time_bfield;
			}
			set {
				this.Time_bfield = value;
			}
		}
		
		/// <summary>
		/// Condition label
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Condition label&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("title")]
		public string Title {
			get {
				return this.Title_bfield;
			}
			set {
				this.Title_bfield = value;
			}
		}
		
		/// <summary>
		/// Field value
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Field value&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("value")]
		public string Value {
			get {
				return this.Value_bfield;
			}
			set {
				this.Value_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Stream rule
	/// </summary>
	public class DbaaslogsStreamRule {
		
		private string Field_bfield;
		
		private System.Nullable<bool> IsInverted_bfield;
		
		private string Operator_bfield;
		
		private string RuleId_bfield;
		
		private string Value_bfield;
		
		/// <summary>
		/// Field name
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Field name&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("field")]
		public string Field {
			get {
				return this.Field_bfield;
			}
			set {
				this.Field_bfield = value;
			}
		}
		
		/// <summary>
		/// Invert condition
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Invert condition&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("isInverted")]
		public System.Nullable<bool> IsInverted {
			get {
				return this.IsInverted_bfield;
			}
			set {
				this.IsInverted_bfield = value;
			}
		}
		
		/// <summary>
		/// Field operator
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;dbaas.logs.StreamRuleOperatorEnum&quot;,&quot;Description&quot;:&quot;Field operator&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("operator")]
		public string Operator {
			get {
				return this.Operator_bfield;
			}
			set {
				this.Operator_bfield = value;
			}
		}
		
		/// <summary>
		/// Stream rule ID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Stream rule ID&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("ruleId")]
		public string RuleId {
			get {
				return this.RuleId_bfield;
			}
			set {
				this.RuleId_bfield = value;
			}
		}
		
		/// <summary>
		/// Field value
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Field value&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("value")]
		public string Value {
			get {
				return this.Value_bfield;
			}
			set {
				this.Value_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Temporary url informations
	/// </summary>
	public class DbaaslogsTemporaryLogsLink {
		
		private System.DateTime ExpirationDate_bfield;
		
		private string Url_bfield;
		
		/// <summary>
		/// Temporary url expiration date
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Temporary url expiration date&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("expirationDate")]
		public System.DateTime ExpirationDate {
			get {
				return this.ExpirationDate_bfield;
			}
			set {
				this.ExpirationDate_bfield = value;
			}
		}
		
		/// <summary>
		/// Temporary url
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Temporary url&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("url")]
		public string Url {
			get {
				return this.Url_bfield;
			}
			set {
				this.Url_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Config test results
	/// </summary>
	public class DbaaslogsTestResult {
		
		private string Stderr_bfield;
		
		private string Stdout_bfield;
		
		private System.Nullable<System.DateTime> UpdatedAt_bfield;
		
		/// <summary>
		/// Standard error
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Standard error&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("stderr")]
		public string Stderr {
			get {
				return this.Stderr_bfield;
			}
			set {
				this.Stderr_bfield = value;
			}
		}
		
		/// <summary>
		/// Standard output
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Standard output&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("stdout")]
		public string Stdout {
			get {
				return this.Stdout_bfield;
			}
			set {
				this.Stdout_bfield = value;
			}
		}
		
		/// <summary>
		/// Last config test update
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Last config test update&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("updatedAt")]
		public System.Nullable<System.DateTime> UpdatedAt {
			get {
				return this.UpdatedAt_bfield;
			}
			set {
				this.UpdatedAt_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Token
	/// </summary>
	public class DbaaslogsToken {
		
		private string ClusterId_bfield;
		
		private System.DateTime CreatedAt_bfield;
		
		private string Name_bfield;
		
		private string TokenId_bfield;
		
		private System.Nullable<System.DateTime> UpdatedAt_bfield;
		
		private string Value_bfield;
		
		/// <summary>
		/// Cluster ID
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Cluster ID&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("clusterId")]
		public string ClusterId {
			get {
				return this.ClusterId_bfield;
			}
			set {
				this.ClusterId_bfield = value;
			}
		}
		
		/// <summary>
		/// Token creation
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Token creation&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("createdAt")]
		public System.DateTime CreatedAt {
			get {
				return this.CreatedAt_bfield;
			}
			set {
				this.CreatedAt_bfield = value;
			}
		}
		
		/// <summary>
		/// Token name
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Token name&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("name")]
		public string Name {
			get {
				return this.Name_bfield;
			}
			set {
				this.Name_bfield = value;
			}
		}
		
		/// <summary>
		/// Token ID
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Token ID&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("tokenId")]
		public string TokenId {
			get {
				return this.TokenId_bfield;
			}
			set {
				this.TokenId_bfield = value;
			}
		}
		
		/// <summary>
		/// Token last update
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Token last update&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("updatedAt")]
		public System.Nullable<System.DateTime> UpdatedAt {
			get {
				return this.UpdatedAt_bfield;
			}
			set {
				this.UpdatedAt_bfield = value;
			}
		}
		
		/// <summary>
		/// Token value
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Token value&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("value")]
		public string Value {
			get {
				return this.Value_bfield;
			}
			set {
				this.Value_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Missing description
	/// </summary>
	public class DbaaslogsTokenCreation {
		
		private string ClusterId_bfield;
		
		private string Name_bfield;
		
		/// <summary>
		/// Cluster ID
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;uuid&quot;,&quot;Description&quot;:&quot;Cluster ID&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("clusterId")]
		public string ClusterId {
			get {
				return this.ClusterId_bfield;
			}
			set {
				this.ClusterId_bfield = value;
			}
		}
		
		/// <summary>
		/// Token name
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Token name&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("name")]
		public string Name {
			get {
				return this.Name_bfield;
			}
			set {
				this.Name_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Missing description
	/// </summary>
	public class DbaaslogsUpdate {
		
		private string DisplayName_bfield;
		
		/// <summary>
		/// Service custom name
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Service custom name&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("displayName")]
		public string DisplayName {
			get {
				return this.DisplayName_bfield;
			}
			set {
				this.DisplayName_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Web address
	/// </summary>
	public class DbaaslogsUrl {
		
		private string Address_bfield;
		
		private string Type_bfield;
		
		/// <summary>
		/// Web URI
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Web URI&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("address")]
		public string Address {
			get {
				return this.Address_bfield;
			}
			set {
				this.Address_bfield = value;
			}
		}
		
		/// <summary>
		/// Service type
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;dbaas.logs.UrlTypeEnum&quot;,&quot;Description&quot;:&quot;Service type&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("type")]
		public string Type {
			get {
				return this.Type_bfield;
			}
			set {
				this.Type_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Missing description
	/// </summary>
	public class DbaaslogsUserChangePasswordCreation {
		
		private string Password_bfield;
		
		/// <summary>
		/// Password must be at least 12 characters long contain a number, an uppercase, a lowercase and a special letter
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;password&quot;,&quot;Description&quot;:&quot;Password must be at least 12 characters long contain a number, an uppercase, a lowercase and a special letter&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("password")]
		public string Password {
			get {
				return this.Password_bfield;
			}
			set {
				this.Password_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Map a possible renew for a specific service
	/// </summary>
	public class ServiceRenewType {
		
		private bool Automatic_bfield;
		
		private bool DeleteAtExpiration_bfield;
		
		private bool Forced_bfield;
		
		private System.Nullable<bool> ManualPayment_bfield;
		
		private System.Nullable<long> Period_bfield;
		
		/// <summary>
		/// The service is automatically renewed
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;The service is automatically renewed&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("automatic")]
		public bool Automatic {
			get {
				return this.Automatic_bfield;
			}
			set {
				this.Automatic_bfield = value;
			}
		}
		
		/// <summary>
		/// The service will be deleted at expiration
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;The service will be deleted at expiration&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("deleteAtExpiration")]
		public bool DeleteAtExpiration {
			get {
				return this.DeleteAtExpiration_bfield;
			}
			set {
				this.DeleteAtExpiration_bfield = value;
			}
		}
		
		/// <summary>
		/// The service forced to be renewed
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;The service forced to be renewed&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("forced")]
		public bool Forced {
			get {
				return this.Forced_bfield;
			}
			set {
				this.Forced_bfield = value;
			}
		}
		
		/// <summary>
		/// The service needs to be manually renewed and paid
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;The service needs to be manually renewed and paid&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("manualPayment")]
		public System.Nullable<bool> ManualPayment {
			get {
				return this.ManualPayment_bfield;
			}
			set {
				this.ManualPayment_bfield = value;
			}
		}
		
		/// <summary>
		/// period of renew in month
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;period of renew in month&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("period")]
		public System.Nullable<long> Period {
			get {
				return this.Period_bfield;
			}
			set {
				this.Period_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Details about a Service
	/// </summary>
	public class ServicesService {
		
		private bool CanDeleteAtExpiration_bfield;
		
		private string ContactAdmin_bfield;
		
		private string ContactBilling_bfield;
		
		private string ContactTech_bfield;
		
		private string Creation_bfield;
		
		private string Domain_bfield;
		
		private string EngagedUpTo_bfield;
		
		private string Expiration_bfield;
		
		private long[] PossibleRenewPeriod_bfield;
		
		private ServiceRenewType Renew_bfield;
		
		private string RenewalType_bfield;
		
		private long ServiceId_bfield;
		
		private string Status_bfield;
		
		/// <summary>
		/// Indicates that the service can be set up to be deleted at expiration
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Indicates that the service can be set up to be deleted at expiration&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("canDeleteAtExpiration")]
		public bool CanDeleteAtExpiration {
			get {
				return this.CanDeleteAtExpiration_bfield;
			}
			set {
				this.CanDeleteAtExpiration_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("contactAdmin")]
		public string ContactAdmin {
			get {
				return this.ContactAdmin_bfield;
			}
			set {
				this.ContactAdmin_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("contactBilling")]
		public string ContactBilling {
			get {
				return this.ContactBilling_bfield;
			}
			set {
				this.ContactBilling_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("contactTech")]
		public string ContactTech {
			get {
				return this.ContactTech_bfield;
			}
			set {
				this.ContactTech_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;date&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("creation")]
		public string Creation {
			get {
				return this.Creation_bfield;
			}
			set {
				this.Creation_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("domain")]
		public string Domain {
			get {
				return this.Domain_bfield;
			}
			set {
				this.Domain_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;date&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("engagedUpTo")]
		public string EngagedUpTo {
			get {
				return this.EngagedUpTo_bfield;
			}
			set {
				this.EngagedUpTo_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;date&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("expiration")]
		public string Expiration {
			get {
				return this.Expiration_bfield;
			}
			set {
				this.Expiration_bfield = value;
			}
		}
		
		/// <summary>
		/// All the possible renew period of your service in month
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long[]&quot;,&quot;Description&quot;:&quot;All the possible renew period of your service in month&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("possibleRenewPeriod")]
		public long[] PossibleRenewPeriod {
			get {
				return this.PossibleRenewPeriod_bfield;
			}
			set {
				this.PossibleRenewPeriod_bfield = value;
			}
		}
		
		/// <summary>
		/// Way of handling the renew
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;service.RenewType&quot;,&quot;Description&quot;:&quot;Way of handling the renew&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("renew")]
		public ServiceRenewType Renew {
			get {
				return this.Renew_bfield;
			}
			set {
				this.Renew_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;service.RenewalTypeEnum&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("renewalType")]
		public string RenewalType {
			get {
				return this.RenewalType_bfield;
			}
			set {
				this.RenewalType_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("serviceId")]
		public long ServiceId {
			get {
				return this.ServiceId_bfield;
			}
			set {
				this.ServiceId_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;service.StateEnum&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("status")]
		public string Status {
			get {
				return this.Status_bfield;
			}
			set {
				this.Status_bfield = value;
			}
		}
	}
}
