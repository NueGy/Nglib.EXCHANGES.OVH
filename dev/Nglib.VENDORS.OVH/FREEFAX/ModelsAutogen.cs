//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Newtonsoft.Json;
using Nglib.VENDORS.OVH.SHARED;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Threading.Tasks;


// [GET] "/freefax"  string[]--
//[GET] "/freefax/credits"  freefax.BalanceInformations--
//[GET] "/freefax/{serviceName}"  freefax.FreefaxProperties--serviceName
//[PUT] "/freefax/{serviceName}"  void--,serviceName
//[POST] "/freefax/{serviceName}/changePassword"  password--serviceName
//[GET] "/freefax/{serviceName}/mainService"  string--serviceName
//[GET] "/freefax/{serviceName}/serviceInfos"  services.Service--serviceName
//[PUT] "/freefax/{serviceName}/serviceInfos"  void--,serviceName
//[GET] "/freefax/{serviceName}/voicemail"  telephony.VoicemailProperties--serviceName
//[PUT] "/freefax/{serviceName}/voicemail"  void--,serviceName
//[POST] "/freefax/{serviceName}/voicemail/changePassword"  void--password,serviceName
//[POST] "/freefax/{serviceName}/voicemail/changeRouting"  void--routing,serviceName
//[GET] "/freefax/{serviceName}/voicemail/routing"  telephony.VoicefaxRoutingEnum--serviceName
//[GET] "/freefax/{serviceName}/voicemail/voicemailNumbers"  telephony.VoicemailNumbers--serviceName
namespace Nglib.VENDORS.OVH.FREEFAX {
	
	
	/// <summary>
	/// Detailed renewal type of a service
	/// </summary>
	public enum ServiceRenewalTypeEnum {
		
		[EnumMember(Value="automaticForcedProduct")]
		AutomaticForcedProduct,
		
		[EnumMember(Value="automaticV2012")]
		AutomaticV2012,
		
		[EnumMember(Value="automaticV2014")]
		AutomaticV2014,
		
		[EnumMember(Value="automaticV2016")]
		AutomaticV2016,
		
		[EnumMember(Value="manual")]
		Manual,
		
		[EnumMember(Value="oneShot")]
		OneShot,
		
		[EnumMember(Value="option")]
		Option,
	}
	
	public enum ServiceStateEnum {
		
		[EnumMember(Value="expired")]
		Expired,
		
		[EnumMember(Value="inCreation")]
		InCreation,
		
		[EnumMember(Value="ok")]
		Ok,
		
		[EnumMember(Value="pendingDebt")]
		PendingDebt,
		
		[EnumMember(Value="unPaid")]
		UnPaid,
	}
	
	/// <summary>
	/// Available quality for fax documents
	/// </summary>
	public enum TelephonyFaxQualityEnum {
		
		[EnumMember(Value="best")]
		Best,
		
		[EnumMember(Value="high")]
		High,
		
		[EnumMember(Value="normal")]
		Normal,
	}
	
	/// <summary>
	/// Voicemail audio format
	/// </summary>
	public enum TelephonyServiceVoicemailAudioFormatEnum {
		
		[EnumMember(Value="aiff")]
		Aiff,
		
		[EnumMember(Value="au")]
		Au,
		
		[EnumMember(Value="flac")]
		Flac,
		
		[EnumMember(Value="mp3")]
		Mp3,
		
		[EnumMember(Value="ogg")]
		Ogg,
		
		[EnumMember(Value="wav")]
		Wav,
	}
	
	/// <summary>
	/// Voicemail configuration
	/// </summary>
	public enum TelephonyServiceVoicemailMailOptionEnum {
		
		[EnumMember(Value="attachment")]
		Attachment,
		
		[EnumMember(Value="simple")]
		Simple,
	}
	
	/// <summary>
	/// All existing type of routing for a voicemail
	/// </summary>
	public enum TelephonyVoicefaxRoutingEnum {
		
		[EnumMember(Value="fax")]
		Fax,
		
		[EnumMember(Value="voicemail")]
		Voicemail,
	}
	
	/// <summary>
	/// Greeting type
	/// </summary>
	public enum TelephonyVoicemailGreetingEnum {
		
		[EnumMember(Value="default")]
		Default,
		
		[EnumMember(Value="full")]
		Full,
		
		[EnumMember(Value="short")]
		Short,
	}
	
	/// <summary>
	/// Return credit balance informations structure
	/// </summary>
	public class FreefaxBalanceInformations {
		
		private long Faxs_bfield;
		
		private long Points_bfield;
		
		/// <summary>
		/// The number of equivalement remaining french faxs
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;The number of equivalement remaining french faxs&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("faxs")]
		public long Faxs {
			get {
				return this.Faxs_bfield;
			}
			set {
				this.Faxs_bfield = value;
			}
		}
		
		/// <summary>
		/// Total balance available in points
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Total balance available in points&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("points")]
		public long Points {
			get {
				return this.Points_bfield;
			}
			set {
				this.Points_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Freefax properties
	/// </summary>
	public class FreefaxFreefaxProperties {
		
		private TelephonyFaxSendingTries FaxMaxCall_bfield;
		
		private string FaxQuality_bfield;
		
		private string FaxTagLine_bfield;
		
		private string FromEmail_bfield;
		
		private string FromName_bfield;
		
		private string Number_bfield;
		
		private string[] RedirectionEmail_bfield;
		
		/// <summary>
		/// Number of max tentative of fax sending
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;telephony.FaxSendingTries&quot;,&quot;Description&quot;:&quot;Number of max tentative of fax sending&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("faxMaxCall")]
		public TelephonyFaxSendingTries FaxMaxCall {
			get {
				return this.FaxMaxCall_bfield;
			}
			set {
				this.FaxMaxCall_bfield = value;
			}
		}
		
		/// <summary>
		/// Quality of fax sending
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;telephony.FaxQualityEnum&quot;,&quot;Description&quot;:&quot;Quality of fax sending&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("faxQuality")]
		public string FaxQuality {
			get {
				return this.FaxQuality_bfield;
			}
			set {
				this.FaxQuality_bfield = value;
			}
		}
		
		/// <summary>
		/// Customised freefax header
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Customised freefax header&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("faxTagLine")]
		public string FaxTagLine {
			get {
				return this.FaxTagLine_bfield;
			}
			set {
				this.FaxTagLine_bfield = value;
			}
		}
		
		/// <summary>
		/// FROM email header
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;FROM email header&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("fromEmail")]
		public string FromEmail {
			get {
				return this.FromEmail_bfield;
			}
			set {
				this.FromEmail_bfield = value;
			}
		}
		
		/// <summary>
		/// Name of the sender of the email
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Name of the sender of the email&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("fromName")]
		public string FromName {
			get {
				return this.FromName_bfield;
			}
			set {
				this.FromName_bfield = value;
			}
		}
		
		/// <summary>
		/// Freefax number in international format
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;phoneNumber&quot;,&quot;Description&quot;:&quot;Freefax number in international format&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("number")]
		public string Number {
			get {
				return this.Number_bfield;
			}
			set {
				this.Number_bfield = value;
			}
		}
		
		/// <summary>
		/// Email address to redirect fax response.
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string[]&quot;,&quot;Description&quot;:&quot;Email address to redirect fax response.&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("redirectionEmail")]
		public string[] RedirectionEmail {
			get {
				return this.RedirectionEmail_bfield;
			}
			set {
				this.RedirectionEmail_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Map a possible renew for a specific service
	/// </summary>
	public class ServiceRenewType {
		
		private bool Automatic_bfield;
		
		private bool DeleteAtExpiration_bfield;
		
		private bool Forced_bfield;
		
		private System.Nullable<bool> ManualPayment_bfield;
		
		private System.Nullable<long> Period_bfield;
		
		/// <summary>
		/// The service is automatically renewed
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;The service is automatically renewed&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("automatic")]
		public bool Automatic {
			get {
				return this.Automatic_bfield;
			}
			set {
				this.Automatic_bfield = value;
			}
		}
		
		/// <summary>
		/// The service will be deleted at expiration
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;The service will be deleted at expiration&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("deleteAtExpiration")]
		public bool DeleteAtExpiration {
			get {
				return this.DeleteAtExpiration_bfield;
			}
			set {
				this.DeleteAtExpiration_bfield = value;
			}
		}
		
		/// <summary>
		/// The service forced to be renewed
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;The service forced to be renewed&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("forced")]
		public bool Forced {
			get {
				return this.Forced_bfield;
			}
			set {
				this.Forced_bfield = value;
			}
		}
		
		/// <summary>
		/// The service needs to be manually renewed and paid
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;The service needs to be manually renewed and paid&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("manualPayment")]
		public System.Nullable<bool> ManualPayment {
			get {
				return this.ManualPayment_bfield;
			}
			set {
				this.ManualPayment_bfield = value;
			}
		}
		
		/// <summary>
		/// period of renew in month
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;period of renew in month&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("period")]
		public System.Nullable<long> Period {
			get {
				return this.Period_bfield;
			}
			set {
				this.Period_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Details about a Service
	/// </summary>
	public class ServicesService {
		
		private bool CanDeleteAtExpiration_bfield;
		
		private string ContactAdmin_bfield;
		
		private string ContactBilling_bfield;
		
		private string ContactTech_bfield;
		
		private string Creation_bfield;
		
		private string Domain_bfield;
		
		private string EngagedUpTo_bfield;
		
		private string Expiration_bfield;
		
		private long[] PossibleRenewPeriod_bfield;
		
		private ServiceRenewType Renew_bfield;
		
		private string RenewalType_bfield;
		
		private long ServiceId_bfield;
		
		private string Status_bfield;
		
		/// <summary>
		/// Indicates that the service can be set up to be deleted at expiration
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Indicates that the service can be set up to be deleted at expiration&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("canDeleteAtExpiration")]
		public bool CanDeleteAtExpiration {
			get {
				return this.CanDeleteAtExpiration_bfield;
			}
			set {
				this.CanDeleteAtExpiration_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("contactAdmin")]
		public string ContactAdmin {
			get {
				return this.ContactAdmin_bfield;
			}
			set {
				this.ContactAdmin_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("contactBilling")]
		public string ContactBilling {
			get {
				return this.ContactBilling_bfield;
			}
			set {
				this.ContactBilling_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("contactTech")]
		public string ContactTech {
			get {
				return this.ContactTech_bfield;
			}
			set {
				this.ContactTech_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;date&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("creation")]
		public string Creation {
			get {
				return this.Creation_bfield;
			}
			set {
				this.Creation_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("domain")]
		public string Domain {
			get {
				return this.Domain_bfield;
			}
			set {
				this.Domain_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;date&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("engagedUpTo")]
		public string EngagedUpTo {
			get {
				return this.EngagedUpTo_bfield;
			}
			set {
				this.EngagedUpTo_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;date&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("expiration")]
		public string Expiration {
			get {
				return this.Expiration_bfield;
			}
			set {
				this.Expiration_bfield = value;
			}
		}
		
		/// <summary>
		/// All the possible renew period of your service in month
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long[]&quot;,&quot;Description&quot;:&quot;All the possible renew period of your service in month&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("possibleRenewPeriod")]
		public long[] PossibleRenewPeriod {
			get {
				return this.PossibleRenewPeriod_bfield;
			}
			set {
				this.PossibleRenewPeriod_bfield = value;
			}
		}
		
		/// <summary>
		/// Way of handling the renew
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;service.RenewType&quot;,&quot;Description&quot;:&quot;Way of handling the renew&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("renew")]
		public ServiceRenewType Renew {
			get {
				return this.Renew_bfield;
			}
			set {
				this.Renew_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;service.RenewalTypeEnum&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("renewalType")]
		public string RenewalType {
			get {
				return this.RenewalType_bfield;
			}
			set {
				this.RenewalType_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("serviceId")]
		public long ServiceId {
			get {
				return this.ServiceId_bfield;
			}
			set {
				this.ServiceId_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;service.StateEnum&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("status")]
		public string Status {
			get {
				return this.Status_bfield;
			}
			set {
				this.Status_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Number of tries when sending a fax
	/// </summary>
	public class TelephonyFaxSendingTries {
	}
	
	/// <summary>
	/// Voicemail configuration
	/// </summary>
	public class TelephonyServiceVoicemailNotifications {
		
		private string Email_bfield;
		
		private string Type_bfield;
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("email")]
		public string Email {
			get {
				return this.Email_bfield;
			}
			set {
				this.Email_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;telephony.ServiceVoicemailMailOptionEnum&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("type")]
		public string Type {
			get {
				return this.Type_bfield;
			}
			set {
				this.Type_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Internal and external numbers for voicemail service
	/// </summary>
	public class TelephonyVoicemailNumbers {
		
		private string External_bfield;
		
		private string Internal_bfield;
		
		/// <summary>
		/// The external voicemail number
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;The external voicemail number&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("external")]
		public string External {
			get {
				return this.External_bfield;
			}
			set {
				this.External_bfield = value;
			}
		}
		
		/// <summary>
		/// The internal voicemail number
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;The internal voicemail number&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("internal")]
		public string Internal {
			get {
				return this.Internal_bfield;
			}
			set {
				this.Internal_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Voicemail Properties
	/// </summary>
	public class TelephonyVoicemailProperties {
		
		private string AnnouceMessage_bfield;
		
		private string AudioFormat_bfield;
		
		private bool DoNotRecord_bfield;
		
		private bool ForcePassword_bfield;
		
		private string FromEmail_bfield;
		
		private string FromName_bfield;
		
		private System.Nullable<long> FullGreetingSoundId_bfield;
		
		private string GreetingType_bfield;
		
		private bool IsNewVersion_bfield;
		
		private bool KeepMessage_bfield;
		
		private string[] RedirectionEmails_bfield;
		
		private System.Nullable<long> ShortGreetingSoundId_bfield;
		
		private bool TemporaryGreetingActivated_bfield;
		
		private System.Nullable<long> TemporaryGreetingSoundId_bfield;
		
		private long UnreadMessages_bfield;
		
		/// <summary>
		/// Name of the voicemail panel announce file
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Name of the voicemail panel announce file&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("annouceMessage")]
		public string AnnouceMessage {
			get {
				return this.AnnouceMessage_bfield;
			}
			set {
				this.AnnouceMessage_bfield = value;
			}
		}
		
		/// <summary>
		/// Format of the voicemail audio file attached to emails
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;telephony.ServiceVoicemailAudioFormatEnum&quot;,&quot;Description&quot;:&quot;Format of the voicemail audio file attached to emails&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("audioFormat")]
		public string AudioFormat {
			get {
				return this.AudioFormat_bfield;
			}
			set {
				this.AudioFormat_bfield = value;
			}
		}
		
		/// <summary>
		/// Don't allow callers to leave voicemails
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Don't allow callers to leave voicemails&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("doNotRecord")]
		public bool DoNotRecord {
			get {
				return this.DoNotRecord_bfield;
			}
			set {
				this.DoNotRecord_bfield = value;
			}
		}
		
		/// <summary>
		/// Force password request to access the voicemail panel
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Force password request to access the voicemail panel&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("forcePassword")]
		public bool ForcePassword {
			get {
				return this.ForcePassword_bfield;
			}
			set {
				this.ForcePassword_bfield = value;
			}
		}
		
		/// <summary>
		/// Email address from which emails will be sent
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Email address from which emails will be sent&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("fromEmail")]
		public string FromEmail {
			get {
				return this.FromEmail_bfield;
			}
			set {
				this.FromEmail_bfield = value;
			}
		}
		
		/// <summary>
		/// Name from which emails will be sent
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Name from which emails will be sent&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("fromName")]
		public string FromName {
			get {
				return this.FromName_bfield;
			}
			set {
				this.FromName_bfield = value;
			}
		}
		
		/// <summary>
		/// Sound ID of the long greeeting
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Sound ID of the long greeeting&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("fullGreetingSoundId")]
		public System.Nullable<long> FullGreetingSoundId {
			get {
				return this.FullGreetingSoundId_bfield;
			}
			set {
				this.FullGreetingSoundId_bfield = value;
			}
		}
		
		/// <summary>
		/// Type of the greeting to play
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;telephony.VoicemailGreetingEnum&quot;,&quot;Description&quot;:&quot;Type of the greeting to play&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("greetingType")]
		public string GreetingType {
			get {
				return this.GreetingType_bfield;
			}
			set {
				this.GreetingType_bfield = value;
			}
		}
		
		/// <summary>
		/// Current voicemail version
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Current voicemail version&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("isNewVersion")]
		public bool IsNewVersion {
			get {
				return this.IsNewVersion_bfield;
			}
			set {
				this.IsNewVersion_bfield = value;
			}
		}
		
		/// <summary>
		/// Don't delete voicemails after they've been sent by email
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Don't delete voicemails after they've been sent by email&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("keepMessage")]
		public bool KeepMessage {
			get {
				return this.KeepMessage_bfield;
			}
			set {
				this.KeepMessage_bfield = value;
			}
		}
		
		/// <summary>
		/// Email addresses to notify when a new voicemail is left
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;telephony.ServiceVoicemailNotifications[]&quot;,&quot;Description&quot;:&quot;Email addresses to notify when a new voicemail is left&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("redirectionEmails")]
		public string[] RedirectionEmails {
			get {
				return this.RedirectionEmails_bfield;
			}
			set {
				this.RedirectionEmails_bfield = value;
			}
		}
		
		/// <summary>
		/// Sound ID of the short greeting played before an automated message
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Sound ID of the short greeting played before an automated message&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("shortGreetingSoundId")]
		public System.Nullable<long> ShortGreetingSoundId {
			get {
				return this.ShortGreetingSoundId_bfield;
			}
			set {
				this.ShortGreetingSoundId_bfield = value;
			}
		}
		
		/// <summary>
		/// Play the temporary greeting instead of the regular one
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Play the temporary greeting instead of the regular one&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("temporaryGreetingActivated")]
		public bool TemporaryGreetingActivated {
			get {
				return this.TemporaryGreetingActivated_bfield;
			}
			set {
				this.TemporaryGreetingActivated_bfield = value;
			}
		}
		
		/// <summary>
		/// Sound ID of the temporary greeeting
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Sound ID of the temporary greeeting&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("temporaryGreetingSoundId")]
		public System.Nullable<long> TemporaryGreetingSoundId {
			get {
				return this.TemporaryGreetingSoundId_bfield;
			}
			set {
				this.TemporaryGreetingSoundId_bfield = value;
			}
		}
		
		/// <summary>
		/// Quantity of unread voicemails
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Quantity of unread voicemails&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("unreadMessages")]
		public long UnreadMessages {
			get {
				return this.UnreadMessages_bfield;
			}
			set {
				this.UnreadMessages_bfield = value;
			}
		}
	}
}
