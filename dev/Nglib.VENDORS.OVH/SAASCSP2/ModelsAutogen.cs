//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Newtonsoft.Json;
using Nglib.VENDORS.OVH.SHARED;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Threading.Tasks;


// [GET] "/saas/csp2"  string[]--
//[GET] "/saas/csp2/{serviceName}"  saas.csp2.OfficeTenant--serviceName
//[PUT] "/saas/csp2/{serviceName}"  void--,serviceName
//[GET] "/saas/csp2/{serviceName}/billingPeriodPeaks"  saas.csp2.BillingStatistics--serviceName
//[POST] "/saas/csp2/{serviceName}/changeAdministratorPassword"  saas.csp2.OfficeTask--newPassword,serviceName
//[POST] "/saas/csp2/{serviceName}/configureDomain"  saas.csp2.OfficeTask--domain,serviceName,supportedServices
//[GET] "/saas/csp2/{serviceName}/orderableLicenses"  long[]--serviceName
//[GET] "/saas/csp2/{serviceName}/orderableLicenses/{id}"  saas.csp2.OfficeLicence--id,serviceName
//[GET] "/saas/csp2/{serviceName}/serviceInfos"  services.Service--serviceName
//[PUT] "/saas/csp2/{serviceName}/serviceInfos"  void--,serviceName
//[GET] "/saas/csp2/{serviceName}/subscription"  long[]--serviceName
//[POST] "/saas/csp2/{serviceName}/subscription"  saas.csp2.OfficeTask--licenseId,quantity,serviceName
//[DELETE] "/saas/csp2/{serviceName}/subscription/{id}"  saas.csp2.OfficeTask--id,serviceName
//[GET] "/saas/csp2/{serviceName}/subscription/{id}"  saas.csp2.OfficeSubscription--id,serviceName
//[GET] "/saas/csp2/{serviceName}/subscription/{id}/addonsSubscriptionIds"  long[]--id,serviceName
//[GET] "/saas/csp2/{serviceName}/subscription/{id}/availableAddonLicenses"  long[]--id,serviceName
//[POST] "/saas/csp2/{serviceName}/subscription/{id}/changeQuantity"  saas.csp2.OfficeTask--id,quantity,serviceName
//[POST] "/saas/csp2/{serviceName}/subscription/{id}/orderAddon"  saas.csp2.OfficeTask--id,licenseId,quantity,serviceName
//[GET] "/saas/csp2/{serviceName}/task"  long[]--serviceName
//[GET] "/saas/csp2/{serviceName}/task/{id}"  saas.csp2.OfficeTask--id,serviceName
//[GET] "/saas/csp2/{serviceName}/usageStatistics"  saas.csp2.Statistics[]--serviceName,timePeriod
namespace Nglib.VENDORS.OVH.SAASCSP2 {
	
	
	/// <summary>
	/// Period of time used to determine license statistics
	/// </summary>
	public enum MsServicesLicensePeriodEnum {
		
		[EnumMember(Value="lastMonth")]
		LastMonth,
		
		[EnumMember(Value="lastQuarter")]
		LastQuarter,
		
		[EnumMember(Value="lastWeek")]
		LastWeek,
		
		[EnumMember(Value="lastYear")]
		LastYear,
	}
	
	/// <summary>
	/// Office license's type
	/// </summary>
	public enum Saascsp2LicenseTypeEnum {
		
		[EnumMember(Value="ADDON")]
		ADDON,
		
		[EnumMember(Value="NON-SPECIFIC")]
		NON_SPECIFIC,
	}
	
	/// <summary>
	/// Office tenant state
	/// </summary>
	public enum Saascsp2ServiceStateEnum {
		
		[EnumMember(Value="creating")]
		Creating,
		
		[EnumMember(Value="inMaintenance")]
		InMaintenance,
		
		[EnumMember(Value="ok")]
		Ok,
		
		[EnumMember(Value="suspended")]
		Suspended,
		
		[EnumMember(Value="suspending")]
		Suspending,
	}
	
	/// <summary>
	/// Supported services of Office365
	/// </summary>
	public enum Saascsp2SupportedServiceEnum {
		
		[EnumMember(Value="Email")]
		Email,
		
		[EnumMember(Value="Intune")]
		Intune,
		
		[EnumMember(Value="OfficeCommunicationsOnline")]
		OfficeCommunicationsOnline,
	}
	
	/// <summary>
	/// Office CSP2 task status
	/// </summary>
	public enum Saascsp2TaskStatusEnum {
		
		[EnumMember(Value="cancelled")]
		Cancelled,
		
		[EnumMember(Value="doing")]
		Doing,
		
		[EnumMember(Value="done")]
		Done,
		
		[EnumMember(Value="error")]
		Error,
		
		[EnumMember(Value="todo")]
		Todo,
	}
	
	/// <summary>
	/// Detailed renewal type of a service
	/// </summary>
	public enum ServiceRenewalTypeEnum {
		
		[EnumMember(Value="automaticForcedProduct")]
		AutomaticForcedProduct,
		
		[EnumMember(Value="automaticV2012")]
		AutomaticV2012,
		
		[EnumMember(Value="automaticV2014")]
		AutomaticV2014,
		
		[EnumMember(Value="automaticV2016")]
		AutomaticV2016,
		
		[EnumMember(Value="manual")]
		Manual,
		
		[EnumMember(Value="oneShot")]
		OneShot,
		
		[EnumMember(Value="option")]
		Option,
	}
	
	public enum ServiceStateEnum {
		
		[EnumMember(Value="expired")]
		Expired,
		
		[EnumMember(Value="inCreation")]
		InCreation,
		
		[EnumMember(Value="ok")]
		Ok,
		
		[EnumMember(Value="pendingDebt")]
		PendingDebt,
		
		[EnumMember(Value="unPaid")]
		UnPaid,
	}
	
	/// <summary>
	/// Billing statistics for the current period
	/// </summary>
	public class Saascsp2BillingStatistics {
		
		private string EndDate_bfield;
		
		private string[] Lines_bfield;
		
		private string StartDate_bfield;
		
		/// <summary>
		/// End of the billing period
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;date&quot;,&quot;Description&quot;:&quot;End of the billing period&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("endDate")]
		public string EndDate {
			get {
				return this.EndDate_bfield;
			}
			set {
				this.EndDate_bfield = value;
			}
		}
		
		/// <summary>
		/// List of lines associated to this statistics entity.
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;saas.csp2.BillingStatisticsLine[]&quot;,&quot;Description&quot;:&quot;List of lines associated to this statistics entity.&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("lines")]
		public string[] Lines {
			get {
				return this.Lines_bfield;
			}
			set {
				this.Lines_bfield = value;
			}
		}
		
		/// <summary>
		/// Start of the billing period
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;date&quot;,&quot;Description&quot;:&quot;Start of the billing period&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("startDate")]
		public string StartDate {
			get {
				return this.StartDate_bfield;
			}
			set {
				this.StartDate_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Billing statistics line.
	/// </summary>
	public class Saascsp2BillingStatisticsLine {
		
		private long LicenceId_bfield;
		
		private string LicenceName_bfield;
		
		private long PeakCount_bfield;
		
		/// <summary>
		/// Id of the Office license.
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Id of the Office license.&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("licenceId")]
		public long LicenceId {
			get {
				return this.LicenceId_bfield;
			}
			set {
				this.LicenceId_bfield = value;
			}
		}
		
		/// <summary>
		/// Name of the Office license.
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Name of the Office license.&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("licenceName")]
		public string LicenceName {
			get {
				return this.LicenceName_bfield;
			}
			set {
				this.LicenceName_bfield = value;
			}
		}
		
		/// <summary>
		/// Maximum count of simultaneous activated licences.
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Maximum count of simultaneous activated licences.&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("peakCount")]
		public long PeakCount {
			get {
				return this.PeakCount_bfield;
			}
			set {
				this.PeakCount_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Office licence
	/// </summary>
	public class Saascsp2OfficeLicence {
		
		private long Id_bfield;
		
		private string LicenceType_bfield;
		
		private System.Nullable<long> Limit_bfield;
		
		private string Name_bfield;
		
		private bool NewSeatsAllowed_bfield;
		
		private bool NewSubscriptionsAllowed_bfield;
		
		/// <summary>
		/// License unique identifier
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;License unique identifier&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("id")]
		public long Id {
			get {
				return this.Id_bfield;
			}
			set {
				this.Id_bfield = value;
			}
		}
		
		/// <summary>
		/// License's type, indicates if the licence is standalone or an addon
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;saas.csp2.LicenseTypeEnum&quot;,&quot;Description&quot;:&quot;License's type, indicates if the licence is standalone or an addon&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("licenceType")]
		public string LicenceType {
			get {
				return this.LicenceType_bfield;
			}
			set {
				this.LicenceType_bfield = value;
			}
		}
		
		/// <summary>
		/// Maximum purchasable license
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Maximum purchasable license&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("limit")]
		public System.Nullable<long> Limit {
			get {
				return this.Limit_bfield;
			}
			set {
				this.Limit_bfield = value;
			}
		}
		
		/// <summary>
		/// License name
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;License name&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("name")]
		public string Name {
			get {
				return this.Name_bfield;
			}
			set {
				this.Name_bfield = value;
			}
		}
		
		/// <summary>
		/// Whether or not it is possible to add new seats on subscriptions of this licence type
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Whether or not it is possible to add new seats on subscriptions of this licence type&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("newSeatsAllowed")]
		public bool NewSeatsAllowed {
			get {
				return this.NewSeatsAllowed_bfield;
			}
			set {
				this.NewSeatsAllowed_bfield = value;
			}
		}
		
		/// <summary>
		/// Whether or not this licence type is allowed for new subscriptions
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Whether or not this licence type is allowed for new subscriptions&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("newSubscriptionsAllowed")]
		public bool NewSubscriptionsAllowed {
			get {
				return this.NewSubscriptionsAllowed_bfield;
			}
			set {
				this.NewSubscriptionsAllowed_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Office subscription
	/// </summary>
	public class Saascsp2OfficeSubscription {
		
		private System.DateTime CreationDate_bfield;
		
		private long Id_bfield;
		
		private System.Nullable<System.DateTime> LastUpdate_bfield;
		
		private long LicenseId_bfield;
		
		private long Quantity_bfield;
		
		private string Status_bfield;
		
		private long TaskPendingId_bfield;
		
		/// <summary>
		/// Creation date
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Creation date&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("creationDate")]
		public System.DateTime CreationDate {
			get {
				return this.CreationDate_bfield;
			}
			set {
				this.CreationDate_bfield = value;
			}
		}
		
		/// <summary>
		/// Subscription's unique identifier
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Subscription's unique identifier&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("id")]
		public long Id {
			get {
				return this.Id_bfield;
			}
			set {
				this.Id_bfield = value;
			}
		}
		
		/// <summary>
		/// Last update date
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Last update date&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("lastUpdate")]
		public System.Nullable<System.DateTime> LastUpdate {
			get {
				return this.LastUpdate_bfield;
			}
			set {
				this.LastUpdate_bfield = value;
			}
		}
		
		/// <summary>
		/// License's type id
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;License's type id&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("licenseId")]
		public long LicenseId {
			get {
				return this.LicenseId_bfield;
			}
			set {
				this.LicenseId_bfield = value;
			}
		}
		
		/// <summary>
		/// Number of available licenses
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Number of available licenses&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("quantity")]
		public long Quantity {
			get {
				return this.Quantity_bfield;
			}
			set {
				this.Quantity_bfield = value;
			}
		}
		
		/// <summary>
		/// Subscription's status
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Subscription's status&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("status")]
		public string Status {
			get {
				return this.Status_bfield;
			}
			set {
				this.Status_bfield = value;
			}
		}
		
		/// <summary>
		/// Pending task's unique identifier
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Pending task's unique identifier&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("taskPendingId")]
		public long TaskPendingId {
			get {
				return this.TaskPendingId_bfield;
			}
			set {
				this.TaskPendingId_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Office task
	/// </summary>
	public class Saascsp2OfficeTask {
		
		private System.Nullable<System.DateTime> FinishDate_bfield;
		
		private string Function_bfield;
		
		private long Id_bfield;
		
		private string Status_bfield;
		
		private System.DateTime TodoDate_bfield;
		
		/// <summary>
		/// Completion date
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Completion date&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("finishDate")]
		public System.Nullable<System.DateTime> FinishDate {
			get {
				return this.FinishDate_bfield;
			}
			set {
				this.FinishDate_bfield = value;
			}
		}
		
		/// <summary>
		/// Function name
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Function name&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("function")]
		public string Function {
			get {
				return this.Function_bfield;
			}
			set {
				this.Function_bfield = value;
			}
		}
		
		/// <summary>
		/// Unique identifier of the task
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Unique identifier of the task&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("id")]
		public long Id {
			get {
				return this.Id_bfield;
			}
			set {
				this.Id_bfield = value;
			}
		}
		
		/// <summary>
		/// Task state
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;saas.csp2.TaskStatusEnum&quot;,&quot;Description&quot;:&quot;Task state&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("status")]
		public string Status {
			get {
				return this.Status_bfield;
			}
			set {
				this.Status_bfield = value;
			}
		}
		
		/// <summary>
		/// Creation date
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Creation date&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("todoDate")]
		public System.DateTime TodoDate {
			get {
				return this.TodoDate_bfield;
			}
			set {
				this.TodoDate_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Office tenant
	/// </summary>
	public class Saascsp2OfficeTenant {
		
		private string Address_bfield;
		
		private string City_bfield;
		
		private System.DateTime CreationDate_bfield;
		
		private string DisplayName_bfield;
		
		private string Email_bfield;
		
		private string FirstName_bfield;
		
		private string LastName_bfield;
		
		private string Phone_bfield;
		
		private string ServiceName_bfield;
		
		private string Status_bfield;
		
		private string ZipCode_bfield;
		
		/// <summary>
		/// Contact's address line
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Contact's address line&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("address")]
		public string Address {
			get {
				return this.Address_bfield;
			}
			set {
				this.Address_bfield = value;
			}
		}
		
		/// <summary>
		/// Contact's city
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Contact's city&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("city")]
		public string City {
			get {
				return this.City_bfield;
			}
			set {
				this.City_bfield = value;
			}
		}
		
		/// <summary>
		/// Creation date
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;datetime&quot;,&quot;Description&quot;:&quot;Creation date&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("creationDate")]
		public System.DateTime CreationDate {
			get {
				return this.CreationDate_bfield;
			}
			set {
				this.CreationDate_bfield = value;
			}
		}
		
		/// <summary>
		/// Tenant's display name
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Tenant's display name&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("displayName")]
		public string DisplayName {
			get {
				return this.DisplayName_bfield;
			}
			set {
				this.DisplayName_bfield = value;
			}
		}
		
		/// <summary>
		/// Contact's email address
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Contact's email address&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("email")]
		public string Email {
			get {
				return this.Email_bfield;
			}
			set {
				this.Email_bfield = value;
			}
		}
		
		/// <summary>
		/// Contact's first name
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Contact's first name&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("firstName")]
		public string FirstName {
			get {
				return this.FirstName_bfield;
			}
			set {
				this.FirstName_bfield = value;
			}
		}
		
		/// <summary>
		/// Contact's last name
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Contact's last name&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("lastName")]
		public string LastName {
			get {
				return this.LastName_bfield;
			}
			set {
				this.LastName_bfield = value;
			}
		}
		
		/// <summary>
		/// Primary phone number
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;phoneNumber&quot;,&quot;Description&quot;:&quot;Primary phone number&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("phone")]
		public string Phone {
			get {
				return this.Phone_bfield;
			}
			set {
				this.Phone_bfield = value;
			}
		}
		
		/// <summary>
		/// Internal service name
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Internal service name&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("serviceName")]
		public string ServiceName {
			get {
				return this.ServiceName_bfield;
			}
			set {
				this.ServiceName_bfield = value;
			}
		}
		
		/// <summary>
		/// Tenant's status
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;saas.csp2.ServiceStateEnum&quot;,&quot;Description&quot;:&quot;Tenant's status&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("status")]
		public string Status {
			get {
				return this.Status_bfield;
			}
			set {
				this.Status_bfield = value;
			}
		}
		
		/// <summary>
		/// Contact's zip code
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Contact's zip code&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("zipCode")]
		public string ZipCode {
			get {
				return this.ZipCode_bfield;
			}
			set {
				this.ZipCode_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// License usage statistics.
	/// </summary>
	public class Saascsp2Statistics {
		
		private string Date_bfield;
		
		private string[] Lines_bfield;
		
		/// <summary>
		/// Date of the statistics.
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;date&quot;,&quot;Description&quot;:&quot;Date of the statistics.&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("date")]
		public string Date {
			get {
				return this.Date_bfield;
			}
			set {
				this.Date_bfield = value;
			}
		}
		
		/// <summary>
		/// List of lines associated to this statistics entity.
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;saas.csp2.StatisticsLine[]&quot;,&quot;Description&quot;:&quot;List of lines associated to this statistics entity.&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("lines")]
		public string[] Lines {
			get {
				return this.Lines_bfield;
			}
			set {
				this.Lines_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// License usage statistics line.
	/// </summary>
	public class Saascsp2StatisticsLine {
		
		private long EndOfDayCount_bfield;
		
		private long LicenceId_bfield;
		
		private string LicenceName_bfield;
		
		private long PeakCount_bfield;
		
		/// <summary>
		/// Count of activated licenses at the end of the day.
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Count of activated licenses at the end of the day.&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("endOfDayCount")]
		public long EndOfDayCount {
			get {
				return this.EndOfDayCount_bfield;
			}
			set {
				this.EndOfDayCount_bfield = value;
			}
		}
		
		/// <summary>
		/// Id of the Office license.
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Id of the Office license.&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("licenceId")]
		public long LicenceId {
			get {
				return this.LicenceId_bfield;
			}
			set {
				this.LicenceId_bfield = value;
			}
		}
		
		/// <summary>
		/// Name of the Office license.
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:&quot;Name of the Office license.&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("licenceName")]
		public string LicenceName {
			get {
				return this.LicenceName_bfield;
			}
			set {
				this.LicenceName_bfield = value;
			}
		}
		
		/// <summary>
		/// Maximum count of simultaneous activated licences.
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;Maximum count of simultaneous activated licences.&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("peakCount")]
		public long PeakCount {
			get {
				return this.PeakCount_bfield;
			}
			set {
				this.PeakCount_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Map a possible renew for a specific service
	/// </summary>
	public class ServiceRenewType {
		
		private bool Automatic_bfield;
		
		private bool DeleteAtExpiration_bfield;
		
		private bool Forced_bfield;
		
		private System.Nullable<bool> ManualPayment_bfield;
		
		private System.Nullable<long> Period_bfield;
		
		/// <summary>
		/// The service is automatically renewed
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;The service is automatically renewed&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("automatic")]
		public bool Automatic {
			get {
				return this.Automatic_bfield;
			}
			set {
				this.Automatic_bfield = value;
			}
		}
		
		/// <summary>
		/// The service will be deleted at expiration
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;The service will be deleted at expiration&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("deleteAtExpiration")]
		public bool DeleteAtExpiration {
			get {
				return this.DeleteAtExpiration_bfield;
			}
			set {
				this.DeleteAtExpiration_bfield = value;
			}
		}
		
		/// <summary>
		/// The service forced to be renewed
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;The service forced to be renewed&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("forced")]
		public bool Forced {
			get {
				return this.Forced_bfield;
			}
			set {
				this.Forced_bfield = value;
			}
		}
		
		/// <summary>
		/// The service needs to be manually renewed and paid
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;The service needs to be manually renewed and paid&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("manualPayment")]
		public System.Nullable<bool> ManualPayment {
			get {
				return this.ManualPayment_bfield;
			}
			set {
				this.ManualPayment_bfield = value;
			}
		}
		
		/// <summary>
		/// period of renew in month
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:&quot;period of renew in month&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("period")]
		public System.Nullable<long> Period {
			get {
				return this.Period_bfield;
			}
			set {
				this.Period_bfield = value;
			}
		}
	}
	
	/// <summary>
	/// Details about a Service
	/// </summary>
	public class ServicesService {
		
		private bool CanDeleteAtExpiration_bfield;
		
		private string ContactAdmin_bfield;
		
		private string ContactBilling_bfield;
		
		private string ContactTech_bfield;
		
		private string Creation_bfield;
		
		private string Domain_bfield;
		
		private string EngagedUpTo_bfield;
		
		private string Expiration_bfield;
		
		private long[] PossibleRenewPeriod_bfield;
		
		private ServiceRenewType Renew_bfield;
		
		private string RenewalType_bfield;
		
		private long ServiceId_bfield;
		
		private string Status_bfield;
		
		/// <summary>
		/// Indicates that the service can be set up to be deleted at expiration
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;boolean&quot;,&quot;Description&quot;:&quot;Indicates that the service can be set up to be deleted at expiration&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("canDeleteAtExpiration")]
		public bool CanDeleteAtExpiration {
			get {
				return this.CanDeleteAtExpiration_bfield;
			}
			set {
				this.CanDeleteAtExpiration_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("contactAdmin")]
		public string ContactAdmin {
			get {
				return this.ContactAdmin_bfield;
			}
			set {
				this.ContactAdmin_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("contactBilling")]
		public string ContactBilling {
			get {
				return this.ContactBilling_bfield;
			}
			set {
				this.ContactBilling_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("contactTech")]
		public string ContactTech {
			get {
				return this.ContactTech_bfield;
			}
			set {
				this.ContactTech_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;date&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("creation")]
		public string Creation {
			get {
				return this.Creation_bfield;
			}
			set {
				this.Creation_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;string&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("domain")]
		public string Domain {
			get {
				return this.Domain_bfield;
			}
			set {
				this.Domain_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;date&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("engagedUpTo")]
		public string EngagedUpTo {
			get {
				return this.EngagedUpTo_bfield;
			}
			set {
				this.EngagedUpTo_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;date&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("expiration")]
		public string Expiration {
			get {
				return this.Expiration_bfield;
			}
			set {
				this.Expiration_bfield = value;
			}
		}
		
		/// <summary>
		/// All the possible renew period of your service in month
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;long[]&quot;,&quot;Description&quot;:&quot;All the possible renew period of your service in month&quot;,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("possibleRenewPeriod")]
		public long[] PossibleRenewPeriod {
			get {
				return this.PossibleRenewPeriod_bfield;
			}
			set {
				this.PossibleRenewPeriod_bfield = value;
			}
		}
		
		/// <summary>
		/// Way of handling the renew
		/// {&quot;CanBeNull&quot;:true,&quot;Type&quot;:&quot;service.RenewType&quot;,&quot;Description&quot;:&quot;Way of handling the renew&quot;,&quot;Readonly&quot;:false}
		/// </summary>
		[JsonProperty("renew")]
		public ServiceRenewType Renew {
			get {
				return this.Renew_bfield;
			}
			set {
				this.Renew_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;service.RenewalTypeEnum&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("renewalType")]
		public string RenewalType {
			get {
				return this.RenewalType_bfield;
			}
			set {
				this.RenewalType_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;long&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("serviceId")]
		public long ServiceId {
			get {
				return this.ServiceId_bfield;
			}
			set {
				this.ServiceId_bfield = value;
			}
		}
		
		/// <summary>
		/// 
		/// {&quot;CanBeNull&quot;:false,&quot;Type&quot;:&quot;service.StateEnum&quot;,&quot;Description&quot;:null,&quot;Readonly&quot;:true}
		/// </summary>
		[JsonProperty("status")]
		public string Status {
			get {
				return this.Status_bfield;
			}
			set {
				this.Status_bfield = value;
			}
		}
	}
}
